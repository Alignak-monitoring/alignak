CHANGES
=======

* Add test for acknowledge and fix bugs ;
* Add illegal character test
* #324 : arbiter configuration name test
* Fix typo in error message
* Fix pylint
* Fix arbiter
* Fix tests
* Fix requirement for tests
* Rewrite dispatcher + add tests + fix eventhandler unserialize
* Replace localhost address by 127.0.0.1 to prevent problem on linux distributions have ipv4 and ipv6 activated
* Remove ping before all request because it's useless
* Add test_daterange + fix pep8 and pylint in this test file
* Add test for check conf about dependency and fix code in alignak to have sys.exit(2) in this cases
* Pylint and pep8 fixes in tests
* Return in _old because not yet ready
* Fix pylint :p
* Fix pep8
* add test for load config in daemons + fix in code. replace #312
* Fix pep8
* Add test for dependancy and prevent run many check of a host if a check is currently in progress
* Add 2 new tests for dependencies
* Finish fix python 2.6 compat
* Fix format() use with python 2.6
* Fix pep8 and pylint
* Fix freshness expration and no run check and has defined output string + use freshness_state property to define the state of item. references #315
* Add freshness_state for passive_checks. references #315
* Fix full_tst
* Remove tests not yet rechecked
* When start alignak, we start freshness period instead say it's in stale. references #315
* Begin work on dependencies
* Fix full_tst
* ENhance travis file
* Restore test_all_setup.sh file in tests
* Enhance full_tst
* Fix previous commit
* Update full_test
* Update full_test alignak with defaut conf of alignak (not conf copied in test folder)
* Forgotten cfg folder for test :p
* Update test_eventhandler
* Fix pep8 and alignak_test
* Move old config folder and old tests not yet rewriten in _old folder
* Begin rewrite unit tests, begin with rewrite the base alignak_test (not finished) and rewrite test_notifications
* fix eventhandler and add unit tests. closes #309
* Enh: Test - Add test for previous fix
* Fix: Leftovers of unlinking objects
* Fix: Ensure objects are imported when launching alignak to unserialize it later
* Enh : Test - Adapt test to reflect maintenance_period
* Fix: Maintenance period in update_downtimes_and_comments
* Enh: Docs - Fix Readthedoc build
* Replace thread.rlock by queue.Queue for consume result in scheduler. closes #297
* Fix dispatcher with new uuid system
* Fix typo
* Fix: init of alignakobject and brok
* Fix: Macros serialization and solving
* Remove base64 and zlib when send data (inter daemons) and use json in requests for method POST (inter daemons)
* Make Item inherit from AlignakObject to make un-serialize faster
* Enh: Make Action inherit from AlignakObject instead of Item to prevent loop import
* Fix: config uuid
* Remove pickle comment and leftovers
* Enh: Remove get_id method from Action
* Enh: Make Acknowledge depend on AlignakObject
* Enh: Regen doc
* Enh: Docstring in downtime
* Enh: Docstring in schedulingitem
* Enh: Raise exception instead of logging from serialization module
* Enh: Timeperiod attributes
* Enh: Make CommandCall inherit from AlignakObject
* Enh: Replace cPickle by json based serialization
* Add a new class to not have item depend on an alignak object
* Enh: remove useless class
* Enh: Add arg to macro functions to balance unlinking
* Enh: Make Daterange object creation more generic
* Enh: Move trigger linking to scheduling item. Only used by this class
* Unlink objects. Need to add a lot of extra args to scheduling function. Will be merged later in one dict
* Enh: Make Comment inherit from Item
* Enh: uuid for everyone!
* Enh: Make Action, Notification and Check inerits from Item Decouple previous class from their ref method to make serialization easier
* Enh: Remove arb_name parameter from arbiter
* Enh: Remove migrate from arbiter
* Enh: Type in docstring
* Fix: reactionner creation in sched on subrealm
* Enh: Tests - Replicate issue
* Enh: Fix tests
* Enh: Clean travis.yml pylint command
* Enh: Pylint in reactionnerdaemon.py
* Enh: Pylint in arbiterdaemon.py
* Enh: Pylint in schedulerdaemon.py
* Enh: Pylint in brokerdaemon.py
* Enh: Pylint in receiverdaemon.py
* Enh: Pylint in perfdata.py
* Enh: Pylint in datamanager.py
* Enh: Pylint in regenerator.py
* Enh: Pylint in arbiter_interface.py
* Enh: Pylint in broker_interface.py
* Enh: Pylint in generic_interface.py
* Enh: Pylint in item.py
* Enh: Pylint in trigger.py
* Enh: Pylint in satellitelink.py
* Enh: Pylint in hostextinfo.py
* Enh: Pylint in service.py
* Enh: Pylint in timeperiod.py
* Enh: Pylint in contact.py
* Enh: Pylint in config.py
* Enh: Pylint in schedulingitem.py
* Enh: Pylint in serviceextinfo.py
* Enh: Pylint in daemon.py
* Enh: Pylint in worker.py
* Enh: Pylint in property.py
* Enh: Pylint in modulesmanager.py
* Enh: Pylint in daterange.py
* Enh: Pylint in action.py
* Enh: Pylint in import_hook.py
* Enh: Pylint in satellite.py
* Enh: Pylint in acknowledge.py
* Enh: Pylint in basemodule.py
* Enh: Pylint in scheduler.py
* Enh: Pylint in external_command.py
* Enh: Pylint in commandcall.py
* Enh: Pylint in db.py
* Enh: Pylint in db_oracle.py
* Enh: Pylint in util.py
* Enh: Pylint in notification.py
* Enh: Pylint in dependencynode.py
* Enh: Pylint in macroresolver.py
* Enh: Pylint in log.py
* Enh: Pylint in dispatcher.py
* Enh: Pylint in complexexpression.py
* Enh: Pylint - R0912 raise limit
* Enh: Fix pep8 after pylint
* Enh: Pylint - R0913 Low threshold and ignore what's left
* Enh: Pylint - R0912 Low threshold and ignore what's left
* Enh: Pylint - R0902 Low threshold and ignore what's left
* Enh: Pylint - R0914 raise threshold, fix and ignore what's left
* Enh: Pylint - R0903 Low threshold and ignore what's left
* Enh: Pylint - R0915 Raise threshold and ignore what's left
* Enh: Pylint - R0904 Raise threshold and ignore the rest
* Typo fix
* Enh: Pylint - Ignore some rules for now
* Enh: Pylint - C0302, add travis
* Enh: Pylint - C0302, raise limit and ignore what is left
* Enh: Pylint - R0911 in .travis.yml
* Enh: Pylint - R0911 in timeperiod.py
* Enh: Pylint - R0911 in service.py
* Enh: Pylint - R0911 in host.py
* Enh: Pylint - R0911 in external_command.py
* Enh: Pylint - R0911, raise limit
* Enh - Pylint E1001. Ignore until we dropped cPickle
* Enh: Fix pylint version
* Enh - Pylint add new rules
* Enh: - Pylint R0102 in arbiter_interface.py
* Enh: - Pylint R0102 in config.py
* Enh: - Pylint R0102 in schedulingitem.py
* Enh: - Pylint R0102 in daterange.py
* Enh: - Pylint R0102 in check.py
* Enh: - Pylint R0102 in commandcall.py
* Enh: - Pylint R0102 in util.py
* Enh: - Pylint C0413
* Enh: - Pylint W0603
* Enh: - Pylint E0611
* Enh: - Pylint W0102
* Enh: - Pep8
* Enh: - Pylint C0411
* Enh: - Pylint R0101
* Enh: - Pylint W0631
* Enh: - Pylint E0401
* Enh: - Pylint W0221
* Enh: - Pylint R0204
* Enh: - Pylint C0412
* Enh: - Pylint W0621
* Enh: - Pylint E0602
* Enh: - Pylint C0301
* Enh: - Pylint C0113
* Enh: - Pylint W0104 in modulesmanager.py
* Enh: - Pylint R0202 in item.py
* Enh: - Pylint E0213 in trigger.py
* Enh: - Pylint C0122 in util.py
* Enh: - Pylint W0612 add rule to travis
* Enh: - Pylint W0612 in worker.py
* Enh: - Pylint W0612 in util.py
* Enh: - Pylint W0612 in trigger_functions.py
* Enh: - Pylint W0612 in stats.py
* Enh: - Pylint W0612 in scheduler.py
* Enh: - Pylint W0612 in trigger.py
* Enh: - Pylint W0612 in satellitelink.py
* Enh: - Pylint W0612 in service.py
* Enh: - Pylint W0612 in notificationway.py
* Enh: - Pylint W0612 in host.py
* Enh: - Pylint W0612 in arbiterlink.py
* Enh: - Pylint W0612 in config.py
* Enh: - Pylint W0612 in schedulingitem.py
* Enh: - Pylint W0612 in pack.py
* Enh: - Pylint W0612 in modulesmanager.py
* Enh: - Pylint W0612 in perfdata.py
* Enh: - Pylint W0612 in regenerator.py
* Enh: - Pylint W0612 in macroresolver.py
* Enh: - Pylint W0612 in broker_interface.py
* Enh: - Pylint W0612 in graph.py
* Enh: - Pylint W0612 in downtime.py
* Enh: - Pylint W0612 in dispatcher.py
* Enh: - Pylint W0612 in daterange.py
* Enh: - Pylint W0612 in arbiterdaemon.py
* Enh: - Pylint W0612 in schedulerdaemon.py
* Enh: - Pylint W0612 in brokerdaemon.py
* Enh: - Pylint W0612 in receiverdaemon.py
* Enh: - Pylint W0612 in daemon.py
* Enh: Pylint - Add rule to travis file
* Enh: Pylint - R0801 Remove useless fun and simplify get name in extinfo
* Enh: Pylint - R0801 Rework 6f32e24 to remove code duplication
* Enh: Raise the code duplication threshold to 10 common lines
* Enh: Pylint - R0801 for is_correct in Host and Service
* Enh: Pylint - R0801 for daemon parsing options. Replace -v by -V for arbiter
* Enh: Pylint - R0801 for Host and Service propeties
* Enh: Pylint - R0801 for unset_impact_state
* Enh: Pylint - R0801 for setstate and getstate. Remove deprecated if
* Enh: Pylint - R0801 for extinfo object. Remove useless method
* Enh: Tests - Remove var/lib/alignak/modules

0.2
---

* Version 0.2
* 0.2 Changelog
* Enh: Tests - Fix sslv3 test
* Enh: Tests - Fix module as package
* Enh: Remove not used function in core
* Enh: Remove forgot pythonize method and fix docstring in Item
* Enh: Setup.cfg - Stick to the pypi one
* Remove unused function pythonize
* Fix Pylint E1101 and memory problem
* Update db* and disable pylint E1101 because db_cursor not created in DB class
* Fix
* Fix from code review
* Enh pylint E1101
* Fix bug introduced with pylint E1101
* Enh pylint E1101
* Fix pylint E1101 fix (previous commit introduced bug)
* Fix pep8
* Enh pylint E1101 on trigger functions
* Enh pylint E1101 (so fix a bug ^^)
* Enh pylint E1101 on db*
* Enh pylint E1101 on daterange
* Fix pep8 + disable pylintE1101 on numpy because it's a false-positive
* Enh pylint E1101 on action.py
* Pylint E1101 of alignak/comment file
* Update pylint E1101
* Pylint E1101 of alignak/objects/servicegroup
* Update dynamic properties list to ignore in pylint
* Remove pythonize call because not exist in Item class. Pylint E1101
* Pylint E1101 on alignak/objects/realm
* Delete alignak/objects/matchingitem becasue not used
* Update pylint E1101 for alignak/objects/checkmodulation
* Pylint E1101 on alignak/objects/arbiterlink + remove contrib/bin because there are many bugs, so better to remove it
* Pylint E1101 for objects/schedulingitem.py + optimize little code
* Fix pep8
* Fix item.py
* Pylint E1101 objects/item.py + move ack functions to scheduleritem because call from scheduleritem of childs only
* Update and active pylint E1101
* Enh: Init script - Clean and add fallbacks for lsb functions
* Disable pylint to py26
* Fix: Test - remove some installed files
* Enh/Fix: prevent memleak in any module worker who use logging
* Rename module_name and module_type
* Fix author for automatic downtimes. closes #96
* Rewrite 95% function of util in average_percentile
* Enh: Test - Add test for #133
* First step to fix #104, add SIGHUP generation in init script and signal catching in daemon.py
* Enh: Test - Add case for previous rework and edit dispatching test
* Enh: Simplify alive_then_spare_then_deads, closes naparuba/shinken#1493
* Enh: Upgrade pylint version for test and remove deprecated features from pylintrc, remove warning for pylint
* Enh: modules manager: big simplification
* Enhance message, so put in error when conf not valid
* Enh: in debug mode, display command line executed and result (poller, reactionner
* Fix requests requirement to have minimum 2.7.0
* WorkAround: rollback namespace package feature
* Fix fatal error with __version__, so replace with alignak.version import VERSION
* Enh: Clean README and move to docs #36

0.1
---

* Add: 0.1 Changelog
* Enh: Cli - Remove alignak bin
* Update version of alignak to 0.1
* Reorder daemind ini file to have same structure
* Enh: Config - Remove certs, better to generate them
* Enh: Remove shebang on non executable python files
* Enh: Config - Do not set cert file varaible
* Add gzip compression of data of all responses (in cherrypy
* Enh: Doc - Add diagrams
* Fix: Syntax in jenkins script
* Disable verbose coveralls
* Enh: Tests - Don't use import hook on modules_backcompatible
* Fix: pylint & logilab annoying nosetest output
* Fix: unittest pending deprecation
* clean: removed android content in test config files
* clean: removed cfg files with "android" in their name
* Fix #184: remove (not anymore supported) android "support"
* Enh: Tests - Module compatibility
* Update README.rst
* Fix #208
* Enh: Tests - Module compatibility
* Fix #177: rewrote get_key_value_sequence to generate_key_value_sequences
* Enh: factorized a check_objects_from() helper function and use it
* Simpler: 3 for loops -> 2 for loops
* Enh: workaround waiting proper fix/enh
* Enh: TestEndParsingType: factorized a check_object_property() helper function and use it
* Changed Host labels property to ListProp class
* New cfg files organization. So we can understand better
* Enh: Deprecation on id for Brok objects
* Enh: Tests - Keep compat with tests modules
* Enh: Add id property for deprecation warning. Will be remove after. For now keep module compatibility
* Enh: Tests - Rework setup file to remove duplication
* Enh: Pylint - Add ignore for old pylint version (py2.6)
* Enh: Pylint - Add C0103 to rules
* Enh: Pylint - C0103 in schedulingitem.py
* Enh: Pylint - C0103 in check.py
* Enh: Pylint - C0103 in daemons/*.py
* Enh: Pylint - C0103 in d*.py
* Enh: Pylint - C0103 in eventhandler.py
* Enh: Pylint - C0103 in load.py
* Enh: Pylint - C0103 in log.py
* Enh: Pylint - C0103 in macroresolver.py
* Enh: Pylint - C0103 in modulesmanager.py
* Enh: Pylint - C0103 in notification.py
* Enh: Pylint - Extend attribute name length
* Enh: Pylint - C0103 in contact.py
* Enh: Pylint - C0103 in config.py
* Enh: Pylint - C0103 in host.py
* Enh: Pylint - C0103 in timeperiod.py
* Enh: Pylint - C0103 in contactgroup.py
* Enh: Pylint - C0103 in notificationway.py
* Enh: Pylint - C0103 in service.py
* Enh: Pylint - C0103 in servicedependency.py
* Enh: Pylint - C0103 in escalation.py
* Enh: Pylint - C0103 in trigger.py
* Enh: Pylint - C0103 in itemgroup.py
* Enh: Pylint - C0103 in realm.py
* Enh: Pylint - C0103 in property.py
* Enh: Pylint - C0103 in satellite.py
* Enh: Pylint - C0103 in scheduler.py
* Enh: Pylint - C0103 in stats.py
* Enh: Pylint - C0103 in trigger_functions.py
* Enh: Pylint - C0103 in util.py
* Enh: Pylint - Allow more chars per function name
* Enh: Pylint- C0103 in worker and dep
* Enh: Pylint - C0103 in _deprecated_VERSION.py
* Enh: Pylint - C0103 in datamanager.py
* Enh: Pylint - C0103 in perfdata.py
* Enh: Pylint - C0103 in regenerator.py
* Enh: Pylint - C0103 in sorter.py
* Enh: Remove http_backend parameter, not used anymore
* Enh: Tests - Edit default prop for previous fix
* Fix : Parse empty listprop as [] instead of ['']. Keep this behavior for only specific ones naparuba/shinken#1468
* Enh : Test add case to trigger naparuba/shinken#1468
* Enh: Remove some dead code naparuba/shinken#1430
* Enh: Remove some dead code naparuba/shinken#1483
* Enh: Doc - Make compilation work on rtd
* Enh: Rm Files (move to packaging) #91
* Enh: Regen doc
* Enh: Move http_client to http/client
* Enh: Tests - Change file installed, adapt old tests (http and ssl) and add new ones for http server
* Enh: Rework HTTP server part
* Enh: Move ordereddict requirement to the test file
* Enh: Remove irrelevant files #91
* Replace cpickle in brok by ujson because better performances (between 3 times to 10 times
* Fix: Test for daterange
* add test for properties of command and timeperiod + fix
* Clean: remove deprecated usages of many `has(
* Clean: deprecated BaseModule.has() method
* Clean: remove deprecated (known-) usages of Timeperiod.has() method
* Clean: Timeperiod.has() deprecated
* Clean: remove now deprecated (known-) usages of itemgroup.has()
* Clean: deprecate Itemgroup.has(),
* Cleaned deprecation
* Load modules namespace
* Fix properties
* Fix daterange + tests
* 
* Put gitter badge on top of README
* Test workaround
* Enh: Pylint - C0103 for method name in scheduler.py
* Enh: Pylint - C0103 for method name in external_command.py
* Enh: Pylint - Allow longer method name (for external commands)
* Enh: Pylint - C0103 for method name in daemon.py and deps
* Enh: Revert datamanager constant rename. Will handle it with log etc
* Enh: Change decorator to a function not a class
* Enh: Pylint - C0103 for constants names in worker.py
* Enh: Pylint - C0103 for constants names in util.py
* Enh: Pylint - C0103 for constants names in trigger_functions.py
* Enh: Pylint - C0103 for constants names in stats.py
* Enh: Pylint - C0103 for constants names in shinken_import_hook.py
* Enh: Pylint - C0103 for constants names in satellite.py
* Enh: Pylint - C0103 for constants names in satellitelink.py
* Enh: Pylint - C0103 for constants names in property.py
* Enh: Pylint - C0103 for constants names in contact.py
* Enh: Pylint - C0103 for constants names in trigger_functions.py
* Enh: Pylint - C0103 for constants names in trigger.py
* Enh: Pylint - C0103 for constants names in config.py
* Enh: Pylint - C0103 for constants names in schedulingitem.py
* Enh: Pylint - C0103 for constants names in escalation.py
* Enh: Pylint - C0103 for constants names in notificationway.py
* Enh: Pylint - C0103 for constants names in modulesctx.py
* Enh: Pylint - C0103 for constants names in perfdata.py
* Enh: Pylint - C0103 for constants names in logevent.py
* Enh: Pylint - C0103 for constants names in datamanager.py and deps
* Enh: Pylint - C0103 for constants names in log.py
* Enh: Pylint - C0103 for constants names in load.py
* Enh: Pylint - C0103 for constants names in http_client.py and import deps
* Enh: Pylint - C0103 for constants names in db_oracle.py
* Fix initial_state in host and service config. closes #169
* Enh: Pylint - C0103 for constants names in external_command.py
* Enh: Pylint - C0103 for constants names in daemon.py
* Enh: Pylint - C0103 for constants names in alignak_reactionner.py
* Enh: Pylint - C0103 for constants names in alignak_scheduler.py
* Enh: Pylint - C0103 for constants names in alignak_arbiter.py
* Enh: Pylint - C0103 for constants names in basemodule.py
* Enh: Pylint - C0103 for constants names in action.py
* Fix: Tests - Condition for new value is on end
* Enh: Pylint - C0103 on variables names in property.py
* Enh: Pylint - C0103 on variables names in command.py
* Enh: Pylint - C0103 on variables names in realm.py
* Enh: Pylint - C0103 on variables names in schedulingitem.py
* Enh: Pylint - C0103 on variables names in service.py
* Enh: Pylint - C0103 on variables names in module.py
* Enh: Pylint - C0103 on variables names in arbiterlink.py
* Enh: Pylint - C0103 on variables names in timeperiod.py
* Enh: Pylint - C0103 on variables names in serviceescalation.py
* Enh: Pylint - C0103 on variables names in hostdependency.py
* Enh: Pylint - C0103 on variables names in escalation.py
* Enh: Pylint - C0103 on variables names in schedulerlink.py
* Enh: Pylint - C0103 on variables names in contact.py
* Enh: Pylint - C0103 on variables names in servicegroup.py
* Enh: Pylint - C0103 on variables names in matchingitem.py
* Enh: Pylint - C0103 on variables names in servicedependency.py
* Enh: Pylint - C0103 on variables names in satellitelink.py
* Enh: Pylint - C0103 on variables names in resultmodulation.py
* Enh: Pylint - C0103 on variables names in serviceextinfo.py
* Enh: Pylint - C0103 on variables names in host.py
* Enh: Pylint - C0103 on variables names in checkmodulation.py
* Enh: Pylint - C0103 on variables names in notificationway.py
* Enh: Pylint - C0103 on variables names in hostescalation.py
* Enh: Pylint - C0103 on variables names in hostgroup.py
* Enh: Pylint - C0103 on variables names in config.py
* Enh: Pylint - C0103 on variables names in contactgroup.py
* Enh: Pylint - C0103 on variables names in hostextinfo.py and pack.py
* Enh: Pylint - C0103 on variables names in itemgroup.py
* Enh: Pylint - C0103 on variables names in trigger.py
* Enh: Pylint - C0103 on variables names in businessimpactmodulation.py
* Enh: Pylint - C0103 on variables names in item.py
* Enh: Pylint - C0103 on variables names in notification.py
* Enh: Pylint - C0103 on variables names in modulesmanager.py
* Enh: Pylint - C0103 on variables names in logevent.py
* Enh: Pylint - C0103 on variables names in regenerator.py
* Enh: Pylint - C0103 on variables names in datamanager.py
* Enh: Pylint - C0103 on variables names in perfdata.py
* Enh: Pylint - C0103 on variables names in filter.py
* Enh: Pylint - C0103 on variables names in macroresolver.py
* Enh: Pylint - C0103 on variables names in log.py
* Enh: Pylint - C0103 on variables names in http_client.py
* Enh: Pylint - C0103 on variables names in external_command.py
* Enh: Pylint - C0103 on variables names in satellite.py
* Enh: Pylint - C0103 on variables names in scheduler.py
* Enh: Pylint - C0103 on variables names in stats.py
* Enh: Pylint - C0103 on variables names in trigger_functions.py
* Enh: Pylint - C0103 on variables names in util.py
* Enh: Pylint - C0103 on variables names in worker.py
* Enh: Pylint - C0103 on variables names in downtime.py
* Enh: Pylint - C0103 on variables names in dispatcher.py
* Enh: Pylint - C0103 on variables names in dependencynode.py
* Enh: Pylint - C0103 on variables names in daterange.py
* Enh: Pylint - C0103 on variables names in arbiterdaemon.py
* Enh: Pylint - C0103 on variables names in schedulerdaemon.py
* Enh: Pylint - C0103 on variables names in brokerdaemon.py
* Enh: Pylint - C0103 on variables names in receiverdaemon.py
* Enh: Pylint - C0103 on variables names in daemon.py
* Enh: Pylint - C0103 on variables names in commandcall.py
* Enh: Pylint - C0103 on variables names in complexexpression.py
* Enh: Pylint - C0103 on variables names in basemodule.py
* Enh: Pylint - C0103 on variables names in action.py
* Many fixed of daterange class + add 33 unit tests for this
* Enh: Test - Functional test (more to add)
* Fix: Forgot one keywork argument for type rename
* Fix triple double-quote in docstring
* Rewrite dictionary in better form
* Assignment replaced with augmented assignment
* Enh: Pylint - New rule in travis
* Enh: Pylint - W0622
* Enh: Tests for type rename
* Enh: Rename type in function variable
* Enh: Remove useless print to stdout in receiver
* Enh: Add docstring in modules.__init__
* Enh: Remove id in variable name and attribute
* Enh: Pylint (W0401)
* Enh: Pylint (E0102)
* Enh: Pylint (W0122)
* Enh: Pylint (C0326)
* Revert "Pylint"
* Enh: Pylint (C0326)
* Enh: Pylint (C1001)
* Enh: Pylint (W0611)
* Enh: Pylint (W0231)
* Enh: Pylint (W1201)
* Enh: Pylint (C0325)
* Enh: New pylint rules in .travis.yml
* Enh: Pylint (W0105)
* Enh: Pylint (W0640)
* Enh: Pylint (W0633)
* Enh: Pylint (W0623)
* Enh: Pylint (W0404)
* Enh: Pylint (W0311)
* Enh: Pylint (W0223)
* Enh: Pylint (W0109)
* Enh: Pylint (C0204)
* Fix W0141 pylint error
* Fix E1103 pylint error in trigger_functions
* Enh: New pylint rule in .travis.yml
* Enh: Pylint (W0107)
* Enh: New pylint rule in .travis.yml
* Enh: Pylint (W0614)
* Enh: Pylint - Typo in docstring
* Enh: New pylint rule in .travis.yml
* Enh: Pylint (W1401)
* Fix pep8 compliant
* Enh: Add rule in .travis.yml
* Enh: Pylint(W0106)
* Enh: Pylint (W0403
* Enh: Pylint (Review of PR
* Enh: Pylint (Review of PR)
* Enh: Pylint (Review of PR)
* Enh: Pylint (Review of PR)
* Enh: Pylint (Review of PR)
* Enh: Pylint (Review of PR)
* Enh: Regenerate rst doc references
* Add: Pylint docstring test in travis and remove deprecation warning
* Enh: Pylint - Docstring in util.py
* Enh: Pylint - Docstring in modulesmanager.py
* Enh: Pylint - Docstring in perfdata.py
* Enh: Pylint - Docstring in custom_module.py
* Enh: Pylint - Docstring in misc/__init__.py
* Enh: Pylint - Docstring in message.py
* Enh: Pylint - Docstring in macroresolver.py
* Enh: Pylint - Docstring in http_client.py
* Enh: Pylint - Docstring in graph.py
* Enh: Pylint - Docstring in dependencynode.py
* Enh: Pylint - Docstring in bin/alignak_*.py
* Enh: Pylint - Docstring in scheduler.py
* Enh: Pylint - Docstring in external_command.py
* Enh: Pylint - Docstring in dispatcher.py
* Enh: Pylint - Docstring in downtime.py
* Enh: Pylint - Docstring in eventhandler.py
* Enh: Pylint - Docstring in modulesctx.py
* Enh: Pylint - Docstring in notification.py
* Enh: Pylint - Docstring in old_daemon_link.py
* Enh: Pylint - Docstring in property.py
* Enh: Pylint - Docstring in shinken_import_hook.py
* Enh: Pylint - Docstring in stats.py
* Enh: Pylint - Docstring in trigger_functions.py
* Enh: Pylint - Docstring in webui dir
* Enh: Pylint - Docstring in db*.py
* Enh: Pylint - Docstring in arbiterdaemon.py
* Enh: Pylint - Docstring in daemons/__init__.py
* Enh: Pylint - Docstring in schedulerdaemon.py
* Enh: Pylint - Docstring in pollerdaemon.py
* Enh: Pylint - Docstring in _deprecated_VERSION.py
* Enh: Pylint - Docstring in __init__.py
* Enh: Pylint - Skip http_daemon. Need to rewrite that
* Enh: Pylint - Docstring daterange.py
* Enh: Pylint - Docstring contactdowntime.py
* Enh: Pylint - Docstring in complexexpression.py
* Enh: Pylint - Docstring in comment.py
* Enh: Pylint - Docstring in commandcall.py
* Enh: Pylint - Docstring in check.py
* Enh: Pylint - Docstring in brok.py
* Enh: Pylint - Docstring in borg.py
* Enh: Pylint - Docstring in basemodule.py
* Enh: Pylint - Docstring in autoslots.py
* Enh: Pylint - Docstring in acknowledge.py
* Enh: Pylint - Docstring in action.py
* Enh: Pylint - Fix type in item.py
* Enh: Pylint - Docstring in realm.py
* Enh: Pylint - Docstring in notificationway.py + fix contact
* Enh: Pylint - Docstring in schedulingitem.py
* Enh: Pylint - Docstring in matchingitem.py
* Enh: Pylint - Docstring in contact.py
* Enh: Pylint - Docstring in contactgroup.py + fix in host and hostgroup
* Enh : Pylint - Add docstring in brokerdaemon.py
* Enh : Pylint - Add docstring in reactionnerdaemin.py
* Enh: Pylint - Docstring in hostextinfo.py
* Enh: Pylint - Docstring in hostdependency.py and fix in servicedependency.py
* Enh: Pylint - Docstring fix in escalation.py
* Enh: Pylint - Docstring fix in hostescalation.py
* Enh: Pylint - Docstring fix in serviceescalation.py
* Enh: Pylint - Docstring fix in servicedependency.py
* Enh: Pylint - Docstring fix in serviceextinfo.py
* Enh: Pylint - Docstring fix in service.py
* Enh: Pylint - Docstring fix in host.py
* Enh: Pylint - Docstring in service.py
* Enh: Pylint - Docstring in trigger.py
* Enh: Pylint - Docstring in resultmodulation.py
* Enh : Pylint - Add docstring in version.py
* Enh : Pylint - Add docstring in servicegroup.py
* Enh : Pylint - Add docstring in item.py
* Enh : Pylint - Add docstring in pack.py
* Enh : Pylint - Add docstring in macromodulation.py
* Enh: Pylint - Docstring for config.py
* Enh : Pylint - Add docstring in module.py
* Enh : Pylint - Add docstring in schedulerlink.py
* Enh : Pylint - Add docstring in receiverlink.py
* Enh : Pylint - Add docstring in reactionnerlink.py
* Fix pep8 line length
* Enh : Pylint - Add docstring in brokerlink.py
* Enh : Pylint - Add docstring in arbiterlink.py
* Enh: Pylint - Docstring in check/*modulation.py
* Enh: Pylint - Docstring in host.py
* Enh : Pylint - Add docstring in arbiterlink.py
* Enh : Pylint - Add docstring in pollerlink.py
* Enh: Pylint - Skip bottle file. We will remove this file later
* Enh : Pylint - Add docstring in hostgroup.py
* Enh : Pylint - Add docstring in itemgroup.py
* Enh: Pylint - Add doctring in receiverdaemon.py and fix some
* Enh : Pylint - Docstring length
* Enh: Pylint - Typo in daemon.py
* Enh: Pylint - Docstring in satellite.py
* Enh: Keep the doc in the full_api call by using the real one
* Enh: Pylint - Docstring in satellitelink.py
* Enh: Pylint - Docstring in daemon.py
* Enh: Pylint - Docstring in load.py
* Enh: Pylint - Docstring in worker.py
* Enh : Pylint - Add docstring in log.py
* Enh : Pylint - Add docstring in timeperiod.py
* Enh : Pylint - Add docstring in command.py
* Enh: Pylint - Docstring in alignak.misc
* Merging with dev-doc and make alignak/misc/datamanager.py as example
* Enh: Pylint - Docstring in alignak.misc
* Add dev docs
* Remove discovery
* Enh : Rm useless config file
* Enh: Change linux ref to Linux-based system
* Enh: Test - Use process instead of thread for http client
* Enh: README - Explicit statement for file without licence header
* Enh: Typo introduced by myself previously
* Enh: Test - Try to shutdown thread
* Enh: Test - Add unittest call to main
* Enh: Remove ModulePhases class was not used
* Enh : Raise error on unknown realm_members
* Enh: Tests - Test unknown members in realms
* Enh: Add a timeout when joining http_thread so that process is not hanging
* Enh: Remove big parts of contrib. Needed for Savannah approbation
* Enh/clean: replaced pycurl by requests in HTTPClient
* Add: test http_client vs http_daemon
* Enh: Remove memoized and ref. Was not used
* Enh: Extend hook scope for tests. Clean jenkins script
* Enh: Bind timehacker to class so that it is unique
* Enh: Move alignak/clients/* to contrib/clients
* Enh: Remove sorteddict. Not used
* Enh: Test - Fake ShinkenTest for modules tests
* Enh: Tests - Remove easter from test files
* Fix: Tests - Test setup error variable reset unexpectedly
* Fix: get_name could raise AttributeError when called too early
* Enh: Test - Trigger AttributeError with an get_name call in daemonlinks
* Fix: Tests - Path to shinken_arbiter in test_sslv3
* Fix: Tests - Typo in setUpClass. Was not working with unittests
* Fix: #86
* Add alignak and alignak.modules namespaces
* Enh: Tests - Fix jenkins for modules tests
* Enh: Tests - Update pep8 command and add symlink to keep modules tests fine
* Fix: for pypy compat
* Fix: for pypy compat
* Fix: for pypy compatibility
* test enh: print the actual brok logs instead of the brok object
* clean: removed easter
* Clean: daemons "main" modules don't have to tweak like that
* Clean: useless function parameter
* Enh/Fix: replace a possible infinite while loop by a for loop
* Add: Test for setup.py. There are some hacks for Travis
* Cleaned pyro references from most python files
* Clean: first clean of alignak_test module
* Fix: there are still tests failing due to others impacting them
* Enh: Add setproctitle to requirements
* Enh: use a timeout for client http
* Enh: don't stay 20 secs blocked in the test
* Fix: test_scheduler_init: don't daemonize the arbiter
* Enh: Better http daemon/thread management
* Enh: assign the lock before creating the server
* Enh: no need to subclass AlignakTest which is overkill here
* Fix: don't Daemon.do_stop() in http_daemon thread
* Stop modules after manager and http_daemon 
* Enh: WSGIREFBackend http_daemon: proper exit of main http thread
* Enh: Daemon: also join http_thread and shutdown manager for proper shutdown
* Enh: to help debug also log which process received the signal
* Enh: get at least INFO log level for tests
* Enh: try multiprocess for nosetests
* Fix: Coverage misc fixup
* Clean: drop the __import_alignak
* Enh: upgrade pip before install requirements
* Fix: restored good regex in test for termcolor output
* Delete Governance.md
* clean: removed md5crypt lib from our source ; not used
* clean: removed termcolor from our source, add it to requirements
* Clean: import __version__ from alignak
* Enh: handle version info as in PEP-0440 + PEP-0396
* Refactoring setup.py to be more pythonic
* Enh: execute a pip freeze before nosetests
* Update contributing file to link to wiki guidelines
* Fix: test_bad_start: added missing tearDown
* Enh/Add: slightly better load_module for import hook + test case to check it
* Add: travis to gitter notifications
* Fixed coverage badge
* Remove test_shebang.sh
* clean readme
* Fix coveralls
* added .coveralls.yml
* Added coverage badge to README
* clean: removed importlib from our source
* Clean: reuse bottlecore to implement bottlewebui
* clean changelog
* Enh: Remove obviously unknown contrib
* Enh: Regen Shinken header to reflect all authors
* Add: File to regen header from Shinken
* Rmove doc and add it in alignak-doc repository
* Enh/Fix: make modules still compatible with us
* Fix: letter-case typo fixed
* Forgot to remove file
* Enh: DRY: reuse Scheduler.get_checks_status_counts(
* little DRY
* Fix/Enh: Scheduler.get_stats_struct() returned metrics values
* Enh: don't create x sublists from the same base list and loop over them while you can do everything in one loop
* Enh: "max([ x for x in lst if y])" forms
* enh: "len([x for x in y if z])" forms
* Enh: don't create a sublist and loop over it 3 times with the same list
* Trivial enh: len([x for x in lst]) <=> len(lst) ;)
* Enh: Rename project from Shinken to Alignak. Keep headers
* Fix test for shebang
* Clean
* Fix travis file
* Fix test shebang
* Update shebang to #!/usr/bin/env python
* Enh: Use free port + slightly simplified and somehow clarified test_bad_start
* Added Gitter badge
* clean: manage_returns return value is unused
* Enh: do_manage_returns() slight better comments
* Enh: Slightly better get_return_for_passive()
* clean: unnecessary (and "bad") check of return value of scheduler.put_results()
* clean&comments: do_manage_returns() slightly clearer
* Fix/Enh: bad "is" comparison: "'whatever(even [])' is not []" is always True
* Fix: an Items instance doesn't always have a templates attribute
* enh: also use __str__ for __repr__ for Module
* Enh: also use __str__ for __repr__ for Item & Items
* Enh: better Items.__str__ method
* clean: now better handled by Item.__str__
* Enh: set a (more) valuable __str__ for shinken Item class
* Add: a scheduler tick hook
* update template.cfg
* update template.cfg
* update configuration file
* update configuration file
* update configuration file
* update configuration file
* add configuration file
* delete configuration file
* add configuration file
* TAG: go 2.4
* fix stats for scheduler
* Add: cosmetic changes to the default configuration
* Fix: README, update part and remove virtual env part that should wait 2.6
* Fix: (reported by David Guenault) SSL demo CA was limited to january 2014. Add a more longer one
* Enh: remove useless setuppackage.py as packagers are no more using it :)
* Change min business impact to 1 for detailled notification way
* Add: Changelog entry for failed modules logging
* Del: (reported by hvad) remove check_netint from framework repo
* Catch error of module crash and run in external (multiprocessing). closes #1607
* fix shebang
* show number of contacts, hosts, services and commands as well
* Clean: now we don't need that anymore :)
* Try: let the command of a commandcall be normally pickled & unpickled
* Enh: Catch ValueError while parsing conf #1604
* Enh: Add test case for #1604
* warn about lib crypto missing
* Add: deprecation warning in the doc about discovery
* warn about lib crypto missing
* Fix: missing test case for regression imported_from in the arbiter for modules. Was related to #1595
* Enh: add a warning if Scheduler.add() called with an unmanaged object type
* Fix #1587: bad assumption about launch_check() return value
* Add: #1587: test to show the problem with scheduler.check_freshness()
* Fix: (reported by ddurieux) missing imported_from property setting for arbiter modules. Fix #1595
* Enh: also give the command_name in a check_result brok
* Add: test case to verify a check_result brok has the 'command_name' key
* Cleaned and removed compute_hash() related
* Tag: go 2.4-rc4
* Enh: Tests - Fix for #1582
* Fix: #1582 + char in servicegroups
* Fix: (reported by:gramimoss) issue on discovery. (side note: we should extract the discovery into a module/package, can be better to follow and maintain than in the framework)
* Tag: go 2.4-rc3
* Fix: (reported by Stéphane Loeuillet) host check_period was mandatory for some configuraton. Now if missing always enabled. Fix #1568
* Enh: Add LiveStatusClientThread import to use it in LS tests
* Add: update Changelog for 2.4-rc2
* Enh : Use unset instead of void set in init script
* Fix: (Arthur Lutz) manage void install call on CLI shinken install. Fix #1548
* Fix: (reported by mohierf) fix statsd format. Fix #1560
* Fix: (reported by Greg) missing element assignation for pollertag/reactionnertag commands
* Fix: (reported by: Stéphane Loeuillet) manage , case at the end of members for groups host and contacts. Fix #1567 . ps badly add old test file, remove them in the same commit
* Fix: (reported by:Stéphane Loeuillet) unset http_proxy env variable so libcurl do not use it if set
* Fix: PEP8, and add pep8 call into quick_launch.sh so cannot forget anymore this
* Fix: test sslv3 with /bin change
* Fix: test_service_description_inheritance for multi host case
* test enh: slightly more robust for test_scheduler_init
* Doc typo
* Doc: Typo
* Fix: tests erroneously assumed that arbiterlink's id attribute would always be 0
* oMerge branch 'master' into Fix_1472
* Fix: test scheduler test
* Fix: get back the old setup.py until we fix new one for debian directly
* Fix: imported_from attribute read from bad object
* Fix: at_exit error with pbr form a debian7 python bug
* Enh: Doc - Forgot to index previous files
* Enh: Doc - Add doc for #574
* TAG: Go 2.4-RC1 version
* Enh: Test - Case for #1472
* Fix: Bad services def try to inherit from use before bailing out #1472
* Enh: Update Changelog and version in Doc
* Enh: Test - Case for #820
* Fix : escalated value in notification object #820
* Enh: Doc - Add doc for #806
* Enh: Doc - Add doc for #1477
* Enh: Tests - Case for #717
* Fix : parse and handler global event handler properly #717
* fixed docs
* apply_inheritance on all items and templates. don't overwrite apply_inheritance in subclasses where not necessary
* make changes about packs and modules
* improve script directory finding in init scripts
* Fix : Setup.cfg - Typo in daemon name
* Enh: Tests - Add case for #1489
* Fix: bad arg in external command #1489. Thks @andyxning
* change article a to an, when in front of another vowel
* Fix setup.py for installation with zip file
* Fixed launch bin paths
* use modules from above
* fix tests so one can execute them from a clean repo
* Enh: Tests - Fix for 6878c0e
* Fix: contact and notification way type in propeties #1533. Thanks @andyxning
* Enh: Tests - case for @018cd88
* Fix: remove arbiterlink is_correct ignoring configuration_* Fix: name_property variable for arbiterlink
* Enh: Test - adapt subprocess call to new bin tree
* Enh: Tests - create proper conf file for module_autogeneration
* Enh: Tests - Add test for previous fix. To enhance to all attribute
* Fix: Ensure good type for module attribute in arbiter
* Enh: Tests - add case for previous fix. Will work on next commit
* Fix: arbiter module auto creation _after_ arbiter auto creation This trigger another bug regarger arbiter's attibute module. Next commit will fix that
* Fix connexion spelling to connection
* TAG: Go 2.4-BETA1 version
* Try to fix jenkins unit tests
* Revert "Enh: converted last old style classes to newstyle"
* Fix: (by David Gil) typo an host to a host. related to #1337. Also fix a ssl test that expect not overall ssl version
* Enh: converted last old style classes to newstyle
* Enh: factorized get_objects_from_from_queues into daemon.Daemon
* Debug help: give all logs-broks content when assert_log_match fail
* Enh: can get_contactgroup from datamanager object
* Not bold what should be bold
* Mistype
* Add setup.py develop in setup tests, juste in case
* New forum address
* New forum address
* new verison check_sip, and path for shinken libexec - in order to avoid further revisions
* Enh/WorkAround: Arbiter: unpickle new conf in setup_new_conf()
* Fix fixe of picture generated for nsca
* Begin redraw schema for DOC in svg (inkscape) + export PNG
* Enh : Test - add case for default realm fix
* Fix : Bailout when there are two default realm
* Update macros.rst
* Enh: scheduler: don't create unnecessarily (many) copies of services and hosts when you want to iter over them
* clean: removed duplicated test file
* Add: Governance to the project
* Fix: fixed unstable assert in test_continuous_notifications_delayed
* Enh/Fix: restore Service.display_name previous behavior
* pep8
* Enh: Use ModulesManager helper function from modulesctx
* Enh: modulesmanager: less requirement on the module to be loaded
* Enh: also give module_type in Module.__str__
* Fix: don't error on a servicegroup referencing an explicitly excluded service of an host
* Fix: don't error if servicedependency reference a service that is excluded/not included
* Add: feature to make white list for services of an Host
* Tests: added a new test for new service_includes directive
* Don't reset Scheduler.sched instance
* Deletion of Windows folder
* Enh: A failed action can miss its stderr output
* Add: test to show that an Action stderr output must be used if stdout is empty and exit_status != 0
* Fix pep8 in bin files
* Enh: color uniformization between Shinken and what we did choose on kunai
* Enh: color uniformization between Shinken and what we did choose on kunai
* Add init scripts in setup.py install
* Fix tests
* Errorception (Fix error in error)
* Don't reload shinken with sudo
* Dont restart shinken with sudo
* Fixed dict key condition
* clean: remove useless code : same as parent class, so not needed
* clean: do the same with fewer lines
* test: clean + feature to give modules_dir by env variable
* Fix test_modulesmanager:
* Fix test_properties.py : need __import_shinken
* Add: jenkins tests: features to failfast and specify python version and more
* Clean: remove shinken/singleton.py ; not used
* Enh: pep8
* Enh: pep8 line size
* Fix: merge conflict after pep8
* Fix: missing configuration_warnings for discovery rules objects
* sslv3 and sslv2 disabled for cherrypy backend with use_ssl
* Fix: missed a % qualifier in format string for a logger.debug() call
* Fix memleak in setup.py with unclosed file
* Add: download badger in readme
* Fix memory leak in default shinken file generation
* Ignore *.pyc for PEP8
* Change in root dir before pep8
* Added pep8 to test requirements
* Added PEP8 to Travis-Ci
* PEP8: Finishing up!
* PEP8: service.py
* Pep8 objects/host.py
* pep8: fix regex (2)
* pep8: fix regex
* fix pep8
* Enh : Pep8 bottlecore.py
* pep8: shinken.objects.config
* PEP8: complexexpression.py
* PEP8: old_daemon_link.py
* PEP8: LSB.py
* daemon.py conforms to pep8
* Conform to pep8
* Conform to pep8
* Conform to pep8
* Conform to pep8
* Conform to pep8
* Conform to pep8
* Conform to pep8
* pep8: shinken.brok
* pep8: shinken.satellite
* pep8: shinken.commandcall
* pep8: shinken.easter
* pep8: shinken.macroresolver
* pep8: shinken.message
* pep8: shinken.downtime
* pep8: shinken.daemons.arbiterdaemon
* pep8: shinken.daemons.reactionnerdaemon
* shinken.daemons.pollerdaemon
* pep8: shinken.daemons.__init__
* pep8: shinken.daemons.schedulerdaemon
* pep8: brokerdaemon
* pep8: shinken.daemons.receiverdaemon
* pep8: shinken.singleton
* pep8: shinken.basemodule
* pep8: shinken.db
* pep8: shinken.util
* pep8: shinken.stats
* pep8: shinken.dispatcher
* pep8: shinken.modulesctx
* pep8: shinken.objects.pollerlink
* pep8: contactdowntime
* PEP8: external_command.py
* Enh: Pep8 - http_daemon.py
* Enh: Pep8 - log.py
* Pep8 objects/checkmodulation.py
* Pep8 objects/notificationway.py
* Pep8 objects/hostescalation.py
* Enh: Pep8 - matchingitem.py
* Enh: Pep8 - servicegroup.py
* Enh: Pep8 - serviceextinfo.py
* Enh: Pep8 - resultmodulation.py
* Pep8 objects/hostgroup.py
* Enh: Pep8 - serviceescalation.py
* PEP8: schedulingitem.py
* PEP8: realm.py
* PEP8: command.py
* PEP8: eventhandler.py
* Enh: Pep8 - satellitelink.py
* Pep8 objects/config.py
* Enh: Pep8 - load.py
* Enh: Pep8 - daterange.py
* Enh: Pep8 - scheduler.py
* Enh: Pep8 - worker.py
* Enh: Pep8 - db_oracle.py
* Enh: Pep8 - borg.py
* Enh: Pep8 - comment.py
* Enh: Pep8 - discoverymanager.py
* PEP8: timeperiod.py
* PEP8: receiverlink.py
* PEP8: macromodulation.py
* PEP8: hostdependency.py
* PEP8: escalation.py
* PEP8: arbiterlink.py
* Enh: Pep8 - termcolor.py
* Pep8 objects/discoveryrule.py
* Pep8 objects/contactgroup.py
* Pep8 objects/discoveryrun.py
* Pep8 objects/pack.py
* Pep8 ./objects/hostextinfo.py
* PEP8: schedulerlink.py
* Enh: Pep8 - regenerator.py
* Enh: Pep8 - perfdata.py
* Enh: Pep8 - md5crypt.py
* Enh: Pep8 - logevent.py
* Enh: Pep8 - importlib.py
* Enh: Pep8 - datamanager.py
* Pep8 objects/itemgroup.py
* Pep8 objects/trigger.py
* Pep8 objects/businessimpactmodulation.py
* Pep8 objects/item.py
* PEP8: contact.py
* PEP8: servicedependency.py
* Enh: Pep8 - common.py
* Pep8 check.py
* Pep8 trigger_functions.py
* PEP8 livestatus.py
* Enh: Pylintrc no report
* Add: Pylintrc
* Enh : Pep8 cleaning
* clean: unnecessary list build
* Fix: allow HTTPDaemon to be shutdown() multiple times
* Enh: Doc - Change to 2.2
* Enh: Doc - Remove useless quickstart
* Enh: Doc - Rework 01about done. Need more links
* Enh : Doc - Rework 01 section
* Clean: tests: cleaned out "nagios" things
* Enh: move *daemons*link(s) code/classes to shinken.objects
* Add: An helper function to emit a deprecated notice for usage of old *daemon*link classes
* Enh : Doc - Start to rework doc
* Fix: missed 'test_' prefix for new bad_template test file
* Rework setup.py (virtualenv-compatible)
* Del : Check Shinken script
* Enh : Update coverage version
* Fix: use item._get_name()
* Enh: report configuration warning if a template is missing
* Fix: Prevent infinite recursion (and so crash) if a template use itself
* Add: a test which trigger the "template use itself" bug
* Revert "Jenkins tests: removed pycurl from requirements. not needed."
* Jenkins tests: removed pycurl from requirements. not needed
* TAG: Go 2.2 version
* Enh: update changelog before 2.2
* Fix: (reported by: openglx) service template without host_name crashes arbiter and too much verbose warning valid config. Fix #1438 and fix #1460
* Enh : Changelog - Add commit from RC1
* Enh : Test - Forgot to remove renamed test
* Enh : Tests for passive reactionners
* Fix : Passive reactionners are now working
* Fix : Daemon are active by default #1455. Passive reactionner seems not to work
* Test: services: fix non-deterministic assert
* tests: clean Unittest2CompatMixIn: not anymore needed since we use unittest2 with py26
* Fix #1438 bad url for shinken community website
* Fix #1446 realm not displayed in get-all-states and duplicates entries in daemons list
* Fix: test services after hostgroup and service group configuration pack fix
* Fix: test_servicegroups.py after hostgroup and service group fix
* Fix: test after hg fix
* Fix: bad hostgroup test that was looking for hard objects
* Fix: too high pack size for multi-schedulers environnements. Can reduce a LOT the boot time for large envrionnements, and reduce the scheduler memory consumption too
* Add: more verbose POST logging
* Fix: (reported by descrepes) encoding errors from passive actions. Fix #1443
* Fix #1434
* Fix : Some default value in properties
* Don't commit on tearDown
* Enh : Tests - #1425
* Fix: #1425
* Add callbacks for HOSTDOWNTIME and SERVICEDOWNTIME macros
* TAG: go 2.2-RC1 version
* fix: set snapshot_interval in interval_length units instead of seconds. Fix #1401
* Fix: missing schedulers and brokers in the test realm. Why did the test did not break in direct launch in my previous launch? mystery..
* Add: coverage temp file into gitignore
* Fix: exit with error code whan install fail in CLI. Fix #1414
* Fix: get back the share directory so pack and modules can be installed without problems. Fix #1413
* Fix: no recursive part for sub realm and stallite link. Fix #1340
* Enh: remove unclear filter with mor clear way and fix a erronous comment in the configuration sample
* clean bad indentation (8 -> 4)
* fix: forgot executable bit to script
* Tests: clean: move "pip install" commands in dedicated setup_test.sh
* Enh : Changelog - Clean tab
* Update for 2.2 and clean tab
* Fix #1416
* Fix typo in Passive checks documentation page
* Ensure that livestatus client close its connections
* Fill return_code in broks
* Enh : Rename shinken script for BSD and remove useless README
* fix: bad super call. would infinitely recurse if subclassed.
* Fix output for notification in log_event
* Fix: #1352 - '+' is not a special char in bp_rule. Chained recursion was causing segfault for this char
* Removed leftover version checks
* Renamed to .gitkeep
* Removed .gitempty from configuration directories
* Removed unnecessary version check
* Switched placeholder file to .gitempty
* test: IsNot(None, X) -> IsNotNone(X)
* and finally: True
* False
* oupss: test_service_nohost: Less and not Lower
* NotIn
* manual Equal
* NotEqual
* manual Less
* Manual IsInstance
* NotIsInstance: sed -ri 's#\.assert_\(not isinstance\((.+)\)\)#.assertNotIsInstance(\1)#' test*py
* Less: sed -ri 's#\.assert_\((.+) < (.+)\)#.assertLess(\1, \2)#' test*py
* GreaterEqual: sed -ri 's#\.assert_\((.+) >= (.+)\)#.assertGreaterEqual(\1, \2)#' test*py
* assertIsNotNone * 3
* Try fix test_servicedependency_explode_hostgroup
* test: fix: was asserting 2 generators. which obviously evaluates to True
* assertIn
* Enh: Handle exception when pythonizing integer list
* Fix : #1389
* Add examples for duplicate_foreach when using several keys with multi values by key
* sed -ri 's#\.assert_\(not ([a-zA-Z0-9_.]+)\)#.assertFalse(\1)#' test_*.py
* Fix issue #1385
* add test that triggers the bug
* sed -ri 's#assert_\((.*) > (.*)\)#assertGreater(\1, \2)#' *py
* Fixed one badly replaced assert_log_match usage. fix 2
* Fixed one badly replaced assert_log_match usage
* fixed bad calls of assert_any_log_match
* fix bad replace
* Fix: badly transformed
* sed -ri 's#assert_\((.*) != None\)#assertIsNot(None, \1)#' *py
* tests: bunch of manual corrections
* better name
* simplification 2
* simplification 1
* "not any_log_match" -> "no_log_match"
* better any_log_match
* log_match: clean 2:
* Better log_match function. + better name
* fixed badly transformed assert_
* corrected by replaced assert_
* Try unittest2 .
* Corrected bad sed replace
* better regex for 'x1 == x2' (allow spaces in x1 (for tuples, lists)):
* better regex for 'x1 == x2' (allow spaces in x2 (for tuples, lists)):
* Tests: enh: use assertIs(x1, x2) instead of assert_(x1 is x2)
* Tests: enh: use assertIsNot(x1, x2) instead of assert_(x1 is not x2)
* Tests: enh: user assertIn(x1, x2) instead of assert_(x1 in x2)
* Tests: enh: use assertEqual(x2, x1) instead of bare assert_(x1 == x2)
* Transfert templates from shinken-core to UI-Graphite
* Transfert images from shinken-core to WebUI
* Enh: put specific test code for Android at class level instead of inside method
* clean: removed debug print
* commented hackish use of a module attribute (http_daemon.daemon_inst) used as placeholder for an http_daemon instance
* Enh: still try to join the process after forced kill
* clean: unused active_children() and print
* enh: use setproctitle from misc.common
* Module: add a __repr__ for convenience purpose
* Simplification: we can use localhost as the default address
* *Fix: some tests about module loading order with direct launch (means that nose is not cleaning things between tests?) *Add: travis+coveralls coverage mode. Need to install a new nose plugin that manage the subprocessing part
* Fix: travis tests until nose is happy again
* Fix: seems that coverage and nose and multiprocess are not happy, lets give a try with single process, seems to go to the end
* Add: coveralls.io data to send coverage information
* Fix: dummy commit to force a build on travis and coverage (coveralls.io)
* replaced assert_ with the good assert to have meaningfull failed assert information
* Fix: depending on system shell version the error output can be different
* py2.6 str.encode() does not accept keyword argument
* Why not (re-?)enable travis for 2.6 while we are at it ?
* Py26: Still try to load importlib from system before fall back on our copied one
* Included importlib for python2.6
* Fixed issue where running_id's random number was always 0
* Use start_time in running_id
* LogEvent: Added pattern for FLAPPING events
* Try travis with stdout buffered
* Allow to give REGEXPCMD as 6th arg of new_runtest
* clean tests: imports of test/shinken_modules.py
* Enh: make Scheduler a newstyle class
* "original" stdout can even miss an encoding attribute
* Fix: tests: guessed Notification id could be another value if others tests files were previously run in the same session/process
* Better to catch exactly the exception type that you are waiting
* Fix/Enh: changed all bare "except" to "except Exception"
* Fix: broker crash when sub process gt down and are not catch at the begining of the loop. fix #1350
* Fix: Comment new parameter with bad syntax
* [DOC] fix release number in pdf title
* start_time is now an int
* Use "original" sys.stdout
* Added HTTP call: get_start_time
* Fix an encode problem
* Update reactionner.rst
* Fix: forgot some lib in shinken/dependencies & jenkins requirements
* Fix : Revert DICT_MODATTR modificiation and ensure property is defined in DICT_MODATTR before use
* Fix : get_retention_data
* change res of get_raw_stats from dict to list
* Fix/clean: Daemon objects have actually their use_ssl property which defaults to False while satellitelink defaults to True
* Fix : Jenkis tests. Dirty hack
* Enh: agressive host checking managment
* Added so webui cares about HTTP_X_FORWARDED_PROTO header
* Fix : Catch all exception on the first import try
* Enh : #1341. Test cases for fix
* Fix : #1341. Up state dor a host generates a recovery if necessary
* Fix: imp.load_source|load_compiled can raise OSError if file not found, instead of ImportError
* Tests: livestatus: Explicitly call prepare_log_db_table (if it exists) after db.open
* Fix: imp.load_compiled/load_source can raise OSError instead of ImportError if file not found
* Enh: DRY: set a try: except arround trigger exec code
* Fix: bad test version file :)
* Fix: regression about non stripping list properties in the pythonize pass
* Revert "Fix: tests are now using the dev version by default, and if not available the installed one."
* Revert "Rev: TEST fail back to installed version loading first because of modules tests. TODO: find a way so modules can be test without install the tool and so be error prone when framework developping and using quick_tests.sh. hint: PYTHONPATH var is not enough for solving this"
* Revert "Fix: tests again, put back old code, but I dont see the difference"
* Fix: tests again, put back old code, but I dont see the difference
* Rev: TEST fail back to installed version loading first because of modules tests. TODO: find a way so modules can be test without install the tool and so be error prone when framework developping and using quick_tests.sh. hint: PYTHONPATH var is not enough for solving this
* Fix: tests are now using the dev version by default, and if not available the installed one
* Fix : Syntax error. @naparuba please ensure test case are fine BEFORE pushing
* Fix : Syntax error. @naparuba please ensure test case are fine BEFORE pushing
* Add: some new properties to the check_result broks, so some modules will be able to not need full broks for just the check_interval or a simple ack/downtime state
* fix macroresolver error from eltdetail template
* Fix: missing test entry
* Add: proxy setting to exchange with kernel.shinken.io
* As simple so
* Add: statsd export for inner metrics
* Fix: Empty list value and strip contactgroup
* Fix: #1346
* Fix : New parameter type
* modules management: fix, enh&clean of load/import module functions
* Add: CLI update command for the shinken.io install. Will skip all the configuration part
* Fix: merge
* Add: snapshots calls, that trigger a command to get more output from elements wehn they are in a bad state in a period where the admin is not here
* Fixed service totals and host totals
* Fix: (reported by: flaf) bad behavior for use_aggressive_hot_checking
* Fix Exception in arbiter when external module is providing objects. closes #1334
* Expands bp_rules t flag from tags rather than use
* Use standard macros expansion in bp_rules output
* English corrections 'an host'
* Fix: remove pack_distribution file usage. It was causing more damage in load balancing that it solve problems. It is not so useful with distributed retention modules, so it is better to remove this
* Fix: logging tests for the new log behavior
* Fix: test about missing parameter for contact
* Fix: manage pre-daemon logs. Fix #1320
* Add: new contact parameter to know if the user is an expert or not. For UI usages
* Fix: manage SSL under windows crash
* Set supplementary groups to avoid running daemons as %wheel
* Fix typos with codespell
* fix some typos while reading it
* Made conflict warn message more informative
* Typo (renamed mamage_conflict in manage_conflict)
* Add: CLI can now load configuration parameters with default value from the modules
* Fixed logger calls
* added verbose description for business-impact related macros
* macro list updated with business-impact related macros
* Fix: default parameter for the Businessimpactmodulation modulation_period prop
* Update shinken-env-setup.rst
* Fix: put aside macros for the timeperiods too
* Fix: default generic-service got only workhours notification and also remove useless parameters
* Document exceptions to PEP 8
* Enh : Show Travis build for master only
* Update dependencies-in-shinken.rst
* Update dependencies-in-shinken.rst
* Fixed a bug regarding services_overrides parse
* Comments typos fix
* Enhanced item.py and service.py documentation
* Reverted dispatcher.py logger change
* Config parse refactoring and optimization
* Fix: Stats, reenable cryptiing for kernel.shinken.io
* Small doc fixes
* Fix Bad tuple definition ..
* Fixed typo: ADD -> DEL
* Fixed typo in features list
* Fix: temporary disable the kernel stats send encryption. Need to be put again for release
* Return the hash containing all components state instead of only the brokers list state
* Fix: (reported by:Stefan Foerster) manage multiservicegroups definition in a service. Fix ##1250
* Fix: (reported by:Louis Sautier) use the lastest python version on the init.d script, Fix #1200
* Fix: bp_rule output managment under python 2.6. We can add a better way for case mangement the day we will drop 2.6. Fix #1220
* Enh: switch from cehck_icmp to check_ping for default host check. Fix #1199
* Fix: (reported by: Andrew McGilvray) get_raw_stats error 500 when calling a spare scheduler. Fix #1270
* Fix: stats do not even try to send to kernel.shinken.io is we are missing api_key or secret
* Fix: alias is not required
* Enh : Test - Forgot to add config file
* Enh : Edit test for fix
* Enh: Test - Add test for fix
* Fix : Unknown members list is an unwanted common object
* Revert "First try to fix types"
* First try to fix types
* Fix: (reported by Jesse Johnson) satellites did not respect the timeout and data timeout for scheduler connexion
* Enh: stats thread less verbose
* Fix: merge conflict
* Add: crypt for stats communications to kernel.shinken.io
* Enh : Test - encoding
* Enh: Test - Handle no sched case in util functions
* Removed useless void files
* Add "e.g." to example
* Remove trailing slash from shinken.cfg
* Enh : Doc #1293
* Added some content about reloading Shinken config
* Example sentence structure in daemon_enabled
* s/got/gets/ (incorrect tense)
* s/Put/Set/ for max_queue_size
* Consistent use of capitalization and periods in scheduler explanation
* PID should be capitalized because it is an acronym
* Minor sentence structure fix on manage_sub_realms explanation
* Incorrect use of the word "understand"
* Fix: bad default timezone
* Finish tests for external commands
* Add tests for external commands
* Add RELOAD-CONFIG external command
* bugfix for discovering linux hosts with recent nmap versions
* Enh : Test - Fix default prop
* Fix : #1290 and logger calls
* Fix typo in comment
* Enh : Test - Add test for previous commits
* Add: Time properties for host and service escalations
* Enh: Tests - Add test for external commands
* Fix : edit modified attribute at loop's end
* Enh: Remove self in staticmethod
* Enh: Fix grammar
* Enh: Refactor bailout and edit message
* Enh: Add custom in dict
* enh: module name uniformisation
* enh: module name uniformisation
* enh: module name uniformisation
* enh: module name uniformisation
* enh: module name uniformisation
* Use DICT_MODATTR for MODATTR value
* enh: module name uniformisation
* Enh: Edit retention parameter. Add support for reset modify attribute
* Enh : Doc - Fix #1218
* Enh : Logger - Do not format when logging
* Enh : Add CONTRIBUTING file for PR
* Enh : Doc - Unmock pycurl to make doc compile
* Enh - Doc : Add table for PR
* Fix #1263: log formatting for external commands
* Add: method to get service tags
* Fix: call the inner metric api once a minute
* Fix: merge
* Fix: tests with the stats reaper thread, and add new stats
* Fix: better metrics for scheduler stats and add arbtier stats too
* Update shinken
* Add: now the scheduler send real stats to the metrology server. It use AES with a secret as key, and will use the api_key to in the future
* Allow wildcard service_description in serviceescalation
* Enh : Logger - Only use time rotated file handler for regular files
* Fix : For sched to skip compensate
* Enh : Test - Remove tree instead of dir
* Enh : Test - Add real time for registered funs
* Enh : Test - Set real time for bad_start
* Add: stats data for all the daemon
* Added tests for special characters
* You can now use perfdata() to parse None perfdatas
* Enh : Comment print for Travis
* Revert "Revert "Add: first version of a basic stats manager that run a thread in the daemons and reap all the inner perfdata. Then we should present/export the data outside and add more daemons.""
* Fix : Scheduler crashes if system time changes before it gets conf
* Revert "Add: first version of a basic stats manager that run a thread in the daemons and reap all the inner perfdata. Then we should present/export the data outside and add more daemons."
* Add: first version of a basic stats manager that run a thread in the daemons and reap all the inner perfdata. Then we should present/export the data outside and add more daemons
* Fix : Handle force-reload properly
* Revert "fix: nasty character in the init.d script."
* Enh : Test - Add case for #1203
* fix: nasty character in the init.d script
* Enh : Test - Add test for #1256
* Enh : Test - Use self.broks for log functions
* Fix : #1256
* delete pyro ref
* delete pyro ref
* Enh : Update copyright year to 2014 in setuppackage
* Enh : Update copyright year to 2014 in windows directory
* Enh : Update copyright year to 2014 in contrib directory
* Enh : Update copyright year to 2014 in modules directory
* Enh : Update copyright year to 2014 in cli directory
* Enh : Update copyright year to 2014 in bin directory
* Enh : Update copyright year to 2014 in shinken directory
* Enh : Update copyright year to 2014
* Enh : Test - Add test for servicegroups
* Fix : strip servicegroup name when adding member
* now put_result has his own lock
* clean performance output
* Fix timezone in init script, avoid stat call
* Print Calling time
* When replacing a daemon kill all processes in the group
* Fix #1245 Always print result file when making shinken check
* Enable time hacking even if we don't use setup_with_file
* Moved time hacking to setup_with_file
* Enh : Test - edit travis command for test
* Enh : Test - add time_hacker for nosetest
* changed PyPI version badge to SVG
* Added PyPI version badge
* Fix : Tests - Clean run time behavior for nosetest
* Fix : Keys may return unsorted keys, max is necessary
* Moved ExternalCommandManager initialization to init
* Enh : Test - Move time hacking at setup
* Enh : Test - chmod 664 test for nosetest and clean bad start
* Enh : Use quick_tests.sh for Travis
* Fix : Test - External Command Manager was not init
* Added test for sending unconfigured host check results to a receiver
* Enh - Put accept_passive_unknown_check_results to false
* Fix : Test - Add new param in setup_with_file
* Add: Alexandre Viau to the THANKS file
* time_stamp in test_unknown_check_result broks is now int
* Split perfdatas from output in unknown_check_result broks
* Added tests for unknown_[host|service]_check_result broks
* Schedulers can now receive passive host_check results for unconfigured hosts
* You may now submit passsive check results for configured hosts but unconfigured services
* Fix: getattr would fail on receiver
* Fix: accept_passive_unknown_check_results is now optional
* Added accept_passive_unknown_check_results to arbiter documentation
* unknown_check_result broks are now enabled only if accept_passive_unknown_check_results is True
* external_command now generates unknown_check_result_brok
* Brokers can now get broks from receivers
* Added receivers to brokers conf
* Fix: search_host_and_dispatch() - Warning would not happen if receiver
* Add: Alexandre Viau to the THANKS file
* iMcomlete to iNcomplete
* Fix pnp4nagios url
* time_stamp in test_unknown_check_result broks is now int
* Split perfdatas from output in unknown_check_result broks
* Added tests for unknown_[host|service]_check_result broks
* Schedulers can now receive passive host_check results for unconfigured hosts
* You may now submit passsive check results for configured hosts but unconfigured services
* Fix: getattr would fail on receiver
* Fix: accept_passive_unknown_check_results is now optional
* Added accept_passive_unknown_check_results to arbiter documentation
* unknown_check_result broks are now enabled only if accept_passive_unknown_check_results is True
* external_command now generates unknown_check_result_brok
* Brokers can now get broks from receivers
* Added receivers to brokers conf
* Fix: search_host_and_dispatch() - Warning would not happen if receiver
* Added build status to README
* Removed pyro
* Added pycurl to dependencies
* Added .travis.yml
* Enh : Add missing RH chkconfig . Merge #1076
* Don't mix Chkconfig Header with LSB Header
* Enh : List supported command. Merge #1076
* Removed unused imports
* Enh : Refactoring. Merge #1076
* init script: Fix bashism
* LSB: Update ref url
* LSB: Mention the reload and force-reload commands
* Enh : Add force-reload. Merge #1076
* LSB: S runlevel is not a real one
* LSB: shinken requires $remote_fs because it is in /usr which may be on remote fs
* Removed commented code, this was intended for broker
* dependancies -> dependencies
* Replaced fill_potential_[type] functions by fill_potential_satellites_by_type
* Enh: refactored get_all_subs_satellites_by_type
* Add test for PR #792
* Enh : Test - Remove bad comment and rename function
* Fix : Call parent is_correct function. Needed to merge #792
* Replaced get_all_subs_[type] function by get_all_subs_satellites_by_type(sat_type)
* Enh : Doc - Parameter to remove host-service dependency - Merge #1017
* Enh : Test - Parameter to remove host-service dependency - Merge #1017
* Add : Parameter to remove host-service dependency - Merge #1017
* Fix : Another https forgotten for reveiver
* fixed typo
* Replaced logger.log calls with logger.info
* Moved plugins conf files to their respective pack
* fixed typo
* Added LogEvent, a class to parse monitoring logs
* Implement scheduled downtime for hostsgroups
* Fix: merge conflict
* Fix: CLI log regression
* fix doc contact
* Add signals handler for shinken cli and fix some pep8 warnings
* Enh : Test - Remove unreachable code from quick_test.sh
* Enh : Test - Add a test case for previous fix
* Fix : Reversed_list iconsitent state when merging host/service group
* Ensure we have the proper poller url in scheduler
* Allow scheduler to connect to a poller by https
* Fix: bad checks for share and modules dirs
* Prevent duplicate members in contactgroup
* Do not set master actions to inpoller
* Enh : Clean cod and add comment
* add test for service plus inheritance
* Enh : Keep on merging - Test rework and fix
* Edit logger call
* Enh: Keep on merging
* TAG: go 2.0.3
* Enh: Doc - Add duplicate_foreach
* Fix : sched_id is an integer not a string
* Enh : Still merging
* Enh: Keep on merging
* Enh: Keep on merging
* Enh: Keep on merging
* Enh: Keep on merging
* Fix: Need to set format for console_logger
* Enh : Merging logging PR
* Enh : Merging logging PR
* Enh : Merging logging PR
* Enh : Merging logging PR
* Enh : Merging logging PR
* Enh : Merging logging PR
* Enh : Merging logging PR
* Enh : Start to merge logging PR
* Fix: getting broks from scheduler can take some time ...
* Enh - Test : Rename also parameter in tests
* Enh : Test - change parameter to None
* Enh : Rename new trigger parameter
* Fix : in_maintenance in now an integer, not a boolean
* Enh : Test - Remove parameter in trigger props
* Enh : Doc - Add trigger parameter in doc
* Enh : Test - regexp was no correct. Using another cmd instead
* Fix : Use integer instead of boolean for in_maintenace #1080
* Fix : Move new trigger attribute to running prop to prevent crash at Serialization
* Fix : Edit tests for #1080 fix
* Fix : Add in_maintenance parameter to retention (and running prop) #1080
* Enh : Test - Add test related to trigger fix
* Fix : Do not generate two broks when a trigger edit output
* Enh : Doc - Add triggers_dir to doc
* Enh : Test - Put again log, some test need them
* Enh : Test - Remove a part of test output and add test names
* Enh : Test - Run test regarding the name and not from a file
* Enh : Test - Move LS test class into shinken_module
* fixed --proxy setting failure for shinken command
* Update config file to stick to module name
* Update config file to stick to module name
* Update config file to stick to module name
* Update config file to stick to module name
* Enh : Update doc link in daemons configuration
* Enh : Doc - Add monitoring-plugins as conditional requirement
* Enh : Doc - Add simple diagram class for Misc package
* Enh : Doc - Add simple diagram class for Webui package
* Enh : Doc - Add simple diagram class for Exceptions
* Enh : Doc - Add simple diagram class for Shinken package
* Enh : Doc - Add simple diagram class for Objects package
* Enh : Doc - Add simple diagram class for Daemons package
* Enh : Doc -Add simple diagram class for Clients package
* Enh : Doc - Begin to add simple diagram class
* fix comment
* Enh : Test - End merge, close #608
* Enh : Test - Keep on merging
* Enh : Test - Keep on merging
* Enh : Test - Add Docstring
* Update doc-string
* Enh : Test - Begin hand made merge of #608
* Fix copy pasted doc?
* Avoids collisions of Downtime.id between schedulers
* Fix poller hanging
* Fix allperfs trigger function
* Fix: Perfdata doesn't match 50e+12
* TAG: go 2.0.2. pip push in progress
* Fix: missing logger import in http_code and missing sample.cfg in etc/modules so this dir is created on pip install
* Add shinken-discovery manpage and fix other manpages
* Add manpages
* Fix typo
* fix version number
* Enh : comment to stick with default conf in broker
* Enh: Doc - Update requirements + Fix pypi link
* Update README. Move some part to the documentation
* delete missing configuration file
* Fix missing modules folder in the pip installation
* Fix : SSL - SSL_VERIFYHOST = 2 is better than 1
* Fix : Broken test after ssl fix
* TAG: go 2.0.1
* Fix: (reported by PasBillPasGates from linuxfr.org) enable the hard_ssl_name_check parameter into the pycurl part
* Fix: wrong cfg_file directive
* Enh : Doc - Remove shinken-specific references
* Enh : Doc - Remove old path
* Enh : Doc - Start to remove old path
* Enh : Doc - Remove install script refs
* TAG: go 2.0
* Add: CLI allow help for sub commands
* Add: CLI --download-only option for the install call
* Change default check logfile storage dir
* Fix typo error
* Fix old wrong modules names in comments
* fix: installation part for pip
* Add: automatic detection of a previous shinken install to switch to update mode (setup.py)
* Fix : test to_int in external commands
* Fix : replace int by to_int for timestamp is external_commands. Thanks @matthieucan
* Fix: Remove time_templates.cfg declaration in shinken.cfg as it now in templates dir
* Change time_templates.cfg directory to templates
* Fix: remove some old files
* Fix: (reported by:6jo6jo) multi hostgroup/servicegroup entries. fix #1171
* Update FOR_PACKAGERS
* Fix: please dont use TwistedServer anymore, this is buggy as hell with bottle
* TAG: Go to 2.0-RC3
* Fix: try to fix #1170 by removing Harakiri on teh reactionners and change the SyncManager communication from named pipe to real tcp sockets on localhost
* Update Changelog with @geektophe feature
* Fix : #1114
* Enh - Doc : Fix broken links with my rework
* Enh : Doc - Fix compile warning
* Enh : Doc - Fix compile warning
* Enh - Doc : Fix ref
* Enh : Doc - Remove duplicate page and fix ref
* Enh : Doc - Clean main config advanced parameters. Still some work to do
* Enh - Doc - Rework configmain. Moving all other param to advanced
* Enh : Doc - Update config overview
* Add : commented log_level line for arbiter
* Enh : Doc - Update config overview
* Add: more debug data about locking http calls, I hope we will be able to remove them before release
* Enh : Doc - Remove old Thruk tutorial renaming the better one. @sni tell us if it's not up to date :)
* Enh : Doc - Fix links
* Enh : Doc - Remove duplicated page
* Enh : Doc - Move duplicated pages
* Enh : Doc - Plugins doc
* setuptools --root option already do that
* Fix : test_freshness #1150
* Fix : Bad symlink in test
* Test - Fix : Symlink specific conf file to modules, Enh: Less verbose script
* Update reactionner-master.cfg
* Add: doc to the API and add the get_objects_properties call
* Add: API get_log_level call
* Enh: more resilient connexion to put_conf elements
* Add: API raw stats for receiver
* Add: API raw stats for broker
* Add: API raw stats for poller
* Add: API raw stats for scheduler
* Fix: API clean useless function and remove a verbose print
* Fix: API get_satellite_list for the arbiter call
* Fix: get_all_states API for the arbiter
* Add : test_exclude_services to shorttests (Jenkins)
* Fix: mrge conflict
* Fix: windows run for select loop that dont like void socks
* Fix: CLI do not go in error for the first --init
* Fix: SSL got problem with inter-daemons communications, and was causing a lock of all sub-process when they try to shutdown the http daemon
* Fix : Syntax error. Ping @naparuba emacs can check it for you ;)
* Enh : Doc - Update the update page. Please review #1084
* Enh : Doc - Move RedHat 1.4 install to deprecated #1084
* Enh : Doc - Move RedHat 1.4 install to deprecated #1084
* Added ability to exclude services
* Add man page for RPMs
* Fix: windows run, manage void select() call
* Fix: windows runs
* Add host/services tags for WebUI tags view ..
* Enh : Doc - Remove duplicated how to monitor and move the last one to 13
* Enh : Doc - Remove not related Wmi part in windows install
* typo/string fix
* Enh : Doc - Change monitoring-plugin path to fit the resource.d/paths.cfg
* Enh : Doc - Remove install_script from 02 as it is in 98
* Enh : Doc - Remove reference to objects dir
* remove Pyro comments for ssl
* Enh gitignore
* Add services groups methods in datamanager
* Enh : Doc. Add features comparison in doc. We should UPDATE this. Fix #1163 related to #1084
* Enh : Add deprecated section in Doc #1084
* Fix: missing spare option for the spare pollers, even if its not so useful :)
* Updated documentation
* Fix: (reported by Rapha�l Doursenaud) default path for nagios plugins commands, fix #1158
* Add: missing t flag for bp_rule
* Fix: remove modules doc from framework docs, moved into their own repos
* Fix: remove all pure livestatus tests cfg files into the mod-livestatus repo instead
* Fix: documentation tree structure and various small usability fixes
* Fix: extensive documentation overhaul
* Fix: deprecate shinken-admin, should be manage by a cli cmd in the future
* Fix: discovery paths fix #1132
* Fix: also add the share dir for cli
* Del: useless mysql macros
* fix : remove macro that are windows specific
* Log level set to debug
* Enh: disable teh injector by default, should be add for 2.2 only
* NSCA checks, modifications
* Fix: beware of releasing the global lock for an http call even in an error 500 mode
* Fix: clean the package untar dir after install
* Add: first injector code
* Adapt the exit code of "/etc/init.d/shinken status"
* Enh: Doc - Remove Pyro references
* Moving install_script to deprecated part. We should delete this once we delete the install script
* Fix: init.d scripts was calling an hardcoded shinken.cfg. Can be a problem in a 1.4 to 2.0 migration
* Fix: documentation refs, headers, indentation
* Fix : #1136 Test case
* Fix : 1136
* delete compress option
* update init and systemd for 2.0
* Fix: documentation refs and titles in 01_about and 02_gettingstarted
* Update README.rst
* Update setuppackage.py
* Fix: documentation refs in the_shinken_architecture.rst and related
* Fix: scripts path in simple user PATH, and missing import object.config for some pickle problems. fix #1131 and fix #1130
* Fix: (reported by Flaf) typos
* o Merge branch 'master' of github.com:naparuba/shinken
* Fix: various setup.py fail like missing etc/modules or etc/packs, and clean the etc dir
* Add one trigger function and comment trigger functions
* Fix: missing pip parameters, and removing the pycurl dep as it does huge problem on centos with yum and pip. Manual installation is better than break yum for the user
* Fix: missing +x on the init.d/shinken
* Fix: the linux default generates file, and the scripts. Related to #1126
* Small fixes on escalations doc
* * Try to fix PDF
* Fix: pip remove +r on the libexec and init.d scripts..
* Add RESTART_PROGRAM command
* Fix return codes
* Add an helpful debug log for launched commands
* Add: updated packagers file
* Add: setup.py for packagers that need --root
* Add: missing cli and share for setup.py and pip
* fix: some args for packagers, root is still wrong
* Fix: setup.cfg file generation
* Fix: missing ini and shinken.cfg installation
* fix: merge
* Fix: setup.py with rela build and co, need to manage root thing
* Fix error in linux
* Fix user and group for ini and shinken.cfg for linux
* Add /etc/default for linux
* Add modification of shinken.cfg for modules path
* Fix previous commmit
* Add user and group in ini files
* Add chown (rights) for run and log paths
* Fix install and define modules-dir for daemons ini files
* Fix glpi improt module in arbiter config file
* Fix error when install multiple times on freebsd
* Fix FreeBSD script
* Finish code for script for freebsd
* Add script for strat shinken for FreeBSD
* fix: merge
* First version of setup.py (new version)
* Rename old setup.py
* Add: push a RC8 into pypi
* Enh: help for daemons config file, we are adding the ini hint
* Add: macro for default nagios plugins dir. SHOULD be changed in some distro, like centos64bits or freebsd
* Fix daemons folder name
* fix: CLI manage shinken.io connexion fails
* Fix: regression from 688cf582, default file was put into the etc/shinekn dir, instead of /etc/defaults
* Fix: regression on the CLI libexec path
* Fix : Remove bad png file #1115
* Small typo fixes in business rules documentation
* Fix: ini files where not generated with the user and group regexp on a commented parameter). I add the apend back. We should try to find a way to have both uncomented and tests so we can get back to regexp mode :)
* fix: CLI isntallating missing package
* Fix: remove the default linux template from localhost. Start void
* Doc: polling_interval is in seconds
* Fix scrippt for jenkins
* Fix install *.ini in daemons folders
* Fix: (at least I try) to fix the setup.py in pip mode. Currently data_files are missing, only ocnfig files are installing, more to be fixed
* Enhance setup.py
* Begin fix paths and remove webui lines
* fixed small typos and such
* Fix: (reported by jylenhofgfi and xingxing) increase cli timeouts, FIX #1086
* Fix: (reported by:jylenhofgfi) shinekn cli module got problem to be pipe into grep
* Add: go to RC2, try for pip install
* Fix install. closes #1109
* Use signal.SIG* instead of harcoded values
* Fix #1077 : OSError problem in check_parallel_run() with unlinked pidfile
* Fix var path for BSD
* Update README.rst
* Add: missing the libexec into the pack installation
* Enh: some doc, currently install thing, and remove some old nagios parts
* Fix: get back code from 2836e94c11597ed8 but manage the break. now we parse the args twice. The fist time to manage shinken cli parameter, like debug, verbose or config path, and after loading cli module, we reparse with the full parameters this time. We should look at argparse to manage this in a better way
* Fix: missing parameter http_backend if come from 1.4, should be ok now
* Revert "Added CLI option to pass the path to shinken.ini as parameter." This is breaking sub parameter links
* Fix: revert the local parameter, because its the shinkenio one that should export it (modular way)
* Enh : replace parameter in file instead of adding to end. Uncommented some parameter to make it work
* Fix : #1102. Syntax is shinken install --local <dir>
* Duplicates properties in generic-service
* Duplicate property in generic-service
* Enh : Documentation #1084
* Enh: Cleaning 404 file
* Update __for_git
* #1097 : Fix /etc/shinken/modules creation
* Start cleaning doc. #1084
* Blocked bp_rules smart notifs on host downtime
* Exclude ".git*" files from tarball
* Change shinken dir in contrib install script (2))
* Change shinken dir in contrib install script
* * Fix PDF documentation
* Update setup.py
* Remove uused doc files, most of them with leading space
* Fix: Aina Rakotoson is a man, sorry
* Fix: some tests, and put all tests into quick_tests.sh
* Add: go to 2.0-RC
* Add: Changelog update for 2.0 RC
* Update config.py
* Fix: test test_acknowledge_with_expire
* Added CLI option to pass the path to shinken.ini as parameter
* Add: CLI shinken inventory list to dump packages and also package contents
* Add: fix for pip installation. What a nightmare is is...
* Fix: bunch of tests that look at details instead of behavior
* Fix: CLI default value for doc-serve
* Add: refuse to run under python 2.6. PS: 7000th commit, yeah
* Add: definition_order parameter for objects order twins remove, only active for services
* Fix: bad case for business_correlator rules
* Fix: CLI doc compilation under debian 6
* Add: desc commands to the CLI
* Fix: remove useless files
* Enh: start to clean huge files into smaller ones
* Fix: wtf git is not pshing theses files?
* Fix: bug when cfg_fir cfg files got NO ending cariage returns
* Enh: make multi term work in cli, and sort/uniq results
* Fix: (reported by : Aina Rakotoson) notification logic failed when reactionners with different reactionner_tags
* Update cli.py
* Remove remaining tempfiles *~ and #*#
* Add : Mathieu Parent to the THANKS file
* doc/use_with_thruk: mention enable_shinken_features, and <configtool>
* doc/use_with_thruk: Various doc fixes
* Add: doc management (compile and serve) into the shinken cli part
* Fix: some tests
* Add: change README so now the installation is done by setup.py. The old install part is moved into contrib and I also move some things in etc so it is more clear now
* Add: shiken isntall cli now install package doc into the doc dir
* Fix: rename doc modules into packages
* Add: doc is now installed
* Enh: manage shinken cli debgu output and add some colors in commands
* Update FOR_DEVS.rst
* Add: go in 2.0 beta1. @seb: rc is NOT beta
* Release : 2.0-RC1
* Sorry guys, I know we are in freeze but I had to do that. Let's start to forget about you know who. Recent event pissed me off
* Enh : Ensure LSB path for Arbiter
* Fix config file to ensure LSB path to Shinken
* Enh : Put bottle daemon quiet, easier to debug when daemon is launched from command line
* Add tests for #983 fix
* Fix #983
* Fix: rollback, not a good way to do as we can have a really BAD structure and crash scheduler, its worse.
* Enh: only warn if a bp_rule element is unnkown at startup, do not block launch for this
* Changelog for 2.0. I summed up a bit
* Add: defaults fix to http daemon
* Add: manage default_args for http_daemon
* Fix: cli publish crash when package.json is bad
* Fix: exit if http_daemon failed to launch (like with already used port)
* Fix: allow to laod pyc file for modules
* Fix: issue with some discovery rules with mutli-keys
* Fix: set the python daemons into unbeffered stdout mode, centos guys will love it
* Fix: bad start test
* Add: do not error when service got an invalid host_name, warn instead
* Fix: tests after last commits
* * Fix sub list
* Fix: rename modulesdir into modules_dir. Tests were broken
* Fix syntax error
* Fix: bad merger
* Add: some fix on the contact-notifway inheritance, and several startup error moved into warnings in order to strongify start
* Enh: clean the repo before 2.0
* Fix: rename modulesdir into modules_dir
* Fix: log module generate broks for modules, should not Fix #886
* Fix Name in new_runtest for modules tests
* put xml and htmlcov files into other dir
* Rename test + chmod
* Fix #954. Remove pdb. Will add the issue as test case
* Fix #954. Prevent from returning next time notif in the past
* Remove module related test from quick_test
* Add test case for #1028
* Fix some typos
* Update README.rst
* Fix link and layout chap08 begin
* Fix link and layout chap07
* Fix layout chap07
* Fix link in chap 05 and 06. Still link to fix in macrolist
* Fix doc
* More cleaning
* * Clean Part 4
* Change html style
* * Part 3 cleaned
* Add: eltgroup preparation
* Fix #1005
* * Begin to clean 03_configuringshinken
* * Still fixing titles
* * Still fixing titles
* * Still fixing titles
* * Still fixing titles
* * Continue to fix title
* * Fix titles
* * Restore deleted index.rst file
* Try to fix title
* Start to fix #1028. Need to finish test (launch aribter in background to set no sched conf, register ichecks and ibroks
* Add previous test case into quick test #1029
* * Add more documentions from the wiki
* * Fix pdf
* Update .gitignore
* * First reengineering
* * remove easters from doc :)
* * Add reference title
* * First doc integration
* fix test config file
* Fix #1029 + test case
* Add link_xen_host_vm.py
* Fix small issue
* Fixes filter related fuctions
* Added bp_rule child notification opts management
* Fixed a bug on single service override attribute
* Fix: Clean empty value if no reals services and hosts use servicedependency from pack
* Fix: srv hot dep plugin wrong var assignment causing too much imbrication and incompatible json format
* Revert "Merge pull request #1024 from geektophe/hide_svc_problems"
* del useless files
* Add signature in service_dependency_mappingp.py
* Refactor and finalize code on service_dependency_mapping.py plugin
* fixes error message grammar
* Fix #383 and #897. Same PR as #918
* Fix #383 and #897. Same PR as #918
* Rename tests to skip them. They need to be moved/deleted
* Fixed default template notification options
* Fixed contact groups explode whith multival cgroup
* Added the ability to hide service in problems view
* Fix: remove a regression taht make reactionner get also checks
* Remove the hack, the test is commented
* Comment the trending test in short tests file
* Fix violation report in Jenkins. Tests are almost fully working ;)
* duplicate_foreach with event_handler
* Restrict syntax check to shinken dir for now
* Hack to bypass module trending fail test. What about moving this module to his own repo @naparuba? :)
* Fix syntax newruntest
* Fix timeperiod tests
* Edit new_runtest
* Dirty fix for new layout ..
* Fix pycurl install and exit in install process
* Fix pycurl installation
* removed dependency error
* Enh: Communication with arbiter for hot services dependecies support BETA
* Fix: graphite install on debian need pycairo
* Fix: graphite install on debian
* Renamed attribute business_rule_labels to labels
* Add support about service dependency in external mapping script
* Optimized macro based business rules expansion
* Gives precedence to CRITICAL state in bp_rules
* Partial commit
* Another step in fixing install with new config layout
* [Issue 1008] bin/nagios : forces -v argument to be used as config file
* Partial commit : trying to fix problems with python libs on redhat/centos
* Fix problem with setuptools installation
* Partial commit for test
* Add missing pycurl to packages list for RHEL/CENTOS 5
* Fix some configuration problems with new config layout
* Add fetchall method to db.py
* Fix invalide easy install usage in installer for redhat/centos 5
* Renamed business_rule_tags to business_rule_labels
* Updated nagios plugins download uri (Thx to Ervin Tantraputra Rommel)
* Fixes #961 : fix recheck now impossible
* add install prerequisite and typo fix
* Transfer github url to shinken.conf file
* fix tabstop:use whitespace to replace tab
* fix exception
* fix config to be consistent with comments
* Fix name to be coherent with others deamons
* now we can set modules to start in default config file
* Disable default module
* Fix workdir for arbiter
* test ini file presentation
* Fix log path
* Fix dependencies
* Add error log if too many files
* Added tags expansion to hosts and fixed some typos
* Fixed a bug in business rule output processing
* Added comment to warn user not forget config shinken for graphite integration
* Implemented complex business rules expansion
* Enh: Added graphite installation in install script
* Refactored dependencynode.py file
* Added reversed (negative) xof business rules
* Fixed new attributes default values
* Fix on impacts/problems retention loaded services
* Fix: default templates
* Fixed problems based smart notifications
* Enhanced smart notifications in business rules
* Fixed test_properties_defaults.py modified in #979
* Fixed Config's `resource_macros_names` definition
* Fixes a non tested case: single service override
* Fixed get_template function
* Fix: merge issue
* Removed unuseful [] on hard createed objects
* start cleaning setup.py
* Fix: merge problems
* Added business rules smart notifications feature
* Forgot to update quick_tests.sh :)
* Implemented host property based service overrides
* Forgot `ShinkenTest` silent mode feature
* Oops... forgot to update quick_tests.py :)
* Levered leading `+` limitatinon in multi value
* Fixed multi valued attributes split evaluation
* Added multi valued attributes support
* Fix use install script with not term
* Imports `properties` attribute from Service class
* Added service instance properties override feature
* Fix #942 : remove full config load in scheduler
* Fix : #942 : fix type with tab
* Fix : #942
* * Add simple functions for triggers
* Minor enhancement on business output processing
* keep it simple just enable_environment_macros
* Only re-evaluate business rules having macros
* Fixed business rules re-processing
* Using generic-service template into time_template definition
* Added macro expansion to business rules
* Equalize time template max_check_attempts
* Fix: issue #967 . Force close FDs of stdout/stderr on action timeouts
* Fix: conflicts
* Added percentage support to Xof: business rules
* Moved business rules output processing a level up
* fix cp command for restore
* Minor fixes and enhancements on business rules output
* Fix: remove windows installation files
* Add: test_business_correlator_output.py test into jenkins
* Fix typo :)
* Adjust notifications command
* Added detailled notifications ways and command
* Fix: Change path to shinken.cfg file rather than shinken-specific.cfg
* If scan failed then no tags added to discovered target
* Move vmware_snapshot installation into check_esx3 install
* Added plugin to help message
* Added check_vmware_snapshots.pl plugins to install script
* Fix test_poller_addition.py. Typo + sleep
* Fix test_passive_pollers.py
* Fix test_notif_macros
* Test Migration : Add module free conf and fix bad_start #952
* Added business rules output
* Removed layer 2 discovery parts in core as it is within pack now
* Fix : Not necessary now
* Test Migration : Fix module name #952
* Test Migration : Change symbolic link to LSB one #952
* Add : Moduleslist
* Test Migration : Fix modules path + add modules grab from git #952
* Test if section exists *before* adding a comment
* perf should return None
* Add function to test modules, not ready yet
* Fix syntax error and remove requirement
* Add : new script to run tests. Use virtualenv to run tests. First try to grab and install module with cli
* Removed wrong stuff in filesystem host tags
* Removed relocated cluster discovery stuff
* FIX : Python is your friend, no bad words + autoremove spaces
* FIX : Python is your friend, no bad words + autoremove spaces
* Fix #949
* Fix: missing a test
* Add: new test test_business_correlator_expand_expression.py
* Add: shinken install can now take the --local parameter to install a local repository
* Add: Samuel Milette-Lacombe to the THANKS file
* Fix mapping for configuration column interval_length in scheduler
* Added bussiness rules hostgroup or regex expansion
* Fix: cd on tmp dir on IBM_DS, IBM and HPUX plugins install
* Fix: check_logfiles installation
* Forgot one :)
* Added check_logfile installation in install script
* Comment modules related tests
* Fix wrong local log file for broker daemon
* Test migration : Remove webui test. naparuba/shinken#952
* Did not find the related repo for this module. I revert it for now and will see that later Revert "Module cleaning : Poor trending was alone. Now it can rest in peace"
* Test migration : Remove sqlitedb tests. naparuba/shinken#952
* Test migration : Remove npcdmod test. naparuba/shinken#952
* Test migration : Removing livestatus tests. naparuba/shinken#952
* Test migration : First part : Split core and modules part
* Fix: old multiprocessing lib where not initialized. Fix #950
* Add: CLI --init parameter to generate/refill the .shinken.ini file
* Enh gitignore
* Fix init script status
* Fix status by Fabien Dupont
* Fix status by Fabien Dupont
* Fix: utf8 stuff on shinken publish
* Enh : Fix #943
* Add: first auto-completion to the shinken cli command
* Add: shinken CLI now have a loop for commands
* Add: make shinken cli command modular
* Fix: revert webui as submodule in core
* solving the timeperiod testcases now
* Module cleaning : It was a lie. The cfg file is there. Was there
* Module cleaning : Poor trending was alone. Now it can rest in peace
* Module cleaning : Poor zmq has no cfg file! I killed IT *evil*
* Module cleaning : Syslog has been destroyed
* Module cleaning : Sqlite over
* Module cleaning : Mongodb is dead
* Module cleaning : The end is near
* Module cleaning : It's a TRAP
* Module cleaning : Do you have something without SPAM in it?
* Module cleaning : A Witchhh! BURN IT!
* Module cleaning : You shall not pass!
* Module cleaning : Fly you fools!
* Module cleaning : Enemy down!
* Module cleaning : Serial Shooot !
* Module cleaning : Multikill !
* Module cleaning : Killstreak 3
* Module cleaning : Good bye me friend.
* Module cleaning : let's begin
* time typo
* adding two more test cases for timeperiods
* Add: submodule webui
* Enh: remove the Livstatus module from the core repo
* Enh: remove the Logstore modules from the core repo
* Enh: remove the Canopsis module from the core repo
* Enh: remove the NDO modules from the core repo. Hail to the king baby
* Enh: remove the WebUI module from the core repo. Hail to the king baby
* Enh: remove the Landscape import module from the core repo
* Enh: remove the Glances WebUI module from the core repo
* Enh: remove the WebUI auth modules from the core repo
* Enh: remove the AWS, GLPI and MySQL import modules from the core repo
* Enh: remove the status.dat module from the core repo
* Enh: remove the nrpe booster module from the core repo
* Enh: remove the simple log module from the core repo
* Enh: remove the service_perfdata flat file module from the core repo
* Enh: remove the retention-redis module from the core repo
* Enh: remove the pickle-scheduler module from the core repo
* Enh: remove the pickle-generic module from the core repo
* Enh: remove the mod-auth-htpasswd module from the core repo
* Enh: remove the named_pipe module from the core repo
* Enh: remove the retention_nagios module from the core repo
* Fix test/test_bad_start : Update path
* Enh: remove the mongodb_retention module from the core repo
* Enh: remove the merlin module from the core repo
* Enh: remove the retention_memcache module from the core repo
* Enh: remove the ip-tag module from the core repo
* Enh: remove the perfdata_host module from the core repo
* Enh: remove the hot_dependencies module from the core repo
* Fix : test_properties_defaults. New attribute for service and new path
* Enh: remove the module_hack_poller_tag_by_macros module from the core repo
* Enh: remove the module_hack_cmd_poller_tag module from the core repo
* Enh: remove the file-tag module from the core repo
* Add: now the shinken cli command can also merge the test directory
* Small Pep8 after cherry pick from squizou
* Add: shinken cli etc install, and module_type force to be - instead of _ for pre2.0 compat
* *Add: Basic install management to shinken cli *Add: gevent to the renamed ip_tag->ip-tag module, optional
* Fix: don't parse the last part because if the original string ends with a "\", this last character is deleted
* Fix : Mixing bash and sh style
* Fix test_livestatus_hints.py. Put smaller conf, previous were using all memory. If you know how to tweak it with big conf, feel free to add them back
* Add : Robin Gloster to the THANKS file
* Add: search parameter on the shinken cli tool
* fix wmi_ini_dir
* Fix: cleaning default conf, and add share into setup
* Fix: merge host contact merge into service code into the good branch
* Revert "merge service contacts with host contacts"
* Revert "forgot changes in item.py"
* Revert "added explicit config to merge contacts from host to service"
* Add: Stefan Taute and Jean-Claude Computing for htiey patchs about syslog module collision
* Add: Alexander Springer to the THANKS file
* Add: test_antivirg.py into automated tests
* Add: Squizou to the THANKS file
* Fix test : add time.sleep
* Fix test : add time.sleep
* Fix : Using time_hacker.time_warp instead of time_warp in tests
* Fix : Use time_hacker where needed
* Fix test_livestatus_mongodb : * Use template to simplify it (init_livestatus). * Remove useless tests (not using mongodb). * Add assert and test on mongodb database * Use time_hacker to fake real time
* Add a class to Hack Time properly. Will with other test related to soon
* Del: packs from shinken repo. They are now in https://github.com/shinken-monitoring
* Delete left behind services from a wrong push..
* Fix: bad merge
* Delete old spec file
* Revert "Created splitted files"
* Revert "Rename nagios-windows.cfg to shinken-windows.cfg and adding shinken-specific dir into"
* Revert "Rename nagios-windows.cfg to shinken-windows.cfg and adding shinken-specific dir into"
* Revert "Added splitted shinken specific file for load balancing configuration"
* Revert "Reorganize shinken configuration files"
* Revert "Reorganize files"
* Change the test_antivirg to use the "setUp" function
* Added time templates and comments all of them
* Undoing wrong commit pushed... Sorry for that
* Fix typo
* Fix: wrong bottle module import. Changed to bottlewebui
* Fix test_livestatus_cache.py #926. Need to refactor the livestatus test set
* Added service template for os packs with system aggregation
* Fix: forgot to specify oid to use for tme pack
* Added tme environmental pack
* Correct spelling mistake
* Modify the anti-virg test : try to send a command to the host
* Add: remove useless shinken-specific files from conf
* Add: move ini files into a etc/daemons directory
* Add tests to check that a comment is parsed as it when it begins by a semicolon
* Added script plugin and leave compiled and complexe plugin to be installed by install script
* Added vgstate aix service file in aix pack
* Delete flash recovery area monitoring from Oracle pack
* Improve use of only_related_to in datamanager
* Remove useless pdb
* Fix : test_livestatus_trigger.py
* Delete SSL Config Pyro4
* Fix typo
* Adding custom check_oracle_health with one metric added : datafile-io-time
* Fixing number of IT Problems according to user rights
* Add: move daemons ini files
* Fix: allow the "__ANTI-VIRG__" substring in the configuration files
* Fixing filtering host in the impact tab according to user rights
* Fixing filtering host name in the wall according to user rights
* Fixing filtering host name in search bar according to user rights
* Fix: test_bad_start
* Fix: wrong macros invocation in os packs command files
* Add: start to split configurations files into several directories
* Fix wrong macros invocation in linux pack
* Fix switch.pack syntax
* Added macros description into aix and linux pack file
* Added macros services for detailled notifications and add infos in pack files for aix and linux
* Added macros description into aix.pack
* Fix: some old multiprocessing lib got issues on the manager.start call, so try to detect it. Fix #923
* Added aix-service template for aix pack
* Fix: better stop of http_daemon on sub processes
* Fix: ws_arbiter module and the default configuration file
* Add: csv_tag module, like for an ITop tool tagging based
* Added vg state service in aix pack
* Added additionnal informations into AIX pack to get detailled notification
* Added additionnal informations into fs services to get detailled notification
* Added business_impact directive to some services
* Fix: test case
* Fix: typoe in CherryPy name
* Fix: merge master
* Fix: less verbose HTTP
* Better logging level for ping
* added explicit config to merge contacts from host to service
* Fix indents in the mssql pack service files
* Add: CherryPy backend for HTTPS available. Save LOT of cpu for the clients part
* Add aggregation & defaut user/password to the mssql pack
* Add: better HTTP1.1 SSL server
* Remove failover service in vmware cluster pack
* Remove failover service in vmware cluster pack
* Fix syntax errors on vmware pack
* Updated vmware.pack with new cluster pack infos
* Add: SSL management on the http core. Beware, it is using key/cert on /tmp currently. And the simple_server is giving 1.0 output, and it is a problem as the connexion is closed every time. Need t switch to another backend that manage 1.1
* Added vmware service template to aggregate vmware services
* Remove vmfs monitoring ref
* added vmware cluster conf to vmware virtualisation pack
* Fix: webui pages with the new bottle path
* Add: switch python-requests with pycurl. Lot of fun inside :D
* Rename directory to avoid name clash with standard library's syslog module
* Fix: properly change locale
* Fix sudoers.d/shinken file integration
* Reorganize files
* Change NMAPMAXRETRIES to 3. Better detection
* added enable_environment_macros and disable_environment_macros to commands
* added enable_environment_macros and disable_environment_macros to commands
* Reorganize shinken configuration files
* Added splitted shinken specific file for load balancing configuration
* Rename nagios-windows.cfg to shinken-windows.cfg and adding shinken-specific dir into
* Rename nagios-windows.cfg to shinken-windows.cfg and adding shinken-specific dir into
* Created splitted files
* forgot changes in item.py
* merge service contacts with host contacts
* Multisite version update
* Fix : reset self.nb_check_received before the main loop in scheduler.py
* Fix : Exception name for ProtocolError
* Add : Mickaël Falck to the Thanks file
* Adding support for custom network ifaces (via _NET_IFACES) on check_netint.pl
* fixed typo in the first paragraph
* Add: pycurl lib instead of requests one in the satellite connection from arbiter
* Fix: systemd f18 support to start arbiter with correct WD
* renamed .nagios() to .alert()
* Fix: Update plugin and change download URL for IBM_DS_health check
* Add 'Submit Check OK All' function to WebUI Problems view
* add syslog ident otherwise shinken will show up as "python"
* get ALERTS without setting scheduler log lvl to INFO to suppress bilions of useless logs
* added option for enabling notification env macros even if lit are enabled
* Fix: close sockets on the sub processes
* Add android-sms example notification ways to template.cfg
* Add : profiling options to some daemons
* Add : attemps to remove pyro every where
* Update FOR_DEVS / Branch name
* Update FOR_DEVS
* Fix : remove test on value which is an integer. Value = 0 was not send by graphite + Pep8, Pylint
* Allow specifying minimum number of days a certificate has to be valid
* Update glpidb broker to manage acknowledge (work with glpi plugin 0.84+1.0 minimum)
* Reformat Windows template file
* Fix: Missing underscore
* Fix: Adjust fs_rules discovery rules
* Fix: a bit more test end to end. Still to go
* Fix : more tests. Sonn all ok
* Fix : some tests and connexions for betting broks. Now the passive satellites
* Fix: unfixed merge conflict
* Install script: Added F18 support and code make up
* Enh : cleaning a bit the pyro to http thing
* Second Try : Removing the experimental adjusting load part
* Add : now broker can get broks on satellites too
* Add : now the poller/reactionner can connect to the scheduler, get checks, and get back results too
* Add : now the arbiter can send the configuration to the satellites
* Add : make all daemons listen in HTTP instead of Pyro
* First Try to fix adjust_worker_by_load + Pep8 + Pylint
* Enh : add new ignore rule
* Enh : add new ignore rule
* Enh : move webui views into the webui module directory
* Enh : move htdocs from shinken dir to webui module directory
* Enh : move webui plugins dir into the webui module directory
* Fix : byebye hostd :D
* Fix : (by:GAULUPEAU Jonathan) Graphite_ui now load templates even with nrpe ones, like PNP does. Also fix a but that was reinit the tabs in the detail veiw again and again
* Update .gitignore
* Fix : OS check on test/test_db_sqlite.py
* Allow specifying syslog facility and priority
* Fix : Livestatus regenerator crash on log debug is hints is None
* Dirty Fix to avoid an backtrace, need further investigation
* Fix : test_db_sqlite.py with a real path to a created sqlitedb at runtime
* Fix : test/test_bad_start.py : Removing Test from the template name
* Fix : test/test_business_rules_with_bad_realm_conf.py : is_correct is a method not the boolean
* Fix : ok now all tests are OK. Gogogo folks fo the module change :D
* Fix : origian, more tests
* Fix : again some tests. We got numerous ones :D
* Fix : still some tests related to modules
* Fix: test pickle fixed
* Fix: more test fixed on the modules part
* Fix : a first test. More a hundered to go.... :D
* Enh : Big one. Export modules from the python lib to another directory. Will lay in the var directory for direct launch, and var_root/modules for setup.py ones. Currently install setups shoud be broken I think, but as this is not the ending thing, it is not a real problem
* Enh : change most modules directories into better one. It do not change configuration at all of course
* * Clean up shinken init file
* Fix get mod ini file
* Only add test_*.py files into all_test.txt
* Fix : merge things
* * Init script now use more variables from shinken default file
* Fix: (by:Jean-Claude Computing) enhance mongodb logstore index
* Add : branch for the 1.4 release version maintenance
* Add : (by :frederic.mohier) last patch was about enable nmap discovery under windows. Thanks
* Add : (by :
* Fix syntaxError
* Add thresholds for Mysql uptime
* Add DB2 pack in shinken 1.4 style (aggregate stuff...)
* Add check_db2_health plugin support in install script
* Add Oracle Server install support for 5.x and 6 to 6.4
* Fix: Use an optimal index
* Fix : Changelog time for 1.4 release
* Install Thruk via install script (tested on Debian 6 and RHEL 6)
* Fix email notification commands
* Port is integer, not string
* Typo fix
* Fix: install check_wmi_plus config in proper directory
* Add : Alexandre Veyrenc in THANKS and Changelog about his fix about graphite module
* Add : go in 1.4 version. The tag will need maybe a fix for nagios-plugins later in the day
* Fix : install.shinken-monitoring.org, also install check_netint
* Fix nagios-plugins building
* Fix: Add error messages
* Fix: catch lot of unicode error into graphite related modules. NEED to catch them in logger. functions..
* Test parsing perfdata with labels containing space characters
* fix: handle perfdata labels with spaces
* Fix wmi ini folder
* Fix : (reported by:fitzdsl) a spare that got a bad configuration can crash when try to send a configuration it do not have in master failback
* Add : Html coverage reports
* fix : packages are now created with a . directory as root, no more the package name
* Add : allow to do not display time on logger, and a first version of the bin/shinken tool
* Add sattelite name
* Add : first preview of the new shinken bin
* Fix : conflicts
* Fix : some livestatus related tests
* Fix : bunch of modules tests
* fix : others tests about modules
* Fix : some others modules and module tests. More to come
* Fix : staring to fix some tests
* Small modifications on install-shinken script command . Add the ",et stop" command before deleting services
* Add : BIG COMMIT. Change the module management from .py and directory into directory/modules.py only. Will be easier to manage setup and remove modules if all got the same layout. Looks quite good for tunning, but I thinks the tests should be broken. To fix so
* For the CMD files, Put the python exec file as a var. If the .py is recognized on windows, not setting the var will launch the .py ;-) It is also a good thing to try multiple versions for python exec...
* Fix : missing options default for new webui parameters
* [ADD]Check_windows_network (Chek windows network)
* [ADD]Check_windows_network (Chek windows network)
* [ADD]Check_windows_network (Chek windows network)
* [BUG]CHEKIIS
* Delete SSL Config Pyro4
* Add : changelog for 1.4
* fix : missing inidir option on a windows pack command
* fix: no need for a warning on a simple restart
* Fix : crash in graphite ui when perfdata where malformed
* fix : merge conflicts
* Add : GILLARDEAU Thibaut to the THANKS file
* fix: no need for a warning on a simple restart
* Wrong Algorithm in is_correct and fix is_correct usage
* Typo in var name
* Fix pattern error : too many parenthesis
* Fix #846
* Fix : until skonf is ok we will remove the link from the webui. People that want to test will will know its address. This will reduce useless bug reports on the forums from people that don t understand what beta means
* Do not add $DESTDIR to configs
* Add : TAG 1.4rc1
* Fix : disable the PickleRetentionArbiter and PickleRetentionBroker by default. Very advanced modules taht should not be used without warnings and checks
* Fix : (reported by:Benoit Dunand-Laisin) livestatus command management with json option
* Fix : currently removing skonf from standard install. If people want to TEST it, they will have to go to the init.d script. This will remove all script-kiddies from testing it and cry because it dont work. Dev are welcomed of course, but this wont block them
* Fix : bad offline receiver was too much verbose. Fix #559
* Fix : (reported by:pepejey) void password in ldap auth module. Fix #822
* Fix : (reported by:Georges Racinet) lot of SSL errors with Pyro3. Fix #839
* Fix (reported by: Beuc) : bad discovery script name. Fix #843
* Sqlite to Mongodb logstore converter
* Fix Font color / dashboard
* Fix : get back refresh on dashboard, so widget edit work again
* Fix : WebUI /impacts now display root problems even if there are lot of them
* FIX #613 macros was overinding modules list instead of just adding a module. No bug at all just a misleading configuration in macro
* Try to fix the mysql python module installation on redhat/centos
* Added instruction for local snmp configuration. Usefull for sample configuration
* Fix: Update module definition
* Fix missing snmp package. Default configuration use snmp checks for localhost
* Fix : merge conflict
* manage | escapement (with \|)
* Fix : make the NDO synchronize_database_id option 1 by default to avoid single scheduler mode bug. Make the module far less verbose too
* FIX : Jenkins tests + autogeneration of all_tests based on py file in the tests directory
* FIX : Jenkis test scripts : The loop skip empty lines
* Rmove some tab in shell
* Add report file to jenkins tests
* Add a warning after catching a ProtcolError + pep8
* Add check_future_packet properties
* Fix Typo in command definition
* Add Vcenter Template
* Missing arguiment to Windows Command
* Safekit : Add Host Macro for SNMP Community
* Hacmp : Add Host Macro for SNMP Community
* Add Disks plugin for VM via vCenter
* Unfied Memory Service name for all packs
* Add Macros for SNMP Messages Sizes
* fix : change miluebbe by Michael Lübben real name
* Fix : (reported by: miluebbe) catch bad protocol exception in daemons, like a telnet connexion. Fix #829
* Change Vsphere SDK Version
* Fix Alignement
* Fix Webui/Skconf port
* Fix Timeperiod calculation
* Fix: (reported by:darthelmet) bad NOT management for bp_rule and complex expression. Fix #827
* Fix : remove useless print
* fix bindAddress processing (options from shinken-specific are unicode, bottle needs string)
* fix : (reported by:sebguilbaud) bad URL for check_hpasm
* Fix : some test regression wit hte multi-brokers, and the webui-devel merge
* add webui option processing for bindAddress and umask
* Add : (by:sebguilbaud) update the check_hpasm version
* Add Tooltip to overview bar / eltgroup
* Del unused part
* * fixed typo "perfdata" * return_code can be 0, so specifically check for None
* Change header structure
* Add properties to ESX Host and ESX VM in discovery_runner
* Fix : try to fix the no log error for scheduler and log level. Need a beter solution
* New impact panel design
* Add testcase for timeperiod issue
* BugFix: Check if a poller exists to handle services tag.Raise error if not
* Result box disabled
* fix : (reported by:boardstretcher) fix #814 about regression since last SSO related patch
* Correctly rewrite instance_id when you have more than 1 scheduler
* Manage historical tables
* Manage objects table without deleting all items
* Clean up
* Don't clean up central tables at startup
* Don't compare string and int
* Fix mispelled option for ndo
* Add : new option for realm : broker complete links, so now a scheduler can give broks to several brokers instead of only one
* document, what remote_user_enable 2 setting is doing
* ws_arbiter now supports multiple input values. The ws_arbiter module can now accept a list of metrics to process. See: http://www.shinken-monitoring.org/forum/index.php/topic,846.0.html
* add remote_user_variable from wsgi environment, to use set 'remote_user_enable 2'
* Added collectd header in shinken-specific.cfg
* Fix : test_end_to_end.sh now OK
* Fix : (reported by:Finn Christiansen) Fix #803 about a missing get_all_host_names_set functions since 1.2.4
* Added collectd_disk.trig example
* Added proper support for counter/derive/absolute datatypes, by taking the derivative. Removed debug logging
* Added support for collectd messages. Added support for more than one value in VALUES collectd part. Fixed graphite broker to nicely deal with multiple values. Fixed graphite graphs to support multiple values by showing '.*' of that metric
* Add jquery triggerd hover effect
* Enh: layout aligned
* Add : small commit to test another repository submodule
* Add font color class
* Add : now the arbiter can take its arbiter lookup name from parameter. Use to allow same host to run arbiter in HA for tests
* Fix : fix #509 now bp_rules can manage multi-levels rules with ()
* Add : new arbiter module, FileTag, taht will tag an host if it is present in a flat file
* Fix: path to font libs
* Update Font Awesome 3.0.2
* remove _fs_custom stuff
* Modified collectd pack in accordance to proper naming aswell
* Add: auto refresh function to view
* Fixes #617 : is this enough to fix ?
* Change var name and update is_correct in daterange
* Changed naming of plugin_instance and type_instance to plugin-instance and type-instance to match official collectd write_graphite plugin
* Added support for high resolution time/interval (collectd 5.0), and also added support for derive and absolute types
* Add: Screenfull lib
* Fix: Bug #793 missing globals() variable
* Changes variable name Factor matches
* Starts to Fixes #606 Only fist step that checks right format Need help to continue
* Enh: Enabled refresh disable function / fullscreen
* Enh: Change tab names / system log
* Add : AWS arbiter module, to import your hosts from AWS/EC2
* Delete net-snmp-python for RH5
* Fixes #615
* Fixes #624 Tried on Debian Needs package name check for other distro
* Fixes 724
* Fix wrong alert info message
* Add : macro_modulations objects, to dynamically change the macro based on the timeperiod. Can be useful as check_modulations, but easier to use, so maybe they will simply replace them
* Use persistent cookies by defaut
* Fixes #776 : use "expires" of simplecookie (of bottle.py) Be carefull, "expires" uses String and not Datetime nor TimeStamp see : http://stackoverflow.com/questions/7913169/python-bottle-persistent-cookie-not-working
* Put the lower back in dicovery_runs.cfg (asked by repo owner)
* Fixes #779 : sorting fathers before printing
* Fix : some tests need db_mysql and json directly
* Fix : merge conflicts
* Add : test case about check modulations
* Add : rename checkways into checkmodulation
* Fix: Missing quote in host state notification e-mails
* Add : (nerocide) now KEY are expand on the service_dependencies property
* Change style to span / eltdetail
* Fixe typo in doc in templates.cfg in linux pack
* Fix : the test nrpe is not working on windows. maybe because how multiprocess work on windows, with re-import the current file hwne launching the sub-process. Not really important here
* Add : WebUI start of a geomap, imported from https://github.com/darkweaver87/alertsmap with Remi Buisson auth. Still work to do, for centring the map (wtf....) and give real data
* Fixes typo in service Disks of linux pack Add new check_disk_custom for linux pack as sample for multi-value duplicate_foreach statement
* Fix : maybe it can fix a bug on this test under windows. Maybe
* Fix : (reported by:Johan Svensson) nrpe booster module now manage more than 1024 simultaneous connexions by switchting from select based poll to a real poll call
* Fixe wrong btn alignment for Host Detail Impact
* Fixes Typo is Windows.packs It is better to use HOSTALIAS for check_esx3.pl Business_impact 1 for vmtools Remove "tolower" in disco vmware check_esx3.pl is case sensitive
* Fix : conflicts. do not work on a unpulled version...
* Fix : (reported by: Johan Svensson) now poller worker crashs are now put in the log
* [mq]: flupscgi.patch
* Add fullscreen dashboard menu
* Fixes Typo Add check_esx_vm_alive Replace "heavy" check by light check for basics : cpu, mem Add VM Tools check Add Host Macros (as usual)
* Fixes MsSQL packk Typo Add Host Macros for Windows Pack
* Bugfix: NRPE Poller
* Add : Johan Svensson to the THANKS file for the NRPE booster patch
* Fix: invalid variable name causes nrpe_poller crash when recieving SSLError exception
* Trap memcache exception
* Factorise memcache key normalisation and apply to hosts
* Close connection after memcache operation
* Remove useless import
* Enh: Issue #688 / add configuration option
* Enh: Issue #688 / basic prep
* Enh: Issue #688 / basic prep part 2
* Enh: issue #688 / basic prep
* Fix: ticks handled only for pickled data - reset to 0 after success
* Temporary revert for initial state logging
* Only log warning messages
* Dont log debug messages
* Fix: WriteConcern and wrong initialization value
* Fix: WriteConcern will/must be handled using connection global parameters
* Fix: WriteConcern will/must be handled using connection global parameters
* Move initial_states logging from info to debug
* Fix: Do not reset ticks on init only on __init__
* Fix: mongodb fsync as a parameter
* Fix : (reported by: flaf and Imrane.Dessai) bad additive inheritance with multiples templates
* Add PKGS for Redhat, Fedora & Debian
* Enh : Add fsync parameters
* Fixes error in macros definition Add Host Macro for database backup age http://labs.consol.de/forum/#/index.php?p=/discussion/9/imported-comments-for-check_mssql_health-/p5
* Add test for indirect inheritance with plus
* Fixes for Tab/WhiteSpace
* Add of Host Macro for switchs
* Fix Typo, thanks openglx
* fix configuration files
* fix configuration file
* fix configuration file
* Tab and white spaces
* Again, typo with Tab and 4 white spaces
* Fixes #5 Add Host Macro for packages Ldap
* Fixes type in _MSSQL_CONNECTION_CRIT
* Fix : (reported by : igup) logstore_mongodb did nt manage the class filter
* Fixes typo
* Fixes type in WARN macros Added Macro definitions in mssql.pack
* fixes #3 fixes https://github.com/naparuba/shinken/issues/757
* Fix : test test_livestatus_mongodb
* fixes #4 Tab error (using 4 space instead)
* Tab error (using 4 space instead)
* Tab error (using 4 space instead)
* Update Changelog
* Add : WebUI now manage aggregation in the dep trees, reducing the number of visible elements
* fixes #4
* Add : first version of user/system time catch for checks
* Merge: Don't keep RHEL5
* Fix: apply corrects rights on sudoers file in sudoers.d
* Add : WebUI Glances view now raise a real error message when fail to connect
* Add : WebUI /detail view now save the tab on the location hash, so a refresh will put the user in the good tab
* Enh : (reported by: joachim schiele) update the PNP version to the lastest one
* Fix : remove useless print in checkways code
* Add : check_ways objects
* Fix visudo output redirection
* Fix coloured output
* FIX #749 : MySQL-python complainig about outdated version of distribute
* Remove tabulations and replace them by 4 spaces in config. Stop using Fucking tabulation
* Add : jbeltran to the THANKS file. The previous commit was about a regression logger call to the glpidb module
* Fix : (reported by:)
* fixes https://github.com/naparuba/shinken/pull/759
* fixes #1 fixes #2
* Add : spil-brensen to the THANKS file
* Update install.d/shinken.conf
* *Fix : (reported by: Imrane.Dessai) Typo *Fix : cv_linux crash when elements in PENDING state
* Fix: Parents werent displayed in webui
* Ehn: add an optionnal list of hostnames to ignore for iptag module and a set option to force the value
* Fix : get back test end to end alive after the nagios.cfg clean
* Fix : some tests after the last comits
* Fix: get back PROCESS_SERVICE_CHECK_RESULT and PROCESS_HOST_CHECK_RESULT work after check_in_progress and force checks enhancement
* - fix: function pythonver was not used - fix: could not call # nagios -vp nagios.cfg (like Check_MK does)
* Fix: variable twice defined and remove useless variable
* Bugfix: Encoding in macroresolver
* Fixed string in usage
* Adding example client for zmq_broker.py
* remove exclamation mark
* Add : Christoph Roeder and François Lafont to the THANKS file :)
* Add : Only load re module once on the livestatus pnp function
* Fix #738 - Livestatus and pnpgraph_present
* Change font color to white (important impact box)
* Update shinken/modules/zmq_broker.py
* Update shinken/modules/zmq_broker.py
* WebuiFix: Forced check are now handled
* Update shinken/modules/zmq_broker.py
* BugFix : fixed handling of forced check
* Add : WebUI can now load plugins from the modules. Move glances specific views to a glances_ui module
* Correct use of logger. Fix #728
* Add : WebUI can now load an additonnal path for plugins taht can override the default ones
* sometimes sched dict do not contains con key
* Add : Thomas Cellerier to the THANKS file
* Update shinken/modules/zmq_broker.py
* Update shinken/modules/zmq_broker.py
* Update shinken/modules/zmq_broker.py
* Update shinken/modules/zmq_broker.py
* A ZeroMQ pub socket broker for shinken
* TAG: go 1.2.4
* *Add : color to the logs if we are in a TTY *Enh : remove useless sample hosts
* *Add : aggregation can now be filled with $KEY$. Useful for Oracle pack for example. *Add : lot of packs with now aggregation
* Enh : put aggregation for mysql and mongodb packs
* Enh : WebUI /detail aggregation with multi levels are now nicer
* Add : WebUI /detail pages now show aggregation for host services
* Add : WebUI /detail pages now show aggregation for host services
* Enh : WebUI custom views, with now real states, spinner and reload
* Enh : webui process custom view now with fancy units
* Add : WebUI custom view for process now sort by default. From now memory, but will switch to cpu
* Add : WebUI custom views are now lazy loaded, and not twice
* Add : webui custom view for processes. No sort from now
* Add : webui memory custom view, based on glances service
* Fix : go to the 1.55 for check_wmi_plus script
* Add : perfdata to mongodb comands pack
* Enh : WebUI add real values to the linux custom view, based on default pack
* Add : WebUI first try of custom views with the linux one. Dummy data
* Fix : WebUI link for help
* Update shinken/objects/host.py
* Update shinken/objects/service.py
* Add : sample hosts for various templates
* Update shinken/objects/service.py
* Enh ; begin to enhance the sample hosts and services. Still lot of work ahead
* Enh : default configuration cleanup, and some typos fixed
* Fix : htpasswd.users got bad default user
* Fix : test end to end case, mostly about the sample configuration
* Fix : LS module crash when bad socket close on the client side
* Enh : directories cleaning
* Cleanup timeperiods view / Skonf
* Cleanup commands view / skonf
* Enh: Commands view layout / Skonf
* Fix : of course I forgot a 1.2.2 somewhere...
* TAG: 1.2.3 release
* Add : a test case about the #656 . Cannot reproduce on 2.7, maybe 2.6 or below will fail
* Fix: add skonf service dependancies for systemd init system
* Fix: add skonf service dependancies for systemd init system
* Add SO_REUSEADDR to nsca sock to allow fast stop/start
* Add License to css file / Skonf
* Add special table class
* Enh Timeperiods view layout / Skonf
* Cleanup / skonf
* Enh: "more options"-box / skonf
* Fix indent
* Enh: Better handling of Carbon connection. Need a better buffering now :)
* Comment openport rule about fs_discovery
* Fix : revert the b8e068969ffa9fd311dad765489e912feca64e5f commit because it make 2 notifications launched when restart after a long time instead of just one. Fix the test by waiting a bit longer instead
* Add : Nicolas Pichon to the THANKS file
* Fix : too much notification protection was a bit too protective. We are using now instead of a future time when we think the value is load from retention and is just too old
* Enh : Remove useless code from schedule() that was not useful for solving graphite data lost. So Fix #629 with the minimum code possible
* use _GRAPHITE_PRE from host, and _GRAPHITE_POST from service
* Add : test case for comprex expression and multi () levels
* Enh : cleaning and refactoring of the new compex expression matching
* Enh : remove useless code now
* Add : new way of parsing the complex expressions for hostgroups and templates. Fix #676 Need some cleanup and refactoring
* Relocate weblogic pack
* fix URI generation when using datasource, _GRAPHITE_PRE and _GRAPHITE_post
* fix Non-ASCII character
* Bugfix (Reported by flak): fix possible notification spam if retention is used
* Add : test case about the issue #676
* Add a nicer "more options" dropdown menu / skonf
* Add: signin icon
* Fix: Adjust logging level
* Remove top headline icon
* Enh: Host element / skonf
* Fix typo
* Fix : more Pyro exceptions handling
* Fix : last commit was from rdumonnet and remove alias for generic-host, so the value will be used from real hosts instead
* Fix : (reported by: )
* Fix : (By : Olivier Hanesse) schedule times load from retention were used even if the time was past, and make launch a bunch of useless checks. Now will be drop and reschedule with a smooth way if they are in teh past
* last typos fix, i hope
* Fix typos in comments and strings of webui
* Fix spell of pattern in code
* Fix : oups I forgot a part in the last commit. This fix the "too much notification" bug after a restart, and also a potential bug for hosts downtimes overlap
* Fix : (reported by: Rémi BUISSON)
* Remove unrelated changes
* Remove unrelated changes
* Typos fix using pysource-spellchecker
* * Add Shinken features for Nagvis
* remove unused variable
* Added first part of tomcat pack. This pack need a proper installation of jmx4perl on shinken server (or poller) and a proper installation off jolokia on the tomcat server
* Update epel version to 6.8
* Add : (reported by: ethtricks) manage hosts macros addressX. Fix #640
* Fix : add default pack_distribution_file to nagios.cfg file, so it fix #576
* Fix : issue 597 about code file exec rights
* Add : WebUI new capability, now a template can call app.template_call to include another template, name is ondemand, so we will be able to customize /detail pages based on element configuration, like a special linux view for example, with CPU/MEM/DISKS gauge
* Fix : oups, I forgot to add the test_module_trending.py file
* Fix bad import in shinken-admin
* Fix : (from : Hermann Lauer) typos in modules
* Cleaning: remove RH5 specific code
* Revert "Cleaning: remove RH5 specific code"
* Cleaning: remove RH5 specific code
* Fix: Debian installation, wrong python package
* Fix: multisite sudoers integration
* Add : manage warning and critical values to be take from the trending database
* * add libvirt_auto_linking configuration example
* Add : PNP4Nagios templates for the new check_trending.py checks
* Add : check_trending.py now manage in future checks. More to come for warning and critical things
* Add : auto-magically add the shinken root dir parent to the PYTHONPATH environ variable in the daemons if the shinken lib is nout found. Should allow checks to use the shinken lib without problems
* Fix : missing trending pack
* fix log/indend
* fix indent
* Add : first configuration sample about trending check
* Add : first version of the check_trending.py check
* Fix: Daemon timeout and receiver module options descriptions
* Typo in reactionner comments
* Enh : better on demand macro tests
* Add : trending_policies to the test_properties_defaults.py test
* Enh : rename trending_import_csv.py into shinken-trending, and add some listing and delete options
* Fix : remove Trending from the default modules before push
* Enh : trending script and modules with now shared code. Lot of clean to do still
* Enh : trending import cleaning
* Add : first version of the evolution trending algoritmh update. Please don t look too close to the code..
* Add : real trending class for factorization
* Enh : trending import remove gzip entry, and make it automatically by looking at file extension
* Add : trending_dump_centreon the full mode option, for full database dump. Beware : it can be really, really long to do this
* Enh : trending import script with less verbose
* Add : first version of a Trending broker module, and libexec scripts
* Fix : test cases with the new orphanage time parameter
* Fix some configuration generation problems
* fixed the syntax error mess in pull request #537 PLEASE - do not submit code which is full of obvious syntax errors PLEASE - do not accept pull requests which are full of syntax errors
* fixed bad_start test for environments where groupname != username
* Enh: Use sudoers.d with a file for shinken sudo needs instead of sudoers file
* Honor check_for_orphaned_* config params + add time_to_orphanage support for service and host
* Integrate nconf patch from ppj (found in monitoring-fr.org forum)
* raise a timeout in nrpe_poller test, so windows connect() has enought time
* let livestatus handle display_name correctly
* Poller handling of abnormal plugin failures. Non-english shell stderr is captured too
* remove the impossible attempt to format a lambda
* Fix: space between "Host tag:" and tag label
* Enh: host tag listing / packs skonf
* Cleanup / packs skonf
* Enh: List / grid view switch / packs skonf
* Add spanX to table
* * Add timeout for libvirt requests
* * Cleaning
* Add title and table to packs view / skonf
* * Add hot host dependencies with libvirt
* Reindent packs view / skonf
* Fix: add missing stop script
* Add info message / skonf getpacks
* FIX #690 : sudoers is now 0440. This had a huge impact on shinken user operations like in discovery process
* FIX #689 : add sudo prerequisite
* Enh: Get new packs / skonf
* Fix typo packs / skonf
* Fix: contacts form / skonf
* Clean file
* Add default mongodb
* Add mongodb by default
* Delete old file
* Add Init Script
* Add shinken skonf sytemd
* Fix: add pre-requisite for check_netint plugin install
* Add postgreSQL monitoring pack
* Change header font size & Change alert color
* Update bin/default/shinken.in
* Fix : do not enable MongodbRetention by default
* Add : mongodb replicat set management in the scehduler retention module
* Add missing double dot
* rm stray period
* copyedit install paragraph
* Fix minor typo
* Add Shinken license
* Add : (from : Joel Ramat) include the -property feature in discovery
* Add: caps lock detection login form
* Change contacts
* Manage sudoers to use nmap by discovery process
* Manage sudoers to use nmap by discovery process
* Added missing python module dependency at installation
* Added missing python module dependency at installation
* Update etc/shinken-specific.cfg
* Update FOR_DEV
* Change cups discovery rule
* Change netint plugin name to fit new name of last version in commands.cfg file of unix os pack
* Change netint plugin name to fit new name of last version in commands.cfg file of unix os pack
* Forget '_' of host_macros in safekit pack
* Forget '_' of host_macros in safekit pack
* Fix: discovery for safekit cluster
* Fix: discovery for safekit cluster
* Fix: wrong discovery rule condition for fs discovery
* Add man page
* Fix : (reported by:sebguilbaud) fix #668 : was not managed in webui for names
* fix small typos
* Add : Jfbutkiewicz into the THANKS file for his HUGE work on the windows installation. Thanks a lot
* Update install
* Add : THANKS for opc and ppj for the arbiter spare bug
* Fix : (reported by:) get back the arbiter spare management
* * Add realm and poller_tag attributes in Livestatus module
* Fix: spits out an error message when wrong use of variable in ini files. Like unset variable used in another variable
* Add Custom log range datepicker
* Enh: System log mockup
* Enh: More robust python module installation and Fixed module name that never match for import
* Install script updates
* Modifications in dounzip to be more efficient..
* Enh form layout "direct" tab / skonf
* Fix possition "tag" list / skonf
* Fix issue 647 for good: add some missing parameters in skonf cfg file
* Make arbiter last after all daemons except skonf because of issue 647
* Change form to div / skonf
* Fix skonf stop script
* Enh form possition / skonf
* Fix & Enh: Macro Tab / skonf
* Remove useless padding class / skonf
* Fix: start arbiter in last place has wrong behavior
* Fix: type in sript install
* Enh: reload systemctl conf after removing Shinken
* According with the shinken owner, removing the libexec third part of the shinken sources
* Change icon
* Remove list / skonf main view
* Enh: btn possition / skonf main view
* Sample text added / skonf
* Fix: wrong package install for mysql on RedHat distros
* Add Info box + Reindent / skonf
* Enh landing page / skonf
* Add "Beta" badge
* Add License css file landing page / skonf
* Enh landing page / skonf
* Add font awesome to skonf
* Del span tags (no longer required)
* Fix: remove non existing systemd service from enable
* Use of cmd 'install' instead of 'cp' or 'mv' on plugin install Add Support of Fedora for enableeue
* Add distro support to install notify_by_xmpp
* Fix: new Fedora var about systemd lib root path
* Fix: add mysql-client for Debian when install the server
* Fix, wrong plugin owners after installation
* Remove uneeded from var. This can't be installed cause to prerequisite that fail before
* Cleanup redundant code by removing 'case' block code and reusing useful existing functions or creating them
* Fix, wrong plugin owners after installation
* Remove uneeded from var. This can't be installed cause to prerequisite that fail before
* Cleanup redundant code by removing 'case' block code and reusing useful existing functions or creating them
* dashboard/currently: use a 24H clock format
* Use of tnsname.ora file to acquire oracle connect-string
* Enh. relocate by doesn't make it uneeded processes and improved directive tweaks. Make default configuration right to arbiter
* Make better fix for file permissions and owners
* Removed uneeded discovery.cfg file for collectd
* Add blue icons ... wow ..
* Add new font color (orange)
* Reset some layout basics
* Add : Florent Houbart to the THANKS file
* Add sample data to host/servicegroup mockup
* Update shinken/modules/livestatus_broker/livestatus_query_metainfo.py
* Add overview table
* Enh: infobar height
* Add info bar
* Add Help link to admin submenu
* Logout link moved to admin submenu and submenu moved to the right
* Initial upload host/servicegroup overview mockup
* Fix pagination position
* Enh service/hostgroup detail mockup
* Enh service/hostgroup mockup
* Fix file permission
* Fix file permission
* Add Init file
* Delete init file
* Fix commands.cfg file
* fix file persmission
* Fix fie permission
* Add text
* Delete empty file
* Delete empty file
* Delete empty file
* Forms Delete Confirmation
* Initial upload host/servicegroup mockup
* Windows installation for shinken, using .net services instead of instsrv
* Change learn more href system view
* Add info links system view
* Add shinken informations
* Add : (from : Caez) webui,auth manage the $1$ htpasswd md5 way
* System mockup
* Change: "Learn more" icon
* Fix : WebUI manage service description with / for actions
* Fix permissions about missing shebang
* Fix files permission for rpm packaging system
* Update install
* Fix : make the check remove in webui do first active check disable, then state push, then passive disable
* Add : WebUI remove check button, to disable checks, notifications, event handlers and put a OK state
* Fix permission
* Fix permission
* Fix permission
* Fix permission
* Update tab-content width
* Add : go in 1.2.2
* Fix : scheduler crashing when some items dont have a next check time
* Add : go to 1.2.1 release
* Fix : webui remove the eue part before release
* Fix : untrack var/pack_distribution.dat
* Enh reindent
* Remove unused code + line reindent
* Updated: System widged
* Enh base layout of all widgets
* Add icons and new colors to eue widget
* Add new cheat class (testing)
* Remove table preferences
* Change btn size to small
* Remove debug class ... sorry
* Remove wrong files copied resulting in duplicated command
* Fix contacts definitions
* Adjust contacts definitions
* Fix gap between top box and menus
* Fix navigation posstion
* Enh remove useless hr tag
* Fix : get back the OpenLDAP_UI module configuration sample
* Fix: satelittelink.py Limit tracebacks to debug
* Add: SnmpBooster commented, remove OpenLDAP
* Enh change header size and possition of "my services"
* Enh: FOR_DEV doc
* Enh elt header
* Add error message
* Change icon color ro grey
* Add new color grey
* Fix button bug action form
* Fix: Set sane defaults for check_host_alive
* Add skonf stop script, Issue #632
* Enh: Eue widget, first commit
* Fix: Update rescheduling formula after a forced check
* Enh business impact box (now with a cool bold icon)
* Downtime log interface like Gmail
* Better file handler and fix os path join
* Update Changelog
* Fix: Add ignore to decode (Nap)
* * #628 Fix utf8 research bug in LiveStatus broker module
* Fix header possition + Enh header color
* Fix header size, dashboard widgets
* Fix posstion of preview images dashboard
* Enh: Dashboard slider
* Del: Old mootools file
* Enh: footer possition Issue #564
* Enh: problems pagination url query
* Postpone page refresh when editing a widget
* Fix: stray end tag div
* Fix fluid template again ..
* Add delete icon, yeah :D
* Comment interface like Gmail
* Fix Issue #564
* Add: develop-webui branch infos
* Fix: Start scheduling calc using second 0
* Fix: Attribution
* Fix: Make scheduler more deterministic
* Fix: Comment coherent for local linux template 1 minute interval
* Enh: Make local linux checks be 1 minute interval
* FIX : option -e manage again several argument. Pretty dirty :)
* Fix textarea size
* Reindet downtime form
* Enh Info messages
* Add new font color. Today: blue
* Add new form form_downtime_delete
* Change button name
* Enh form form_comment_delete issue #542
* Fix : complexe expression now manage . in names
* Reindent wall template
* Fix : Add optional values for graphite module
* Add error message to comment delete form
* Add new form form_comment_delete
* Fix : if custom macro was like _HOST it get stripped
* Add new form form_comment_delete
* add init script for el6
* fix manpages
* Fix : Run arbiter deamon as shinken by default
* Enh: reduce footer size Issue: #564
* Update etc/shinken-specific.cfg
* Fix : Typos in shinken-discovery
* FIX : Install script syntax. Please test before commit ;)
* Fix: Typo in shinken-discovery
* Change header size of "Root cause"
* Fix: Disable header menu on login page
* Enh: Warning message / graphs
* Change header size of "My impacts:"
* Allow hyphen - for module output
* Fix : (reported by agrap) double-space in sms commande line
* Fix issue #554 third try
* Update Changelog
* Update Changelog
* Update THANKS
* Packs - Missing IMAPS port
* Missing POPS port
* Add row class to dashboard.tpl
* Add row class to warning message
* Add noscript warning message
* Enh: popover removed, add a normal link to wiki
* Fix issue #554 skonf header
* Enh gesture canvas
* Del unneeded code
* Fix : (reported by: Rémi BUISSON) possible scheduler crash because of a missing traceback import
* Fix: syntax error in install script
* Add new icon state_ack issue #429
* Fix issue #554, second try
* Fix : test_objects_and_notifways got in fact a bad configuration revealed by the prevois fix
* Fix : (reported by: Yannig Perre) bad contacts/notifways notif periods were not catched
* Fix : (reported by : Rémi BUISSON) there was still realm objects on the sub-conf hostgroups objects
* Stop the scheduler after dependents
* Thanks to chris81
* Add : first try of a migrate option for the Arbiter, so the raw configuration loaded will be pushed to another modle, like the mongodb one. Work with skonf, but it is not finish, and things will surely changed in id management especially
* Add: Rémi SAUVAT to the THANKS file
* Set scheduler.ini to INFO until #583 is resolved
* Dynamic reload of widget after save
* Fix : python2.4 compatibility restored
* Fix : (from Nicolas Boos) output an error at setup if the lsb_release is missing
* Enh : (from : Nicolas Boos) make the init.d/shinken chnage at install change on place for sed
* Fix : bug in active_directory_ui for unknown users
* Add : Landscape (ubuntu SaaS) arbiter importer module
* Fix : update test_properties_defaults.py for the Hostgroups.realm property
* Fix : update check_nwc_health install to the 1.3 version
* Fix : hostgroups.realm objects were not stripped, so such configuration make memory consumtion raise teh sky. Fix #609
* Edit: ":" is the new "!"
* Fix typo
* Add a new clear warning box
* Raise a timeout in the end-to-end-testscript
* Fix dashboard layout (no scrollbar)
* Quick and dirty fix issue #554
* Fix a bug in livestatus "GET log" for python 2.4 (no partition method for strings)
* Enh: Issue #570 Part 3
* Typo in packs.tpl. Elemments
* Added condition for packs with no services. Fix from jthm
* Typo in skonf view packs. Reported by jhtm
* Fix typo in javascript for bookmarks
* Enh: Issue #570 Part 2
* Enh: Action URL possition
* No override mongo replication state levels
* Fix: wrong url about netint plugins. Not lastest version
* Enh/Fix: Fedora 17 support install script / Condition operator in script
* Enh: install script, modified netint link to take last version of plugin
* Small Fix : Typo in a variable
* Add Special Font Awesome styles (Font Color)
* Enh: Some small documentations -> header elements
* Add Software license
* Move navbar-search & search-query class to header element
* Add Icons to login view and comment acion element
* Fix system view
* Fix eltdetail view
* Enhancements support for Fedora install
* Fix : test_logging on windows. But I still dont understand how the file can still be open
* Add tooltip to currently icon
* Del: Useless file
* Fix: typo error in logging test
* Fix : make test_properties work under old Python versions
* Fix: typo and syntax errors
* Fix : tests, get back assertIs for old Python versions
* Fix : strip service_dependencies parameters
* Fix header level
* Host/Service effect on eltdetaill adjusted to standard design
* Fix typo dashboard
* Fix BTN size eltview
* Fix Btn size eltview
* Fix header icon positions bug
* Add header icon
* Font Awesome enabled
* Upgrade Twitter Bootstrap from v2.1.0 to v2.1.1
* Add Font Awesome
* Redesign system info view
* Fix : make service property service_dependencies take a void hostname, so it will take host of this service instead
* Fix : test_properties_defaults for working with old python versions
* Fix : when broker is asked to wait a new conf, then it do not initialize new modules when it get a new configuration
* Fix : port assertRegexpMatches for old python versions in tests
* Clean up eltview
* Fix Graphite Templates
* Fix : again the assertIsInstance for old 2.4 version, a typo made the hook failed... this time it will work... maybe..
* Scheduler.py - Remove stack traces on warnings
* Fix: Index Error with Graphite UI
* Correct livestatus commands table. Fix #520 (Fix by: Franky)
* Fix : make test_logging inherit from common shinken tests, so we got the overloaded 2.7 only method for unittest
* Fix : test_loggin under python 2.4 and 2.5, NamedTemporaryFile do not manage delete parameter
* Fix : Webui, move the show/hide tool bar button on the left part of the page, just above the tool bar
* Add Show/Hide Toolbar button with insertion of choice in user's prefs
* Fix invalid nmap parameter
* Fix : getting back tests alive
* Fix : test_logging was not happy under Windows, trying to remove a not close file
* Fix : backport assertIsInstance for old Python versions
* Fix Button size eltdetail view
* Fix action url button size
* Fix help icon possition Issue #540
* Fix search bar position
* Add popover to help icon - Issue #540
* Upgrade Twitter Bootstrap from v2.0.0 to v2.1.0
* Del: Useless code
* Bug fix Bookmark Criticity Filter
* Enh: Adjust install script and conf to get and install HPUX plugins from shinken public repository
* Fix: added options in help message
* Enh: Adjust install script and conf to get and install HPUX plugins from shinken public repository
* Add : now webui /worldmap show all hosts that got _LAT and _LONG custom values. Must be a float between -180 and 180
* Add criticity filter. Bug fix : the navigation buttons on the top will now keep the current filtering
* Fix : (reported by: Dravail) bad install for PNP in install script web site
* Clean shinken-specific-load-balanced.cfg
* Clean shinken-specific-high-availability.cfg
* Fix shinken-specific-windows.cfg to minimal installation
* Fix: Issue #570 Part 1
* Fix link. Readme.rst
* Multiple action_urls
* Enh: Change network usage thresholds
* Enh: Change network usage thresholds
* Add "Help" Icon - Issue #540
* Update README.rst
* Fix typo and link for python
* Fix Unused link for Python 2.7
* Fix Invalid heading README.rst
* Typo in FOR_PACKAGERS
* Update Changelog
* MongoDB typo fix (index_miss_ration -> index_miss_ratio)
* Change invalid check_mongodb.py -c parameter to -C
* Fix: Invalid logger call. Thanks for reporting (pushou)
* Update Changelog for typos and additions
* TAG : Go for 1.2 release
* Fix : (reported by: chris81) bug in skonf when starting with flat file timeperiods. And add some commands for skonf future (restart and reload confiuration). Fix #562 
* Better handling of Pyro version
* Fix : get back the MSG_WAITALL fix for pyro version prior to 4.14
* Add : temporary rc2 version
* Correct a typo in Readme.rst
* Update README.rst
* Update README.rst
* Handle null connection
* FIX : missing pymongo prerequisites in redhat 6 and fedora
* #462 Temporary fix waiting logger refactoring
* Fix : get back the correct default configuration for PNPUI and GraphiteUI modules
* these are only info line. error is irritating
* Enh : reorganize the Changelog
* Fix : LS/Sqlite logs, get back the "options" field on the normal logs table to fix #557 . I fill it with a null value
* FIX forgot to uncomment some code ... shame on me ;-)
* FIX finalize easy activation of application performance monitoring. Now need to fix apm reporting pages
* Fix : WebUI, host names with a dot . was making selection impossible. Fix #556 
* Fix typo in macro definition
* FIX : remove debug code
* ENH : add max_output_length to webui broker module
* Fix part 1 of issue #549
* Fix issue #555
* Fix: less verbose. It is a debug printing
* Fix (Reported by : OlivierHa): notification not send when there was multiple calls of late_relink on the same command calls, like for multiple contacts with notificationways
* Fix : WebUI /detail, get back next check in the frist data view, and latency/duration on additonnal panel
* Add : additonnal groups management for daemons with initgroups under linux, for >=2.7 only
* *Fix : temporary fix Sqlite logs archive by putting back in the archive base the 'options' field. *Fix : test end to end test with the space after Warning
* Adapt TSCA ruby client to new code layout
* Adapt TSCA java client to new code layout
* Adapt TSCA python client to new code layout
* Fix : bad pid file name in the skonf configuration. fix #553 
* Fix typo
* Use config values instead of hardcoded one
* Fix : missing +x bit on the shinken-skonf init script. Fix #552 
* Fix : skonf, still removing links to missing pages
* Fix : sKonf remove non working links
* Fix : remove from WebUI unfinished features for the 1.2 release
* *Fix : make the debug argument to the daemon override the configuration one if set *Fix : make receiver send less verbose
* *Fix : some test cases, like logging or badstart from some last commits. *Fix : (from : Hermann Lauer) a sample configuration file typo
* Add : enhance the favicon of WebUI with a true favicon, not the robot
* Fix : Open Ldap webui auth module. Fix issue #486 
* Fix : logger import was missing in the easters file
* Add : prepare with pickle the whole configuration before sending it to a spare, for startup time boost. Fix #369 
* Remove misspelled attribute that hide a method #373
* Remove extraneous arguments #373
* Remove useless second parameter of time.strftime()
* Prefix internal method for macros with an underscore
* Prefix internal method (except for macros) with an underscore
* *Add get_new_actions hook call in scheduler
* Update Change log and VERSION for 1.2-rc1
* Use 5min time template on network usage service
* Cleanup os packs
* Fix : make triggers and packs less verbose on startup
* Fix : ok, the same as before, so add skonf related files, but with the files this time...
* Add : update install script with all skonf related files
* Fix typo in rhel services activation
* Add function to install netint plugin
* Add : skonf deamon to the all.sh start and the init.d one
* Fix : Skonf, put the discovery backend module as a configuration file parameter
* *Fix : Skonf with new logger *Fix : skonf now load all runners and display them instead of just printing nmap one
* Remove another GPL plugin left behind
* Fix: New config properity `daemon_enabled` is not tested
* Lots of modification in application monitoring performance monitoring webui plugin
* Enable easy activation of application monitoring performance feature. Use ./install --enableeue to enable eue feature
* Make TSCA work in his own directory
* Put the TSCA arbiter module in is own directory
* Added option to skip mongo installation. Usefull for poller installation that does not need mongo to be installed. Fix a problem in nconf addon installation
* Fix: Need absolute path-name in `__import_shinken`
* Add howto install pyro on Fedora
* Fix minor installation issues on centos/redhat. Mainly on services activation and pnp
* Rename flag to remove quote in filename
* Rename flag to remove quote in filename
* Add module description for glpidb (broker module)
* Update Readme.rst for Pyro 4.14 compatibility
* Update shinken/daemon.py
* Updated log messages and fix missing %s
* Add : fix an escalation issue when we restart the scheduler during the escalation process. Should fix #525 
* Fix regression when replacing a safe_print
* Fix : missing the test test_python_crash_with_recursive_bp_rules.py in all test running
* Add : daemon_enabled option for ini and nagios.cfg files to disable a daemon from running. Fix #197 
* Fix : potential endless loop on bp_rule + parent relation ship, and problem/impact setting. Fix #198 
* Fix : bad characters in external commands make logging not happy at all. Should fix #498 
* Fix : add a test case for the ticket about not having USERn in env, so fix #505
* Fix : bad start for arbiter with Pyro4 and enable_ssl=1. The only good way is to bail out
* Logging update, removal of self.log, pass tests
* Fix : a hard coded file path for skonf. This daemon need a lot of code clean before release
* Fix : issue #272 where the shinken user home was forced to be in /home and that make some system not eligible to install
* Add : dummy configuration file for test, so create a new test is quicker
* Fix : Pyro 4.14 issue, where we remove every where the MSG_WAITALL for all where it was useful only for first Pyro4 version. Fix #345
* Deleted GPL plugin
* Enh: logstore modules translations print to logger
* Add : WebUI in a /problem page a user can now press the sift key and over the selection tick to select them. It make easier for massive selection thing, thing that I was really missing :)
* Enh: livestatus and ip_tag translations print to logger
* Forgotten translations print to logger
* Host perfdata broker and hotdependencies translation print to logger
* GLPI module translation print to logger
* Fix: The check_mysql_health plugin need a : sign after the thresholds for greater is better metrics
* Another shot of translations print to logger
* Enh: translate print to logger for some modules
* Update format of log message to be less prone to breaking
* Default logging property for WARNING, instead of 20
* Update test_logging.py to pass all tests with new format
* Fix: Add a dependency to the check_mysql_health plugin on Debian
* $USERn$ macros aren't published in env anymore
* Fix : comment manage_brok in dummy_broker, because its a better idea to start with the method from BaseModule instead
* fix : the dummy_broker module was not calling a valid __init__
* Add : dummy_broker module example
* Enh : the dummy_arbiter module to be more simple and useful
* Fix conflicts with htgoebels log changes
* Fix Part 4 of issue #513
* Fix: console_logger must not display level for INFO-level
* Eliminate logging using generic .log() method
* Fix: Use symbolic log-level instead of numeric
* Clean: Eliminate logging with `print_it=True`
* Add wrapper logging-class for printing messages to stdout
* Update test_logging.py with WARNING as default
* Logging: print to logger, adjust levels, messages, typos
* Fix: Issue with bad use of logger.get_level_id()
* Logging: Removed log_mgr. Convert print to logger
* Logging: Removed log_mgr. Convert print to logger
* Logging: Removed log_mgr. Convert print to logger
* Update comments about log files
* Set default loglevel properties to WARNING
* Set default daemon log level to WARNING
* Set default daemon log level to WARNING
* Add get_level method. Default level WARNING
* Set default daemon logging level to WARNING
* MySQL checks: remove the underscore in the new macros' names
* Adjust check allowed to notify in oracle database
* Clean: Remove useless `print_it=False` in calls to logger.info/warning
* Clean: Remove useless intermediate variable, correct some log-levels ... ... remove usage of generic logger.log(), and replace some print-stmts by logger.debug()
* Cleanup lengthly except-clauses
* Convert comments into doc-strings, remove old comments, fix typos
* Add a fixme-comment
* Correct some log-levels and remove usage of generic logger.log()
* Clean up some test-cases
* Fix: Part 3 of issue #513
* Logging message, level and conversion from print to logger.xxx
* Add currently icon to header element
* Replace prints with logger, update level and messages
* Removed unnecessary print statementi, IMO
* Update default logging level to INFO
* Logging functions and format modifed
* Set default logging level to ERROR
* Fix my cleanup of this file by merging the removed lines and the new code added since
* Enh: Re-add crit and warn graph line with main metric line
* Fix typo and wrong macro in the XMPP message. Add some comments
* Enh reindent of the header element
* Change check_mysql's commands and templates to be able to define MySQL credentials per host
* Fix: position of error message
* Fix: test_logging was is missing in Jenkins tests
* Fix typo in comment
* Add test_properties_defaults to quick_tests and Jenkins tests
* Make test/test_properties_defaults.py executable
* Minor fix: Use keywords for all arguments when instantiating properties
* Fix: Host/Servicedependency are missing `my_type` entry
* Add test-suite verifying default values of properties, here: Trigger
* Add test-suite verifying default values of properties, here: Timeperiod
* Add test-suite verifying default values of properties, here: Service
* Add test-suite verifying default values of properties, here: Servicegroup
* Add test-suite verifying default values of properties, here: ServiceExtInfo
* Add test-suite verifying default values of properties, here: Serviceescalation
* Add test-suite verifying default values of properties, here: Servicedependency
* Add test-suite verifying default values of properties, here: Resultmodulation
* Add test-suite verifying default values of properties, here: Realm
* Add test-suite verifying default values of properties, here: Pack
* Add test-suite verifying default values of properties, here: NotificationWay
* Add test-suite verifying default values of properties, here: Module
* Add test-suite verifying default values of properties, here: Host
* Add test-suite verifying default values of properties, here: Hostgroup
* Add test-suite verifying default values of properties, here: HostExtInfo
* Add test-suite verifying default values of properties, here: Hostescalation
* Add test-suite verifying default values of properties, here: Hostdependency
* Add test-suite verifying default values of properties, here: Escalation
* Add test-suite verifying default values of properties, here: Discoveryrun
* Add test-suite verifying default values of properties, here: Discoveryrule
* Add a test-suite verifying default values of properties, here: Contact
* Add a test-suite verifying default values of properties, here: Contactgroup
* Add a test-suite verifying default values of properties, here: Command
* Fix test for properties w/o default value
* Move global imports into the test-classes
* Enhance message if default-value is not `none_object`
* Add a test-suite verifying default values of properties. Here: Conifg
* Add template for tests of (buggy) DictProp class
* Add tests for AddrProp class
* Add tests for LogLevelProp class
* Add tests for ListProp class
* Add tests for PathProp and ConfigPathProp class
* Add tests for CharProp class
* Add tests for FloatProps
* Add tests for IntegerProps
* Import module instead of module elements
* Add test-cases for StringProp class
* Fix missing imports (missed to commit in second-last commit)
* Add tests for all true/false strings of BoolProp
* Add more tests common to all properties
* Add basic tests-class for tests common to all properties
* Enhance and cleanup test_properties, still more tests to do
* Fix: Part 2 of issue #513
* Missing logging imports and additionnal log message updates
* Fix: Part 2 of issue #513
* Typos and syntax error to logger statement
* Fix: typo in shinken-specific.cfg s/modulei/module/
* Adding formatting to log level, set to 7 characters, default justification. This is a readability enhancement. Convert logger.log to logger.level. Add comments and better log messages. Remove log level from log message
* Enh: Don't make examples files of var and libexec directories when restoring
* Added Oracle io time service and don't save var and libexec file from example files
* Update log.py comments and class description
* Fix: Part 2 of issue #513
* Fix: Part 1 of issue #513
* Enh: gab between title and icon
* Add a read_only option to logstore_sqlite
* Fix: add condition to grpahite broker avoiding IndexError
* Fix: add condition to grpahite broker avoiding IndexError
* Save some space in sqlite-livestatus-log datavases by omitting the options column
* Add Red Hat and Fedora support to notify by xmpp
* Add missing import
* Fix: error in install script. Miss a bracket
* Update changelog for graphite module changes
* update graphite_ui.py. graphite_data_path to .._source
* Update shinken-specific.cfg for graphite data source option
* Revert "Fix: css fix"
* Fix: css fix
* Enh: new host icon
* Add new currently function and template
* Finalyse the time filter to avoid loading all the logs database in use_aggressive_sql=0 mode
* Remove useless code
* Add cfg sample for logstore_null
* use_aggressive_sql is a parameter for logstore_sqlite
* switch to graphite_data_source as config key, and use better documentation in config file
* Forbid duplicate names
* Fix : make the receiver reconnect to the scheduler if the initial connexion failed like with large configuration, when the scheduler was still loading the configuration
* Enh : Update UI sqlite backend to save common preferences, code factorisation
* Remove .closed incorrect line
* Enh : rework webui 'system/shinken state' page
* Add : add sqlite backend to save user UI settings
* Added widget skeleton for apm, Fix bug in sparkline data (reverse order)
* Added generic step
* Remove pulsate effect
* Enh: Service OK function
* Add a unit test for the new livestatus hints
* Added more hints for the livestatus query metadata resulting in massive speedup for nagvis
* add support to graphite_ui module too
* add an optional path where shinken store it's metrics in graphite
* some real errors fixed, unused import removed and potential warnings fixed
* Indentation on widget.tpl (tabs to space)
* Fix widgets : can't move the last, save too early on adding and closing, don't save when use enter on the setting fiels, don't see the change after modifying the settings, etc
* Add : Jan Ulferts to the THANKS file
* we need the class to check config items
* Remove a print statement in the regenerator (who wants to see servicegroup members?)
* added environment macros for notifications
* Fix nconf installation : apache was not restarted after dependency installation
* Removed unused dependency gevent
* Cleanup THANKS file for typos and descriptions
* Add module references and new bug fix
* Update etc/packs/databases/mysql/commands.cfg
* Add: A new function, percent of all services
* Add a null LogStore backend for livestatus broker
* Remove unused macros
* Add new hint HINT_RANDOM_SERVICES which speeds up livestatus requests for nagvis
* Enh now media does not need to be created on disk before returned to client. Direct stream
* Adjust weblogic services config
* Refactored the itersorted method for livestatus host/service objects - _id_contact_heaps no longer contain (name, id), but only the ids - authuser handling was dry'ed
* Update shinken/webui/plugins/problems/views/problems.tpl
* Various fucntions for common bookmarks
* Add the page to save common prefs
* Add the function to save common prefs
* Add the function to save common prefs
* Fix delete screenshot after saving in mongodb gridfs
* commands.cfg reformat
* Improve weblogic and forms discovery
* Updated os and oracle pack with time template and some cleaning
* Add: logfile support on Linux and Aix
* Customize some Oracle service. Remain some work to do..
* Added History view for eue reports
* Added global time execution, icons for os,browser and localization
* Fix remove debug code
* Fix default media path
* Fix : does not try to display medias if not exists
* Fix forgot to define the temporary media path ...
* Fix add medias folder for eue medias storage
* Added eue stack formater for cucumber
* Fix missing quotation
* First version of the eue report plugin for shinken webui. Caution this is only the webui part and it does not include cucumber formater part. So it is useless for you at the moment
* Fix : receiver crash when we ask for a service based command in direct routing mode
* First try to add a new currently view state
* Fix : (reported by : D.Durieux) remove the self.process link for a killed action, because such object cant be pickle
* Add : webui, /depgraph, now add a loop and loop_time option, to make the graph root change between important elements. So the page can be put in a wall :)
* Fix : WebUI, get back alive the /depgraph/ page. It was a problem with the dynamic mode need by the widget that make the static page break here. Go in dynamic make it just work (and only one code type to maintain...)
* Fix : (from : Frédéric Pégé) make the sqlite db files put in a good default place, in devel mode or init.d mode
* Fix : better management of test_livestatus_perf.py disable tests, with less stringify, and real comments
* Fix : WebUI authentification module for open ldap, should use full DN for auth under openldap, but uid for AD
* Fix install script to fit hpux packs
* Complete HPUX pack
* Add forms and weblogic packs and complete hpux pack
* Add : the install script available on the install.shinken-monitoring.org address
* Add templates_path again. Small clean up
* Add : webui, error message if the admin didnt have a working user preference module loaded (daed or just missing in configuration). So migrating users from 1.0 to 1.2 will know why this page wont work out-of-the-box
* Fix : WebUI, get back the « and » sign on hte problem and all page
* Fix before merge with upstream
* Fix before merge with upstream
* Add install option for the check_rsync plugin
* Some typos in the install script
* Add install option for the notify_by_xmpp addon
* Add : the timeout parameter for the check command, so we can specify a specific timeout for one command (like long EUE one) while keeping standard one (10s) for all others
* Fix : comment the test_livestatus_perf, do not look functionnal and need some missing files
* Fix : comment the test test_livestatus_perf::TestConfigCrazy because the configuration file is not existing
* Fix : get back Canopsis module in the shinken-specific.cfg file
* Fix : get back a missing hostgroups.cfg of the test_livestatus_perf.py test
* Add : make the WebUI active directtory got an open ldap mode
* Creating new authentification module for OpenLDAP directory service it does the same as Active Directory module Also create a sample module configuration in etc/shinken-specific.cfg
* adjust cpu alerts thresholds for aix and linux
* Enh : most modules do not raise Warning if the module need (like python-ldap for active directory, etc) but instead raise a real Exception with a text to say which python package to install. Will make less false-warning on the forums
* Add : Mathieu.md to the THANKS file
* Fix : webui, get back the last years graphs on the detail page
* Add : clean the var/archives between tests
* *Enh : shinken-specific.cfg file, with more comments *Fix : remove Config import from shinken/objects/__init__.py, cause something like a import loop
* Fix : test_timeout.py test by putting the shinken. reference on the modules import
* Remove superfluous import of shinken.objects in shinken/_init__.py
* Add test_logging.py to quick_tests
* Fix test-case for human timestamp format and local logging
* Activate already implemented test-case (by removing leading underscore)
* Add doc-strings and more meaningful comments
* Add a test-suite for testing the `shinken.log` module
* Allow turning of the human timestamp format after it's been turned on
* Fix: logging level must be set when instantiating the Log object
* Clean-up: Use time.asctime() w/o parameters if `now` is meant
* Remove pseudo-compatibility function shinken.utils.if_else()
* Add helper module for importing the shinken library from parent dir
* Cleanup imports
* Clean-up: No need to manipulate the path, shinken_test does this already
* Minor clean-up to test.sh
* Fix: `test.sh` did not run if called from within `test` directory
* Minor clean-up to quick_tests.sh
* Add currently function
* Update Changelog
* Update Changelog
* Update Changelog
* Fix the program_start attribute in livestatus status table
* Remove a useless old line
* use subfolders in the templates graphite
* Fix widgets random order. Simplification. Add missing indentation
* Add : Widget template
* Default 0 to play_sound in shinken-specific.cfg
* Add a new icon for IT Problems and other stuff
* Fix : regression Fix #478
* Add sound on new non-acknowledge IT problem
* Add: big badger css class
* Add : make the daemon appears on the process line (setproctitle mode) so we know which is loading the module
* Enh : Set module/worker processes name to be more explicit
* clean : remove useless print
* Add : something very very very .... not important
* Add : scheduler lost management in the receiver direct routing, and a test case about all of this
* Initial upload of just4fun dashboard
* Add : receiver can now send directly commands to schedulers. Need to manage the bad scheduler die and such things like that
* Add : first direct routing thing for the receiver. Will send to scheduler the commands instead of going in the arbiter if the receiver known about the hostname
* Refresh the read-only bookmarks
* Display the read-only common bookmarks
* Call the function to get the common bookmarks
* get_common_preference function
* get_ui_common_preference function
* Fix : spare arbiter now take the lead is the master is never start. Fix #231
* Read-only common bookmarks js functions
* Fix : big livestatus test case
* Remove unmaintained thrift broker
* Fix : python 2.4 test case, the return
* Fix : old Python test cases
* Typo
* Requirements cleanup to reflect a single installation method per platform is presented
* Undo: PhoneCheckContainer width :(
* fix the flapping test
* Add: License
* Fix issue #468 by adding a downlevel-hidden conditional comment
* Add: Pending CSS class
* Add icon state_warning.png for servers sets
* Add SUprintServer pack which check it can retrieve CrystalWS.asmx page
* Add fixed hosts macros examples for network usage check
* Remove unnecessary ref
* Fix wrong commands for disks checks when using macros mode with fs discovery
* Add: support by default in linux and aix pack for check_snmp_netint instead of bandwidth
* Add: check_snmp_netint install in install script
* Adjust template with time interval for sydel and add check_snmp_netint install
* Change fs discovery default mode to 'tags'
* Fix: fs discovery_rules to fit tags
* Enh: add option 'mode' in fs_discovery_runner.py
* Add : HOSTREALM macro for host/service
* *Fix : test_end_to_end, I'm wondering why it was working for broker before (wtf inside) *Fix : dispatcher was putting broker 2 times in the pushing list *Fix : clean the build dir need to be done with root
* Add cups pack
* Remove use generic-service from time templates as generic overwrite them..
* Remove use generic-service from time templates as generic overwrite them..
* Typo errors
* Restoring missing spaces
* Just restore a beginning of file to fit old numbers of line and avoid repositionning all following lines. Yeah it is a quite long commit log message :p
* Un-escaped exclamation mark
* Exclude UNDO1 and TEMPO tablespace in oracle check
* Add : configuration helper for trigger based service
* Fix : get back tests like before
* Fix generic corrupted block oracle database check
* Add corrupted-blocks check in oracle databases checks
* Add corrupted-blocks check in oracle databases checks
* Add corrupted-blocks check in oracle databases checks
* Add corrupted-blocks check in oracle databases checks
* Fix link to wiki
* Format fix in fourth paragraph
* Add credit and license informations for discovery runners scripts
* Add credit and license informations for discovery runners scripts
* Fix : maybe one day I will not forgot to add a test case in the automatic part
* Fix : (reported by : nerocide) catch bad event handler names. Fix #459
* Fix : webui, inner dep graph
* Fix: wrong oracle command, miss a trailing e char
* Link to download the source, and formatted instructions for installing the first part
* Unify redundant object-config files in test-cases
* Use standard plus a special object-config and remove identical files
* Use standard object-config where nearly same and remove identical file
* Use standard object-config where available and remove identical file
* Add standard object configs-files to be used wherever no settings ... ... are necessary
* Update: eltdetail -> pull request #453
* Fix: Changing an Actions environment also changes the global os.environ
* Add service template without notifications
* Fix test_environment_variables (issue #422)
* Fix test_environment_variables (issue #422)
* Add a test-case for Action and environment using `env | grep TITI`
* Add a test-case for Action and environment using `echo $TITI`
* Clean-up: wrap long lines, doc-strings from comments, updated comments
* Fix typo in name of test-case
* Finished feature cleanup-libexec-scripts
* Update script header
* Move the body-part of the script into a function main()
* Add a comment about a potential problem
* Fix: The system load is nummeric, compare it as such, not as strings
* Fix: Percents are numbers, compare them as such, not as strings
* Rename function as it returns the percent of *free* memory
* Fix: functions should return results, not manipulate global vars
* Add a doc-string which also states this is Linux-only
* Use .readlines() instead of implementing such a function
* Use .startswith() instead of splitting the line just for testing
* Name templates as such and move them to the top
* Use argparse instead of getopt
* Avoid building (nearly) the same list multiple times just for counting
* Let the OptionParser convert the parameter into a float
* PEP 8 Clean-up
* Convert comments into doc-strings
* Remove redundant code (command line options are parsed twice)
* Make getwmic.sh to be maintained easier: put version into a variable
* Remove possible dangerous use of `sudo` for removing user-files
* Clean-up shell-scripts
* Fix: hp printers rules more accurate by testing all ports
* Useless option in the HTTPS certficate check
* Fix : test_conf_in_symlinks.py and windows is not a good mix...
* Change in storage ibm packs
* Fix : forgot (again) the test addition
* Fix : (reported by Sven) the configuration loader was not following symlinks. BEWARE : on python 2.4 and 2.5 it is NOT managed. So only for 2.6 and higher
* Fix : forgot the last test in automatics
* Fix : (reported by : Sven) space in hostgroups problems. Fix #452
* Make address directive in discovery not mandatory
* Finished feature cleanup-nsca_client
* Remove useless comment
* Add command-line options -- as in send_nsca
* PEP 8 clean-up: Wrap long lines
* Convert comments into doc-strings
* Use `raise SystemError` instead of calling sys.exit()
* Finished feature cleanup-send_nsca
* More precise help-message
* PEP 8 clean-up: Wrap long lines
* Clean-up: Merge main part into main() function
* Minor code clean-up
* Clean-up some comments
* Remove useless argument `dest` for OptionParser
* Fix typo
* Use `raise SystemError` instead of calling sys.exit()
* Finished feature cleanup-windows-shares-discovery
* Minor clean-up
* Fix: Result did not print the hostname
* Clean-up: Move function to the top and clean it up a bit
* Call `smbclient` without shell and without building a command string
* Clean-up: Move function to the top
* Remove unused import
* Use `raise SystemError` instead of calling sys.exit()
* Make p_debug more terse: print test in same line as `DEBUG` prefix
* Use the default-mechanism of OptionParser instead of mimicking it
* Add long option `--hostname`: same as short option `-H`
* Remove useless argument `dest` for OptionParser
* Add long option `--debug`: same as short option `-d`
* Fix: debug was always False
* Finished feature cleanup-vmware-discovery-runner
* Fix some error messages
* PEP 8 cleanup: wrap long lines
* Write json-file in text-mode (was binary-mode)
* Convert comments into doc-strings
* Clean-up: Remove unused import
* Use `raise SystemError` instead of calling sys.exit()
* Fix typo
* Clean-up some comments
* Finished feature cleanup-sendmailservice
* Add comments about work still to do (encoding, escaping)
* Add commands for notification by XMPP (Jabber)
* Add a basic rsync check template in the network/services pack
* Add macros for Basic HTTP authentification in the HTTP(S) services templates
* Use css-stylesheet in HTML-part for colors
* Command line args not given now default to 'unknown'
* Inopropriate place to set these cluster macros
* Typo
* Change SAN discovery run and command to pack instead of general definition
* Clean-up: Remove useless test for __name__ == "__main__"
* Clean-up: remove less usefull intermediate variables
* Add a plain-text part to the message
* Clean-up: Move static template to the top
* Use parse command line args instead of rare used variables
* Clean-up: Wrap long lines, use string template and argparse destinations
* PEP 8 clean-up: Mode all imports to the top
* Add command line option to specify the SMTP-server and port
* Group mailing related command line arguments together
* Remove redundant code (command line options are parsed twice)
* added libevent-dev as prereq pgk for ubuntu/debian
* Wrong contact name left behind
* add time_templates.cfg in nagios.cfg
* add time_templates.cfg in nagios.cfg
* Add: cluster discovery runner.py
* Add: cluster discovery runner.py
* Fix typo in help-message and minor update to help-message
* Bump version to 0.2
* Ignore lines starting with `#` (= interprete as comment line)
* More robust input file format: ignore spaces around hostnames
* Open files in text mode and some clean-up
* Update comments
* Wrap long lines
* Use raise SystemError instead of calling sys.exit()
* Move description into a doc-string
* Mark libexec/external_maping.py as being executable
* Add unittest for libexec/external_maping.py
* Typo in fs_discovery_runner
* Enh: add 'address' directive into generated host by discovery
* Enh: add 'address' directive into generated host by discovery
* Fix: Rest of merge collision at EOF discovery_rules.cfg
* Fix: Rest of merge collision at EOF discovery_rules.cfg
* install script: small enhancement, using -r with useradd; refers issue #439
* Add 10min_long time template and applied to ibm ds checks
* Fix: call sudo to execute SMcli into IBM_DS plugins
* Fix: call sudo to execute SMcli and fix utils path in ibm_ds_perf plugin
* Fix: wrong rule name result in duplicated conf element
* Fix: wrong rule name result in duplicated conf element
* install script: changed trap to echoing a message and keep running
* Fix : (reported by : Vincent Riquer) WEBUI do not print 1970 for 0 time, but N/A instead. issue fix #241
* Fix : issue #140 , no more local cpu. Will raise less issues in the forum..
* Enh : (reported by : Mathias Fussenegger) enhance the README, to just put install script way. Put other methods in the packagers and dev files
* Fix : (reported by : Nicolas DUPEUX) remove a useless method in logstore_sqlite, and add a protection against end less loop. Fix #374
* Add : reload option for the init script. Fix #385
* install script: trap signals INT, TERM with a cleanup function
* Fix (reported by : Nicolas DUPEUX) : bad DISABLE_HOST_FRESHNESS_CHECKS and ENABLE_HOST_FRESHNESS_CHECKS code fix #376
* one example for unnecessary cat usage plus using return value of grep as true/false for if statement instead of another test with [ -z ...]
* Fix : (reported by : claneys) issue with the commandFile module on the poller daemon. Fix #278
* minor typos
* Fix : (reported by : Chettor) #342 comments from downtime and ack where not put in the global list
* Fix : catch a case where service dep got no hostname nor hostgroup_name
* Fix : webui widget depgraph was buggy when there was no localhost object, so it took first found host
* Fix : issue with retention and notification that make notification not sent
* Fix: error on var name
* Fix: error on var name
* small error in the way to comment lines in html/javascript
* Add : USR2 signal management for the scheduler to dump objects (checks, notification, event handlers and broks)
* Fix: wrong var used by command
* Add discovery packs for ibm storage management and beginning of clustering solutions discovery
* Add discovery packs for ibm storage management and beginning of clustering solutions discovery
* Enh: SAN controllers hosts macros separated, 1 macros by controller
* Enh: SAN controllers hosts macros separated, 1 macros by controller
* Add the source parameter. Value : 'dashboard' Reduce the time-range : 1h
* Add the source variable in this graph modules
* Add the "source" variable in the webui_broker, for the graphs modules
* Fix : strange shinken-specific.cfg typo
* Add the variable 'source' in the the get_graph_uris function
* Fix : some test cases
* Add : David Laval to the THANKS file :)
* Fix: add condition to host macros merging
* Fix: add condition to host macros merging
* Fix tabs in the HTTP(S) services templates
* Fix: change -f discovery option to --merge, much clearer
* Fix: change -f discovery option to --merge, much clearer
* PEP 8 clean-up (issue #99): remove extraneous_whitespace around brackets
* PEP 8 clean-up (issue #99): remove trailing empty lines
* PEP 8 clean-up (issue #99): fix whitespace around single-char tokens
* PEP 8 clean-up (issue #99): fix compound statements
* PEP 8 clean-up (issue #99): correct number of blank line between elements
* PEP 8 clean-up (issue #99): remove whitespace before parameter-lists
* PEP 8 clean-up (issue #99): at least two spaces before inline comment
* PEP 8 clean-up (issue #99): remove trailing empty lines
* PEP 8 clean-up (issue #99): convert tabs into spaces
* PEP 8 clean-up (issue #99): fix intentions
* Clean-up comments (issue #99) in test/test_utf8_log.py
* Use octal-notation for characters encoded in Latin-1
* PEP 8 clean-up (issue #99): add missing whitespace around operator
* Add: discovery runner for SAN. Only for IBM DS devices for the moment
* Enh: New option in discovery to merge hosts and keeping theirs macros for the final host definition
* Add macros to the HTTP(S) services templates to be able to check on a host specific domain, port and URI
* Fixed and new graphite templates for some linux pack's checks
* Fix : git conflict
* Add : banderas07 and Radu Gheorghe to the THANKS file
* Fix (reported by banderas07, analysed by : Radu Gheorghe) : #401 escalation notification_interval issue, the escalation value was not used if the interval was smaller than host/service one. Great jobs guys :)
* correct the name of simon rother in the THANKS file
* Fix the init-script to avoid a dangerous race condition
* Fix the init-script to avoid a dangerous race condition
* Last part (2/2) of the change that allows to spawn multiple instances of this widget
* Part of the change to allow multiple instances of this webui plugin
* Finalize SAN discover runner script and a little bit of cleaning
* Typo and layout of header
* shinken-specific.cfg - Reorganize and update module documentation. Typos, added a commented option for LS logstore SQLite, use_aggressive_sql
* Adding IBM SAN storage discovering
* Adding IBM SAN storage discovering
* Typo
* Reorganize Configuration file in sections. More consistent layout. Clarify the role and scope of shinken-specific.cfg. Organize the file in a ordered manner. Clearer comments. Typo corrections. Left to order the modules, check that there are no missing modules in the daemon lists and apply the same to the other configuration files
* Standardize data in example shinken-speciic file
* Clean-up: Ensure all Python-files end with a newline-character
* Clean-up spelling (issue #99): Remove spaces in front of colons, `!` and `?`
* Clean-up spelling (issue #99): Remove spaces in front of colons, `!` and `?`
* Clean-up spelling (issue #99): Remove spaces in front of colons, `!` and `?`
* Clean-up spelling (issue #99): Remove spaces in front of colons, `!` and `?`
* Clean-up spelling (issue #99): Remove spaces in front of colons, `!` and `?`
* Clean-up spelling (issue #99): Remove spaces in front of colons, `!` and `?`
* Clean-up spelling (issue #99): Remove spaces in front of colons, `!` and `?`
* Clean-up strings (issue #99): Remove spaces in front of colons, `!` and `?`
* Clean-up comments (issue #99): Remove spaces in front of colons, `!` and `?`
* PEP 8 clean-up (issue #99): Add spaces behind colons
* PEP 8 clean-up (issue #99): Add spaces in front of colons
* Clean-up (issue #99): Remove trailing white-spaces in all text files
* More meaningful message at end of pass: print the path of the result file
* Cleanup: Remove useless `cd` at end of shell-scripts
* Cleanup: Replace dull spawning of `pwd` by using variable $PWD
* Updated comments
* More concise description
* Rewrote class definition and removed self evident comments
* Fix : shinken-specific.cfg file
* Clean-up comment (issue #99), ensure they are preceded by a space
* Clean-up comments (issue #99), shell-scripts
* Clean-up comments (issue #99), ensure they are preceded by a space
* Clean-up comments (issue #99), remaining files in shinken/
* Clean-up comments (issue #99), files in shinken/daemons/
* Clean-up comments (issue #99), files in shinken/objects/
* Clean-up comments (issue #99), files in shinken/modules/
* Clean-up comments (issue #99), files in shinken/webui/ * Ensure all comments have a space in front of the text. Only those comments which are out-commented code are left without space
* Clean-up comments (issue #99), files in install.d/ * Ensure all comments have a space in front of the text. Only those comments which are out-commented code are left without space. * Remove spaces before colons
* Clean-up comments (issue #99), files in libexec/ * Ensure all comments have a space in front of the text. Only those comments which are out-commented code are left without space
* Clean-up comments (issue #99), files in etc/ (except packs)
* Clean-up comments (issue #99), files in for_fedora/
* Clean-up comments (issue #99), files in external_commands/
* Cleaup comments (issue #99), files in contrib/
* Fix she-bang line: always use `/usr/bin/env python`
* Remove useless "It's ugly I know...." comments
* Remove useless "Change ME :)" comments (which are in every test-case)
* Change "setUp is in shinken_test" into ".. inherited from ShinkenTest"
* Remove useless "Uncomment this ..." comments in many test-cases ... where the code was already uncommented
* Fix typos
* Ensure all comments have a space in front of the text
* Add : trigger function for custom access
* Add : trigger functions
* Add : triggers functions are now in their own file
* Add condition to execute fs_discovery
* Add condition to execute fs_discovery
* Tweaks oracle packs to fits sydel needs
* remove the bad lines added in my previous bad patch
* Add fs_discovery_runner.py file forgotten in previous push
* Change fs discovery to add macro rather than tags
* Fix : WebUI, missing end in a template
* Add fs_discovery_runner.py file forgotten in previous push
* disable 'FLAPPINGSTART', 'FLAPPINGSTOP', 'FLAPPINGDISABLED' notifications during downtimes. Check the diff before commit please
* Enh: Add cluster discovery for Safekit and HACMP
* Fix: '$' character interpretation in check_command of fs services
* Fix: '$' character interpretation in check_command of fs services
* Add: check_snmp_storage command
* Third time is the charm
* import fix to borked commit
* Fix issue#404 to treat Tracebacks correctly for Pyro3 and Pyro4
* Removed if_else import and function call and replaced with a simple and or for pyro Traceback
* logging levels and typos in error messages
* reactivate logger.error and traceback on failed configuration put. Correct treatment of Pyro4 versus Pyro3 tracebacks compatible with Python 2.4
* Add: forgot to add time_templates for fs discovered
* Enh: Add fs discovery capability using snmp scan to find filesystem on discovered hosts. With sydel specific fs
* Enh: Add fs discovery capability using snmp scan to find filesystem on discovered hosts. With sydel specific fs
* Enh: Add fs discovery capability using snmp scan to find filesystem on discovered hosts
* Enh: Add fs discovery capability using snmp scan to find filesystem on discovered hosts
* Enh: Add fs discovery capability using snmp scan to find filesystem on discovered hosts
* Enh: add fs_discovery.py runner. Use of snmp to discover fs on discovered host
* Create Branch : Sydel for specific modifications
* Remove notifications during scheduled downtime
* Update master
* Update master
* Display Action_url as a gear near the elt name Displat notes_url as a link, using notes (or not)
* Link to wiki, clean up style, add links to Pyro and setuptools, rename ways to methods
* Change the time range without reloading the whole page
* This change allows the range to be changed several times, and long after the pages is loaded
* Forgot to force installation .... sic
* Fix GPG key verification when using proxy and GPG verification port is not allowed on firewall
* Test : NAT unittest (complete)
* Fix : move graphite graphs to graph/ directory and append .graph to file name
* Test : Unittest for natted environment (partial)
* minor change
* Minor changes
* Allow the time range to be changed, with or without templates
* Use the new folder "graphite" for graphite templates. Existing templates should be prefixed with .graph, and move to that folder
* typo
* Add : Mathias Fussenegger to the THANKS file
* fix tab/whitespace mix in config files
* fix tab/whitespaces in commands.cfg
* Fix a bug in max_logs_age of logstore_* (add year)
* FIX: Badger color
* The fix needed to be fixed 8o .... shame on me
* Fix : hostd.cfg file
* * Clean : hostd daemon * Add : modules for saving objects for the discovery manager
* FIX op5 changed the name of check_esx3.pl to check_vmware_api.pl so now we host a copy of the plugin to workaround problems
* Remove retention on broker as it cause some troubles
* Update master
* Add : the not list for services generators. So the primary list can be automatically generated, and the user can just maintain the not one. The not is the esclamation mark (here I) in an other macro like _Idisks for _disks
* Add : hostd, manage external pages
* Enh : just remove a subset of illegal chars, and not just words for service generated names
* Fix: #387
* Add the .graph extention to the expected template file
* Fix style #373
* Fix style #373
* Add : collectd template with trigger sample
* Enh (Reported by : Morkxy, fixed by : Lars Hansson) change deprecated md5 by haslib
* Add a check_type attribute for checks
* Fix item's check_type so that passive services/hosts are shown correctly in Thruk
* Re-instated the Requirements header. Added link to 10 minute installation guide for windows
* Update master
* Fix search with numerical value for Thruk Add a testcase for this Fix a missing __itersorted__ for timeperiods
* FIX remove useless log
* Test : add livestatus_allowedhosts test to jenkins longtests/shorttests and quick_tests test suites
* Fix : Livestatus allowed_hosts options does not work
* Fix: wrong host_name for check_ssh in packs
* Enh finaly implemented retention for event queue when canopsis connection lost
* Fix: remove illegal char from service_description when duplicated
* Typo: tiny fix
* No npcd here git push! ;-)
* Changed queue variable name for a more explicit one
* Enh now you can set a limits for event queuing when canopsis connection is lost
* FIX missing python module dependency for canopsis broker module
* Started to implement retention
* Enh more robust connection lost handling for canopsis broker module
* Fix: invalid syntax
* First working version of canopsis broker module
* Fix style #373
* Fix styel #373
* Fix style #373
* Fix style #373
* Fix style #373
* Style fix #373
* Fix indentation #373
* Fix indentation #373
* FIX : checking of mongodb server
* FIX wrong name for mongodb debian packages
* FIX no need to update whole platform
* Fix bad cut'n paste #373
* Remove duplicated method #373
* Unavalable is the franglish word for "can't be swallow" ?
* Fix not_eq_nocase_filter
* Call the right function for !=~ LQL filter #373
* Fix variable misspelling #373
* Apply function to item #373
* get_type() doesn't exist anymore #373
* Fix: wrong tools used to install prerequisites for check_oracle_health
* Use the right function name for !=~ mongodb log LQL filter #373
* Fix case #373
* Exception is in sqlite3 namespace #373
* Keep error message for console error reporting #373
* Import redirect method #373
* CHANGE_HOST_CHECK_TIMEPERIOD apply to a host not a service
* Import Brok for get_initial_status_brok #373
* Fix call to logger #373
* Fix : oups, typo
* BUGFIX: Prepare service for retention instead of host
* Remove the right cfg
* No black sabbat in shinken
* Fix : (from : CHAMLEY Stephane) add notifications_enabled to the retention data
* Fix : oups, I miss a file for webui+apache auth..
* Add : Uperto to the THANKS file too
* Add : (from Lars Hansson) manage Apache2 htpasswd crypt pass
* Already!! :)
* ENH added support for online registration on packs community site (and skonf configuration)
* Add: New icons for fullscreen view
* Add licence header
* Pep8 for some objects (no pylint)
* * Fix graphite pickle and merge with pre/post
* * Fix graphite pickle and merge with pre/post
* Add : skonf configuration is with modules, and now auth is managed
* Add : arbiter/mongodb, add all objects from skonf into loading phase
* Add : skonf, community URI and proxy
* Add : proxy option for shinken-packs
* Add : Hostd add some titles
* Add : better mail send for Hostd
* move "add widget button"
* Add: Some fullscreen specific styles
* Rename: widget header
* Add : Mael VINCENT, julien pilou, Gael Millet, Damien Mathieu and hugo viricel to the THANKS file
* Fix : (reported by: Lars Hansson) issue #363 , remove password print in debug.*
* [fix] move arb_satmap from Item (generic class) to SatelliteLink (specific class)
* Fix typo
* Fix: helper unicode pb
* Fix typo, thanks tvtue
* Fix: Images
* Add: Mobile files - Pull request inc
* next small step
* Prevision of a new approach to deploy nconf with zero post install configuration
* Lot of work to be done before nconf packs is ready. A this time it just does not work
* ENH first attempt to add a way to import packs in nconf (not fully functionnal)
* Fix error in if syntax
* FIX sudoers on centos/redhat 6 require tty (we disable it)
* FIX installer was not updating mysql root password on redhat/centos
* FIX mysqld was not started after installation on redhat/centos
* FIX bad output redirection in install_mysql
* Alter nagios configuration to enable nconf config files. This invalidate default shinken configuration
* FIX problem in deployment.ini.in
* FIX problem with sudoers config check and add deployment folder
* FIX problem with sudoers config
* FIX bad target_file in deployment.ini.in template file
* ENH set default values in nconf web configuration
* nconf installer for debian close to be done ..
* WORK IN PROGRESS nconf installer (not enabled yet)
* Enh gitignore: OSX specific file prefix
* proposal for refactoring the README.rst file
* proposal for refactoring the README.rst file
* Fix a broker exception
* Auto answer y when uninstalling pyro
* Clean existing pyro when using MANAGEPYRO=1
* Try to fix annoying error message when checking for systemd
* Updated epel package version
* Try to manage better pyro installation. use MANAGEPYRO=1 to enable it
* Enh: search icon style
* Trying to get the http links to work
* Requirements moved to top, comment pyro version, a couple typos and links to ujson used in Livestatus
* * Graphite broker can now send data using pickle * add "use_pickle" boolean option in graphite broker module * add "tick_limit" integer option in graphite broker module
* Fix a ternary operator (breaks the tests with Python < 2.5)
* * Fix nrpe error handler
* Fix: satellitemap configuration property: decode value (may have several key=value in one line, separated by a comma)
* Fix: revert 790b918: configuration properties value is string only
* * Graphite module can send negative datas and doesn't send empty value
* Fix : Item init (set default arb_satmap): we are not sure params argument is a dict
* Add : Timo Veith to the THANKS file
* Add : way to make statistics from the configuration, and upload it to the hostd
* Fix : satellite port is an integer!
* Fix : pyro3 tests are broken
* Add : hostd, make pack link constant, even with pushs
* Fix : when creating packs, also look for the pack name in picture share
* Fix : set a default value for arb_satmap attribute
* Add : display URI when printing 'Pinging' message
* Add : (NAT) Handle natted satellites uri in arbiter daemons
* Fix : only *satellitemap* key may have several values
* Add : (NAT) Handle natted satellites uri in broker daemons
* Add : Allow running shinken satellites in a NATted environment Currently schedulers and pollers are implemented Remaining brokers satellites
* Fix : re.search() returns None/MatchObject, not a boolean, "\s*\t*" is equivalent to "\s*"
* Fix : Correct logged messages
* Add : shinken-packs, cli mode now print a json object in a clean way
* Add : install, copy all share files into the var/share target
* Add : skonf/hostd/webui move the sample image sets to the share directory
* Add : hostd from page, view last 10 packs
* Add : hostd, comment about why take the user from cookie for user saving
* Add : Hostd a user A can see the user B provile, but with less data of course
* Add : show the user avatar on packs list
* *Add : do not launch pyro for hostd and skonf. *Add : gravatar on hostd user page
* Clean exception
* Add: disable/enable footer function
* Fix : forgot a dir in the last commit
* Add : skonf/hostd, make the api_key need to browse and get packs from skonf
* Fix : hostd, pack name was instead of the host tag
* Fix : skonf, menu for packs and no user check for discovery part
* Add : skonf, links for categories and tags to launch the search by clicking
* Add : tag cloud on skonf packs search page
* Add : categories shown on the skonf ui
* emit an error message in logstore_sqlite
* Enh log template
* Add : skonf now load the pack templates dir too
* Add : Skonf package install. Manage the share/images importing pass
* Enh : skonf, more pack install management. Need to manage the share case now :p
* Add : skonf, first attempt for search+download a pack from the hostd. Now need to really install
* Fix some sqlite an other error with use_threads option : 2012-05-18 10:51:06,597 [1337352666] Error : [broker2] the module Livestatus just crash! Please look at the traceback: 2012-05-18 10:51:06,597 [1337352666] Error : [broker2] Traceback (most recent call last): File "/opt/shinken/shinken/shinken/modules/logstore_sqlite.py", line 146, in open self.log_db_do_archive() File "/opt/shinken/shinken/shinken/modules/logstore_sqlite.py", line 316, in log_db_do_archive self.commit() File "/opt/shinken/shinken/shinken/modules/logstore_sqlite.py", line 387, in commit self.dbconn.commit() OperationalError: database is locked
* Fix some sqlite error with use_threads option
* Fix : stupid S !
* Fix nrpe error handler
* Woops, sorry ;)
* Small fix for #345, we need to do it properly
* Add : skonf/hostd, start of the real hostd thing, the link with skonf :)
* Add : hostd/packs, services and commands in the pack files
* Enh : hostd now packs are automatically load when sent
* Add : get share objects for the zip pack file creation
* Enh : pack management with validation
* Add : first attempt for a CLI pack analyse tool
* Add : tools for managing the pack backend
* Add: hostd, send pack page and user page
* Fix : (reported by : Nicolas DUPEUX) #244 missing from_q property for regenerator
* Fix : (reported by : Akiooutori) fix #325 (missing SOCK_REUSE in some pyro versions) . Thanks for the bug report
* Fix : (From : Michael COQUARD) setup.py build with simple user
* FIX missing mongo dependency for debian like distro < 6
* First upload of new fullscreen dashboard
* Debuging canopsis broker (not usable yet)
* Added identifier for canopsis broker module
* FIX installation path detection was wrong when setting TARGET environment variable
* fix the livestatus db test, which was not prepared for Info/Warning/Debug log broks
* FIX systemd detection again ..
* FIX systemd detection that broke installation on REDHAT
* fix test_livestatus because it was not prepared to handle Info/Debug/Warning broks
* add a metainfo object to livestatus queries (used to put a query in certain categories) livestatus_regenerator's __itersorted__ method can receive hints to yield less objects make wait queries use hints add Info/Debug/Warning shinken-specific log messages to the list of storable messages add nagvis livestatus queries to the perf testcase fix a bug in the livestatus_trigger test
* Fix : errors around remove function and systemd suppport
* Fix : improve support for Fedora 16, now complete for install and remove shinken
* Add : fedora 16 support
* Add : uploaded zip pack got a db entry. so we will be able to list them, and read/parse/include them
* Ehn: log mockup
* Add : some options to shinken-packs, linked with the hostd daemon, like registering, get the api_key or push a pack
* Enh : shinken-packs file
* Add : hostd, data manager for packs
* Add : hostd, manage login
* Add : hostd registration process
* Start (not finished yet) Canopsis broker module
* FIX again check_local_mem command argument
* note about mixing installations ways !
* ENH manage sort of quiet mod (answer default to question). Next step should be to add a response file mode
* Fix errors on install script
* Removed canopsis broker as it is a simple module no need to do it the folder way
* Re-add, mis-removed credit into head of file :p
* Factoring code, fix stop and start at some point of install script, put log file into a variable, put all echo into log file without color and colored version for standard output
* Add : hostd, password on register
* Fix : forgot the hostd cfg file
* Add : hostd, start of the register page
* Add : shinken-hostd daemon for pack hosting
* Add : shinken-packs for creating and sending packs to an host server
* Minor fix: add vg separator for a better output enumeration
* Enh: add possibility to exclude a lv from vg scan and support of perfdata
* Fix minor typo errors and usage message of safekit plugins
* Fix indent problem ;-)
* Started to implement canopsis broker module (not usable this is just a skeleton)
* Add IBM specific plugins
* Fix : First part of #337. Handle no password in NSCA
* plugins are hosted on shinken server (better reliability ?)
* add Romain FORLOT as contriibutor
* Fix do not try to install mongodb when it is already installed on debian like distro ;-)
* Wrong named plugin..
* Add snmp plugins for AIX to monitor VG, inode, HACMP and Safekit
* Add two plugins to check IBM DS san devices in install script
* Add : skonf pack style
* Add : skonf packs got now a link to the wiki doc
* Enh : exchange pack to see its templates
* Add : skonf, play with packs page
* Add : skonf, play with packs page
* Enh : pack management. Now a pack can be a list of some templates, like vmware = esx + vm
* Enh : skonf pack list page
* Add : fix a nasty bug about adding register property in items. Dont add it again 
* Fix display correct values (names) when property is a list in showconfig. Todo : get default properties values
* Add : icon_set in template.cfg (commented by default)
* Add: system log mockup
* Add : skonf, /packs page for listing
* Add : skonf, link to the user contact page
* Add : prepare discovery for services in database with uuid
* Add : skonf, services page
* Add : skonf timeperiods objects
* Add : skonf commands objects
* Enh : skonf, make some calls a bit more generic
* no need to exit here
* FIX do not exit when mongo allready installed. Instead just warn and return so it will not break installation
* fix mongodb 10gen repo configuration path was not found on redhat/centos
* Fix #334 Install mongodb by default . Also enable mongodb startup script at boot time
* FIX #330 missing prerequisites python-ldap
* Fix check_local_mem command parameter
* fix startup scripts were not enabled at boot time
* fix unable to save ui preferences when no user collection found in mongodb shinken database
* fix hardcoded user name
* Fix a bug in livestatus "GET commands"
* FIX #331 fix username definition in ActiveDir_UI authentication module configuration
* Add a note about addon installation for better integration of pnp4nagios and nagvis in multisite
* Add : WebUI, start of a surprise
* Enh : get the pack into a json format in fact, because loading python code in the future server side can be a bit dangerous..
* Add : skonf, windows pack description
* Add : skonf manage placeholder popover for host macros from pack doc
* Add : skonf, manage placeholder for percent macros
* Add : skonf, manage del new macros
* Add : skonf manage add new macro on hosts
* Add : skonf host macros, put in placeholder the template value if available
* *Add : pack file and object management. From now only read by skonf. *Add : skonf macros list is now with templates macros, and sorted *Add : templates macros are now matched with macros pack description, so we can apply the good form type
* Add : skonf print of host customs
* Fix : skonf host form uri
* Fix : skonf host form uri
* Add : manage editable hosts
* Enh : skonf now load also flat file objects
* Forgot to add some files for nconf installation support
* Updated installer README file
* Started to implement nconf installation support. Not enabled yet
* FIX argument parsing for help
* FIX #289 Added support for check_snmp_bandwidth (untested)
* Added deployment.ini file
* FIX bad ip address detection. ifconfig return inet adr or inet addr based on which language is used
* FIX remove character ² in source code ... don't know why it was there ...
* Add debug print
* Enh : remove the need of default_value parameter for duplicate_foreach services
* Add : sample of L2 discovery with windows shares
* FIX: bad inet address detection when installing pnp4nagios under redhat centos
* Started to enable nconf support in contrib. Just a patch for deployment at the moment
* Update .gitignore
* English fix
* FIX check_nwc_health use release instead of master branch
* FIX some formating problems
* FIX some formating problems
* FIX some formating problems
* Updated README file to reflect modifications on install script
* Updated install README file
* FIX startup script was not enabled at boot time
* Del: old junk
* Oups forgot to remove debuging line
* Added ability to uninstall all or just an addon (curently only pnp4nagios)
* Enh/Fix: typo and move compiled regex into basemodule.py to reusing it into all child class
* Add : first 2nd level real discovery script, here for listing windows shares, like shares or printers. It auto-hide the $ ones
* Add problems services unhandled livestatus queries of thruk to LSB
* Keep the index on time field
* Add (Camille Vacquie): AIX service pack
* Updated versions of pnp4nagios and check_mk
* Much more useful index for log stored in sqlite
* Fix : webui manage_acl was not used in the /detail page
* Fix : the LS module should now be ok in scheduler, with itersorted functions enabled
* remove intermediate json step in producing livestatus python output
* fix regexps in test_business_correlator so they accept both unix and windows paths
* Fix : Fill some field in notification table. @naparuba please have a look to the "To Fix" part if you have some hints :)
* FIX removing of old log file was executed before privilege checks
* FIX bug with getopt adding quote to options arguments
* FIX: bug in options argument and update README file
* Now install support long argument names. Also removed some dangerous and/or unused options
* nearly finish livestatus authuser (todo: logs), multisite looks the same for nagios and shinken simplejson takes precedence ofer json in livestatus_response replaced cjson in favour of ujson added some tests for authuser rewrite of livestatus table handlers (hostsbygroup's inner loop is now hosts instead of hostgroups)
* Add : discoveryrule_order so the admin can manage the template order in a more easy way than with the order in the file... By default I put generic-host as the last one with a huge order 999. The default is 0, so put -1 wil go before unset rules
* Add : manage better macro resolving in discovery runners
* Add : multi-layers discovery, with rules on runners
* Enh : factorize discoveryrXX matching code in a mother class
* Add : matching elements to the runners
* Add : first attemps of a multi layers discovery
* Enh : discovery manager code, to manage after the multi-step discovery
* *Fix : get back the fulse effect in WebUI under FX and Chrome. If there is no syntaxical errors in a browser, we shold keep it :)
* Pep8 (#99) : @naparuba please have a look to the WTF part :)
* Fix : Old bug missed in Ndo mysql
* fix the test_business_correlator, because now there are more log broks
* Fix: IE Conditional Comments
* some bugfixes for livestatus authuser and new tests
* livestatus authuser implemented
* Fix: Issue #307 + html cleanup
* Add : convert print debugs to logger calls for objects/ classes
* Add trying cjson import to improve LS output performance
* Fix : explicit default parameter name
* another piece of livestatus authuser. now hostgroups and group_authorization_strict are ok
* Correct results classification
* Compture median duration of queries
* Add : Rapha�l Doursenaud to the THANKS file
* livestatus benchmark tool
* Measure query duration in livestatus client
* [fix] default daemons logging level in daemon properties must be a string, raise an exception if setted logging level is not an integer
* Add: SNI support to https and https certificate checks
* more livestatus authuser preparations
* Enh : skonf rename the objects module into elements. Less potential problem with the real object class
* Add : skonf save host and add new host capabilities
* Fix : the satellites are now raising logs again
* make the end_to_end test succeed again. needed to use local logfiles for poller&reactionner, because their messages did not make it into the nagios.log
* replaced another ternary in satellite.py
* replace a ternary operator by if_else so that 2.4 tests succeed
* Del file
* Add init SysV scriptSysV
* Fix : crash in scheduler launch
* *Fix : (reported by FrogX) broker crash with broks read from retention file. *Add : skonf host page is now ok for loading and saving data!
* Try to fix : external command debug call and UTF8
* Fix : get back some print on conf check
* Fix : don't create a brok for debug, this should not raise a message between all satellites, it can stay on local files
* Fix : fix merge for logs
* if_else() as a ternary operator workaround ensures compatibility with python 2.4
* make test_pack_hash_memory use a local assoc-file, so the windows-tests don't fail
* more preparations for authuser
* ignore authuser in livestatus tables != host/groups and service/groups
* fix a bug in livestatus __itersorted_ and authuser
* more preparation for authuser. the regenerator now fills a dict {contact: [host/svc-ids...]} which allows a very fast preselection of a user's view on hosts/services
* status_dat_broker's contacts and timeperiods are no longer objects but strings
* repair some tests (need skip_initial_broks)
* repair the test_npcdmod (skip_initial_broks)
* make the livestatus authuser test more readable with real host and service names
* Add : partially convert print debugs to logger.debug() calls
* Cleanup : replace tabs by spaces, reindent correctly
* Enh : skonf /host page
* Fix : last bug was reported by : Claneys Skyne. Thanks :)
* Fix : WebUI/LS was not loading broks like they should since last commits
* Tiny performance improvement for broks that contain no performance data. Moved processing of performance related variables after the check for presence of performance data. Also includes some typo corrections, and removal of references to Merlin broker module on which this is based off of
* ADD support for Linux Mint
* Add : skonf draft for multi-select options
* Add : skonf draft for multi-select options
* Add : skonf simple select helper for host page. Need multiple selects now
* Add : first version of a host form. Long work to do now with properties types
* Add : now LS and WebUI can be linked to the scheduler directly, and the scheduler can be asked to do NOT generate initial broks. (for large setup)
* Add livestatus authuser in livestatus_wait_query
* Header update :)
* Oups ! removed set -x
* Add : skonf, draft for hosts listing
* Enh : nmap discovery speed, and skonf scan part
* Add : UI /detail now dep graph is also print on a tab, so this feature will be more visible. Of course the load is a lazy one, only when the user show the tab, to do not overload the browser is not need
* Fix : Handle correctly last_command_check and last_log_rotation fields in prefix_programstatus Fix : Typo => synchronize is english :)
* Fix : try to merge graphite ui branchs
* Enh : skonf change a bit the top menu
* Enh : skonf scan result page, with lot of things
* Fix : UI /problems actions buttons for services where broken with html ids instead of real name
* Fix : Graphite, graph on correct selected period when use links 4H, day, week..
* Enh : Skonf : clean a bit
* Enh : Skonf, now host add tags got images set
* Fix : get back the auto-completion for tags
* Add : manage_acl options for webui, so the admin can enable commands
* Fix : some missing late command relink for global commands
* Final Header fix. Dont forget to pull it before edit :)
* Fix : Compile recurrent regex on graphite_broker.py, better way to display metric with threshold and scale Y axe for metrics in percent
* Fix : start to fix all skonf stuff. Lot of work ahead :)
* Fix : dispatcher test case after satellite rename
* Fix : remove local configuration values
* Fix : translation
* Add : daemons logging level can be hot-changed with shinken-admin
* Fix : convert loglevel string to int value for arbiter daemon
* MERGE : webui-devel into master
* Enh : UI /detail if #graph is on the name, go in the graph tab
* Cleanup : Rename 'arbiterlinks' as 'arbiters' and 'schedulerlinks' as 'schedulers' so that all daemon links are named all the same (daemon name + 's')
* Add : UI /problems add the downtime filtering
* Add : UI /problems filtering by ack state
* Fix : extract int/float part of all metric in perfdata instead of only the first one
* Add : UI padding for graph widget
* Add test for explode_hostgroup param
* Enh: Global header
* Enh: Widget header
* Enh: Widget layout
* Another big python files header update! Sed is coming !
* Add support to explode_hostgroup directive
* Add : First try of a collectd module that transform collectd metrics into service perfdata
* Add : new external command, PROCESS_SERVICE_OUTPUT and host, same than check_result for passive, but with no return code. Should be a good friend of triggers ;)
* Add : configurable logging level (per daemon)
* Add : configurable logging level (per daemon)
* fix : bug in test_trigger, but why does it worked on my machine and not jenkins? strange
* Fix : timeout test
* Fix : (reported by : foxbib) NDO forgot the nagios_ in the rest of the code
* Graphite : separate graph for each metric on webui, include warn and crit thresholds on them
* Prefix != Suffix :)
* Add : NDO add table prefix as a parameter
* Add : now triggers are launched on the scheduler after each check. Maybe we should find a better way
* [fix] do not push back monitoring status in GLPI database when the host configuration do not come from GLPI
* Add : trigger test cases in the automated tests
* Add : now triggers can be loaded from .trig files and call by their file names
* Add : trigger linking in service from source
* Enh : UI save widget context, so we will be able to call them from different pages
* Fix : UI /dashboard if a widget got no options, do not make it editable
* Fix : UI with widgets there is a possibility that the jit.js lib is not loaded before the graph is asking for it. So in the init function, we ask for the jit existance, and if not, postpone the init for 1s
* Enh : UI /problems change chevron by arrow for show more same problems
* Enh : UI /problems hide by default the same output in the problem view
* *Enh : remove the "remember me on teh logi, it's always remember in bottle. *Enh : change action icons
* Fix : UI /problems bug when launching an action, the select buttons were not good
* Fix : UI IE do not have indexOff...
* Add : UI /detail make the tag links to he /all with this tag filter
* Add : UI /dashboard automatic typeahead for host/service options for widgets
* Add :UI /dashboard manage the first time run, when the user got no widget
* Add : UI graph widget
* Fix : UI /dashboard now update positions values for widget for each change, so we are sure all are kept before saving it
* Add : Last IT problems widget
* Fix : again a bunch of tests :)
* Fix : bad realm test
* fix : realm test
* Add : now passive checks take their timestamp from the external command instead of the received time
* Change: System widget title
* Enh: Some minor changes at system widget: display size
* Add : UI /dashboard widgets now got a picture for illustration
* Enh : widget system is not a bit less huge
* Enh : UI /dashboard make widget panel bigger and widgets side by side
* Add : /widget/depgraph. And yes, even this one is possible in widget mode... :) :)
* pack/os/linux - check_linux_network_usage - use last_perfdata to determin bandwidth
* Fix : dispatcher test case
* Add : pre-serialize the configurations in the arbiter before going in daemon, and so kill the previous instance. So now restarts should be far less impacting on the scheduling off time
* Fix : another test
* Fix : various tests
* the interface selector argument is now an _HOST variable
* put warning and critical threshold of network pack in host template
* use check_snmp_bandwidth command from https://gitorious.org/check_snmp_bandwidth/ instead of default snmp plugin
* Fix : before launch a check, look if we are not already there. Shounds a bit useful for managing hacks in the tests
* Enh : brok time part boost, with less useless objects sent, like contacts, timeperiods or commands. We go from nearly 4min of start -- all is linked in webui to 2min30. we can win time again with serialize conf earlier in the arbiter
* A "all" points to a "problems" page
* Enh : prepare the pre-serialization of the configurations before sending them. Should be done before going in daemons mode for arbiter, and so before killing the previous run
* Add : miss the pack history test case
* Fix : self.pack_distribution_file saving...
* Typo on the host_name perf_data object. Host perf_datas are split, as it is done for the services
* Add : host pack dispatching history is saved in a pickle file, so we will be able to push same objects in hte same scheduler, and so add some of incremental send
* first steps with livestatus authuser
* unpickel brok in livestatus and remove a weird b_raw line
* again testcase preparation for livestatus authuser
* start with livestatus authuser. first some test configs
* small fix of the big update :)
* Licence (date) update. Don't worry for people I've delete. A massive sed is on the way! :)
* Feat: update all calls to logger.log() (except HOSTS/SERVICES ones) to use loglevels
* Graphite templates files
* Graphite UI now splits the metrics in separate graphs as a default behavior. Non-alpha chars are replaced by _ in Graphite service names and metrics
* Revert "Rien"
* Rien
* Update shinken/modules/graphite_broker.py
* Feat: Support log levels in shinken logger.Log class #2 (after discussing on https://github.com/naparuba/shinken/pull/277)
* Revert "Feat: Support log levels in shinken logger.Log class"
* add name to output debug
* Code Review. #99 Fixed : typo in comments Fixed : misplaced comments Fixed : PEP 8 style (check scripts are test/pylint_pass.sh and test/pep8_pass.sh) Updated : licence in files Added : # -*- coding: utf-8 -*- in header
* Add : a hash computation pass so we will try to put "same pack" thing when we will cut the hosts
* Add : Triggers, add the critical function
* Add : Triggers, give a first real (or somewhat) function for the trigger, with a if code try
* Add : trigger test with a on configuration code load
* Enh : simplify trigger code
* Add : who want triggers on core?
* Fix : UI tag filter name
* Add : UI /detail add tags in the top right part, with pictures from set if available
* Add : UI add the host tag filtering
* Add : tags parameter for keeping the old templates used
* Add : UI add realm filtering
* Enh : UI make the IT overall badger show the worse problem state
* Enh: quickinfo problems, now with more colors
* ... damn ... where is the icon ..
* Fix: gitignore
* Fix: Icon path quick info badger
* Fix : UI /problems do not protect bookmark names
* Add : UI /problems bookmarks management
* Add : UI /problems Add a delete all filter option
* Add : UI /problems now current filter options can be deleted
* Fix : UI /problems filter panel functions and buttons
* Add : UI /problems add the filtering panel functions
* Add : UI /problems view factorization, and some things for filtering show and prepare
* Add : UI try to add some filters for problems page
* Add : UI first attemps for filter options
* Add : UI /problems filtering panel
* Add : UI make page slide plugin a common one
* Add : UI make the it problems badget go in the /problems page
* Add: Quickinfo -> IT problems
* Revert "new logging" method calls
* Fix : some tests that were using broks. More to come
* Enh : make broks with the binary mode, more speed with it
* Cleanup: remove vim temp file
* Feat: Support log levels in shinken logger.Log class I have reimplemented python-logging loglevels: DEBUG, INFO, WARNING, ERROR, CRITICAL
* Cleanup: manage_brok() function already defined in parent class (BaseModule)
* Feat: Support log levels in shinken logger.Log class I have reimplemented python-logging loglevels: DEBUG, INFO, WARNING, ERROR, CRITICAL
* Cleanup: remove vim temp file
* Update shinken/modules/graphite_ui.py
* Feat: Support log levels in shinken logger.Log class I have reimplemented python-logging loglevels: DEBUG, INFO, WARNING, ERROR, CRITICAL
* Enh : Limit the serialize/unserialize pass for broks. Only do when create and when consumed. Will smooth the inter-daemons connexions
* Cleanup: manage_brok() function already defined in parent class (BaseModule)
* Add : arbiter -p options for dumping profile
* Fix : typo in graphite ui module
* Update test/pep8_pass.sh (#99)
* Pylint check modified : Sugg : Remove the E1101 filter. It can help to find real bugs. Add : Filters (read comments) Modified : Line length 90 => 100
* FIX #235 : added check and prompt when install script could not download required check_mk version
* Enh : UI /dashboard cosmetic change for the show panel button
* Add : UI menu for the user
* Add : UI list other external UIs in the top menu. PNP and Graphite are done
* Refactor : remove duplicate name value in brokerdaemon/receiverdeamon logs (already inserted by log function)
* Enh : UI remove all problems dock style
* Enh : UI /problems when the action dock menu with a left side menu with top fixed place
* Fix : UI /impacts small fixes like ACL or style
* Fix : UI solve widget panel hight on small screens
* Enh : UI /problems page now manage if the user got actions enabled or not
* Enh : UI /detail now a user without action autorized will not see the actions buttons as active
* Add : UI now the user should have the can_submit_commands to on to launch an action
* Fix : (reported by : D.Roche) bug in hostdeps and multiple names
* Partial fix for check_mk installation when version is not available from check_mk website
* Enh : UI /detail now buttons are in the same line, in a tool bar
* Fix : UI /detail too much left margin is not a good thing
* Enh : UI add an icon in the global search input
* Enh : UI same in details but for impacts
* Enh : UI /detail putthe gesture button with the others
* enh : UI /detail sub service show
* Enh : UI /detail buttons are now aligned
* Update shinken/log.py
* Enh : UI /dashboard widgets are now with icons for the menu
* Add : UI /dashboard now it is on 3 collumns
* *Fix : UI bug in modals for objects with names in it. *Add : UI impacts widget
* Fix : UI /dashboard style for widget selectors
* Enh : UI /problems replace the enabled.png by a bootstrap chevron up/down way
* Fix : UI /problems fix image hovering
* Enh : UI /dashboard widget panel look
* Add : UI /problems now with good looking for tick selection
* Fix : UI some js problems with IE
* Add: UI /dashboard add a spinner to show widget loading
* Add : UI /dashboard now a /widget/problems, with css and js dynamic load
* Add : UI widget load for webui and dynamic list show :)
* fix snmp community for switch
* *Fix : UI there was no JSON under IE8. *Add : UI factorize widget into it's own root template
* Fix : UI /dashboard get back the position thing
* Add : UI /dashboard now system widget get few own things, it's time to refactorize
* Add : UI /dashboard better management of widget options
* Add : UI /dashboard method for loading and saving options in the widget form
* Add : UI /dashboard manage position save and collapsed mode
* Update etc/shinken-specific.cfg
* Update shinken/modules/graphite_ui.py
* Fix : UI /widget/system manage now the widget id
* Add : /dashboard now manage all widgets in one function call and more easier
* Add : UI move some js code into a proper .js file
* Add : UI dynamic save and load for widgets and options. Now need to edit options too
* Packs: ssh: move ssh tests into his own pack instead of main configuration files
* Add : UI start of saving widgets preferences and options
* Fix : UI /dashboard now manage add widgets without loosing the dragable functions
* Fix : (reported by : liedekef and Sven) disabel flapping was not putting is_flapping in False
* Enh : make business rules realm check for hosts too
* Add : source of timeline code
* Add : UI /timeline first try. Can be great to use with "important past data"
* Fix issue #249
* Fix: Bogus comment
* Fix: Image alt tag
* Fix : UI hide gesture under IE
* Fix : UI pulse css3 effect is disable now on IE
* Add : UI get I8 html5 elements js load from local server and not from web
* Add : UI cosmetic details
* Enh : UI /problems output left margin was just too big
* Enh : UI /problems better look for /problems, with long name cutting and some margins
* Enh : UI /problems no more tebles for problems, now it's div
* Add : UI /problems select/unselect all elements buttons
* Fix : UI now print the detail on the left part
* pep8 compliance
* Fix : (from Remi Buisson) fix some check_shinken default parameters
* fix: packs/ldaps need to use $HOSTNAME$ instead of $HOSTADDRESS$ to validate certificate
* fix: typo in ldap service declaration
* Add : first try of widget options load. Not so easy :)
* Enh : prepare widget system for saving/getting data
* Add : try to manage a bit better the perfometer for unknown commands, with min/max management
* Add : (thanks to : mocnik.matjaz) pack for Allied switches
* Pep8 second try. (This is related to #99) Modified : Line length 80 => 100
* Fix : another indent typo
* Update etc/shinken-specific.cfg
* Fix : indentation
* Update shinken/modules/logstore_sqlite.py
* Update shinken/objects/config.py
* Change tab text
* Add : UI first widget, that load in an ajax way. Now all we need is to manage how give data to this (I think in the uri with get args), save this (call in mongodb) and retrieve when load the page. Oh yeah. The best thing : coding a widget is just as easy as coding a new plugin or extend one. Too easy (and will be good so we can extend current pages with a widget mode) :p. Just need to see if the widget code need some special scripts
* by default, SNMPCOMMUNITY is not defined anywhere by default, SNMPCOMMUNITYREAD is defined in resource.cfg Let's use the 2nd, instead of the first
* Change the default max_plugins_output_length to 64k to handle the large output of check_nwc_health
* Add : UI /dashboard page slide effect, where we will put all widgets we will add after
* Add : prepare for saving UI user preferences into a mongodb database
* Fix: crash arbiter with Pyro4 + error in the distant scheduler command management
* Fix : LS/log in mongodb now work with old pymongo versions
* Fix : Merlindb crash on some missing properties
* Fix : UI /detail merge
* small tidy up
* Del sql suffix from gitignore
* Fix: without debug line ;)
* Add: 1st version of a NSCA python client
* eltmockup to devel branch
* Enh : UI /dashboard css
* Fix: If no timestamp in POST data, then it is now()
* Add : UI /dashboard import js lib for managing widgets. Still need a lot of works
* syntax fix
* Pep8 first try Fixed : Line length Fixed : Space terminated lines Fixed : Remove empty lines with spaces Fixed : Typo requirement
* Add : UI automatically redirect mobiles to the /mobile part
* Enh : UI add /wall on the menu
* Fix : UI /wall view
* Fix : UI get back the pulse effect
* Add : UI detail/impacts show in the dep tree THE root problem as a span with red background
* *Add : UI /detail downtimes got their own tab, I don' see how to merge comments and dowtime in the same one. *Fix : crash n the arbiter with Pyro4 + error in the distant scheduler command management *Fix : UI downtime form was sending a wrong year, not good. Oh and by the way : is javascript a serious language, really? parseInt('08') give 0 !!!! It's just stupid! It's really a dirty language!
* Add : UI add the new comment button
* Fix : UI /detail zooms is now working, currently with PNP only
* Prep: new structur
* Ehn: ignore file
* Del: obsolete css class (left/right)
* Fix: info box width
* Fix: login container position
* Enh: Arbiter can now load shinken specific configuration from a mysql database. Thanks Aurélien Bonnardon
* Add : UI : start of select/zoom effect for the graphs. Need a bit more work for date..
* Add : webservice module for the arbiter. From now only the push check result is available. But maybe more if need
* Fix : (reported by : Stephane Chamley) flaw in the service deps
* pack: network/services/dns handle hostname to request et expected result
* pack: linux: add default value for warning and critical threshold
* Add : first attempt of a webservice commands for the arbiter
* Fix : UI /detail graph time selectors are now in a good form
* Fix : (reported by:matjaz) akcp services packs was apply on linux template...
* Enh : remove a very useful comments..
* Add : UI manage the global search on detail and /depgraph pages too. Manage only the hosts from now
* Fix : UI /detail, hide by default the gesture div
* Add : UI form for schedule downtime, with a date picker widget
* Add : UI acknowledge modal form
* Add : UI modal form for submit new check
* Add : (reported by : Frederic Pege) output the number of linked packs for each realm when we are in the cutting phase
* Add : (reported by : Frederic Pege) output the number of linked packs for each realm when we are in the cutting phase
* Enh : UI /detail get back tje iphone like check buttons :)
* Fix : (reported by: Jonathan Gaulupeau) #236 arbiter crash with a bad init of connexion
* Update install.d/shinken.conf
* Fix a bug in livestatus module and add the attribute host.event_handler (needed by Thruk)
* Add: UI /problems now autocomplete global search on the main page. Should find a easy way to propose this to others pages too :p
* packs: handle warning and critical values for check_mysql_health
* Enh : UI link global search to call the current page with a search criteria
* Enh : UI menu add the active information about where we are
* Enh : UI /problems play with pagination, and make actions buttons not get back in teh top of the page
* fix : UI /problems and /depgraph things
* Add : UI top bar is now black, with all links in it. I remove the left menu, and get back /impacts as it should be
* fix : changelog is now mroe clear about core and not core
* add: prepare for 1.0.1 release
* Fix : the notified_contacts are now saved as string names instead of full objects, and are relink when we read the retention data with the current contacts objects
* Fix notified_contacts for host
* Fix issue #230
* Fix: position and z-index
* Fix send mail (service and host) and now works on Gmail and Exchange OWA for the colors
* Add : UI first modal work with ajax load for content
* *Fix : UI /impacts fix buttons *Fix : UI overall : now show the number of importants impacts instead of all
* Fix : UI /problems now details are smaller and better
* Add : UI the refresh functions now look if the backend is available before refresh. So theu ser will not be prompted again and again for /login when we restart the UI :)
* Fix issue #169
* Fix : allow } in commands if it's not alone in the line
* Initial upload: Font Awesome
* Fix : UI /impacts make the slide to the right in the same time than the opacity goes 1. More 'natural'
* Fix : UI /detail get back the on/off buttons logics
* Add : UI /detail on/off buttons are now blue, and gray when disable. Need to code the logic now
* Fix HTML in sendmails
* Put all attributs of hosts and services definition. This may be more simple to update plugin Monitoring than Shinken installation
* Fix a bug in livestatus attribute action_url_expanded. (Macroresolver needs to be initialized)
* Fix HTML code of notification by mail
* Fix HTML wicth not display all message on HTML mail client
* add: new css class for all small alert infos
* Fix: now the correct div is closed
* Fix: good command name for Mysql-qcache-lowmem-prunes service
* Ajout d'un filtre de criticité
* packs: add check_ldap3
* Fix : UI /mobile view with jquery and new layout. More work need when we will got the top menu
* Fix get tag value in GLPI value. Thanks to Jean Gabes for help
* Enh: duration set to 500 ms
* Fix : UI depgraph view
* Correction tri ordre alphabétique
* Fix: Use good host_name template for mysql-slave hosts
* Fix : rights on some files forthe packaging phase
* Fix: Unclosed element div
* Add: iPhone / iPad password effect
* Add a livestatus testcase for proper resolving of macros in action_url_expanded
* Fix : (reported by : Jonathan Gaulupeau) ip_tag was launch too late to access check_command objets
* Fix : UI, detail, get back services and impacts on the right. One tab less
* Fix : UI detail page, get back in opacity 0 useless data, with a button to show them
* Update shinken/webui/htdocs/js/shinken-actions.js
* *Fix : gesture is back :) (temporary placement from now, I'll put it with a button hide/show) *Enh : put information in a lower mode, so we can get back some data on the right *Add : useful float class :p
* Fix : UI /problems get back notifications
* Enh : UI get back tooltips on /problems
* Enh : UI /problems icons are bigger
* Fix : UI /problems page, with status text was too small for unknown text
* Merge: master into webui devel. Lot of change so :)
* Fix : UI get only critical impacts for top right badger
* Make test_module_passwd_ui shut up under python 2.4
* enh: badger with live data
* Fix: pointer.gif path
* enh: gitignore
* Fix : UI /problems cosmetic things
* Fix : UI get back the opacity hover
* Fix lists
* Fix : UI /problems view styles. Need to get back opacity hover
* Fix : UI graph overing with jquery
* Fix : UI /problems accordion with space in names
* Add a forgotten sys-import for the test_module_passwd_ui
* Skip test_module_passwd_ud for Python 2.4.x
* Add support for max_packet_age in TSCA
* pep8 compliance
* Add a fallback for the missing crypt module under Windows (fcrypt)
* Tidy up layout.css & header-element.css Enh: header_element.tpl Add: new icons
* enh: header menu
* Add : getconf call in the shinken-admin. Not documented because it will evole, from now it's just strings ;)
* Fix : issue #214 (shinken-admin catch backtrce for lost connections)
* Enh : cosmetic things
* Fix inheritance with +
* Fix : tests cases with push_flavor
* Fix
* Fix : ticket #213 (really this time). This will manage cases where an ctive satellite die and there is no spare. It's useful for pollers where spare is not so interesting. This will avoid to send the configuration again and again in other alive pollers, and so they can still do their job
* Disable update database on host check
* * Fix Pep8 violations
* * Fix Pep8 violations
* * Fix Pep8 violations
* * Fix pep8
* Change header style
* Greeting script
* Fix fot timeperiods
* Fix : rollback from last commit, it breaks spares :( I need to find a better way than ids to identify a configuration mapping
* Fix : (reported by : Romain Vrignaud) Fix #213, when 2 pollers and one goes down, the other get again and again the configuration
* Add : test case for the htpasswd module, WebUI. File is with admin/foobar login
* Fix : test_downtime is back :)
* Fix : (reported by : H4wkmoon) time change compensation lead to a scheduler crash when objets don't got check perdios or notification periods
* Fix : test big actions is failed on windows
* Fix : bad log directory..
* fix : my last commit fix big commands, but breacks very small ones :p
* Fix : manage LARGE output from sub commands (>64k). Only woks under Unix from now, because it use the fcntl module
* Enh: menu greeting
* Optimize code. Thanks Jean Gabes
* Add: greeting script
* ADD check_mem.pl from https://github.com/justintime/nagios-plugins to the list of installable plugins
* FIX check_esx3 install under ubuntu 32bits edition
* Started to enhance backup
* FIX multisite layout, add custom links
* FIX shinken etc layout for pnp4nagios and multisite
* ADD keep a trace of setup parameters so we can reuse it for other script invocation
* Revert "FIX remove function, ADD storage off parameters between invocations of install"
* FIX remove function, ADD storage off parameters between invocations of install
* Updated backup/restore functions to match the new layout support
* Started to implement better layout management (at the moment only etc dir). Please do not use it until full test process is done
* workaround problem with official pyro3 under Debian squeeze. Use pyro4 instead of the official one
* FIX #208 : more info at the end of installation process
* FIX #210 : added test of parent target folder. if it does not exist then create it
* Fix : (reported by : ^Cnicow) bug in escalations, there was too much escalations raised
* fix template for localhost
* Fix : lot of /problesm stuff. Need to manage now all ajax thigns from mootools to jquery
* Fix : get back the dep tree icons
* FIX SKIPPREREQUISITES exception, ADD target folder in message at the end of installation
* Add credential insformations for WebUI
* Add some cleanup in the target folder
* fix : forgot the deptree.js file
* Fix : buttons in UI. Will need lot of size management, because image get it big, very big :p
* ndodb_mysql_broker module was not working on python2.5
* Fix : impact view for jquery. I miss a lot Mootools Tween :p, animate is really under tween power
* Fix buildpath
* Add tag for arbiter to limit get config to a GLPI entity. relation with plugin ticket : https://forge.indepnet.net/issues/3303
* Add: Thomas Meson to the THANKS file
* Fix the livestatus contact_groups attributes finally
* Fix a bug in livestatus Service.contact_groups
* Add: New CSS styles
* setup.py: bump the version to 1.0
* add missing files to build the package (#201)
* Fix glpidb_broket to update GLPI DB for business rules
* include the README.rst in the tarball (#201)
* TAG: 1.0
* Allways work with a fresh packages list for debian related
* FIX mongodb install under debian
* Fix: login view
* Update glpi_arbiter module to get services templates from GLPI / plugin monitoring
* FIX shinken exception on plugins/addon dependency for mongodb
* FIX shinken exception on plugins/addon dependency for mongodb
* Enh: top nav
* Enh: state icons
* Update README file for usage
* Add support for mongodb installation on debian like distro
* FIX #187 now wmic is back
* Add 10gen mongodb repository
* FIX color output in message
* added architecture in distribution checking function)
* Update README.rst
* Added support for mongodb from 10gen
* FIX install for check_mongodb when prerequistes are empy
* FIX output redirection
* Added informational for shinken start
* FIX oups npcd start was not in the correct function
* FIX start npcd daemon after installing pnp4nagios
* FIX script name in usage
* FIX wrong init script name for apache on redhat/centos
* removed old location of install script
* relocalised install script from contrib to shinken root folder
* removed trap usage (does not match our needs
* Remove unused script
* FIX minor bug in distribution checking and updated usage
* Add more modified_command updates in external commands
* Fix a bug in commandcall which was introduced with cf505337f3
* Fix : (reported by: nadiw) protect the escalmation point if anti-slash before in commands args
* check_freshness shouldn't be in retention
* Updated readme file
* Fix : Fix Issue #185 (search & switch pages)
* Correction Sort bug in 'problem' view
* Fix Issue #185 (search & switch pages) https://github.com/naparuba/shinken/issues/185
* Fix : set display_name to service description if not set
* Correction Sort bug in 'problem' view
* Fix : zenoss wmi package version. We should get such thing in our server instead of relying on other ones I think
* Fix (reported by : OliverHA) : invalid state change time in UIs
* Add : remove color for impacts view because it's too strange with the arrow before. We must look in 1.2 how to merge both things
* Update shinken/webui/plugins/impacts/views/impacts.tpl
* Update shinken/webui/htdocs/css/layout.css
* Update shinken/webui/plugins/problems/views/problems.tpl
* Add modified_attributes property also to host&contact
* Prevent a pipe-test from running under cygwin. Otherwise it will hang
* Fix a bug in a problem-table-relevant test-case which did not consider host dependencies
* NEVER USE THIS. YOU DO NOT HAVE TO KNOW WHAT IT DOES
* FIX command output redirection
* First step to skip prerequisites
* NEVER USE THIS ! ONLY FOR DEV
* FIX use tmp path defined in shinken.conf
* Add warning message for proxy usage
* Add constraint for plugins and addons installation : shinken should be installed first When removing multisite also remove sudoers configuration
* Add check_mk.d configuration folder to nagios.cfg
* Del: unused footer template Add: css class min-height
* Change: Fotter Add: new class
* Add missing lql operators to the logstore backends
* Fix a livestatus bug which was caused by not implemented ~ operator in logstore
* Add a new testcase, because sven has nothing better to do on a friday evening than to sit at his computer and finding livestatus bugs
* Add better error handling for invalid livestatus queries
* Fix a missing import (Message) which caused spurious broker crashes
* Fix : property class/instance name overwrite for flapping things
* Add livestatus attributes modified_attributes_list and a test case
* Prepare names-list for modified attributes
* Handle invalid livestatus queries without crashing the broker
* FIX error message in logs compression when archives folder is empty
* FIX #118
* Fix typos in load_global_conf
* Remove useless code
* Fix the 2038 bug in TSCA
* Fix (reported by : Nicolas Dupeux): local/global issue with properties names between class and isntances for freshness
* Add : test case about Xof: rule with jsut hosts?
* FIX #170 multisite installation support for multisite
* Clean : useless image
* Add support for python 2.4 to licestatus cache
* Fix : duplicated elements in the /problems view
* Fix : catch contact with no contact_name
* TAG: 1.0rc1
* Partial fix for issue 177
* Fallback mk version to stable
* Updated shinken.sh usage for nagvis support
* Fix : (reported by : H4wkmoon) STAR expand in hostgroup names was not looking as template property
* Add lots of modified_attributes
* fix a type. thanks jean
* FIX #176 : sharedir fixed
* Multisite version is now 1.1.13i3
* Start with modified_attributes
* Add the Negate: statement to the livestatus module Fix minor bugs and make the db test cases easier to understand
* FIX #174 check_netapp2 support
* FIX #171 now include check_mem.pl
* Fix a bux in liveststatus cache which appears with deactivated cache
* FIX missing output redirection for nagios-plugins installation
* Added support for nagvis installation (debian only)
* Fix some bugs in the livestatus cache and make a good test case for the host/service-history check
* Fix a minor bug in livestatus cache
* Fix : (reported by Mihai Efrim) flapping notifications
* Add : Victor Igumnov to the THANKS file
* Add the ability to install on Solaris
* Add: new topnav color Start CSS Grid migration
* Add pagination to problems page
* Updated README file
* Added support for manubulon snmp plugins install
* Add some comments to the livestatus cache, bugfixes
* Add star image Add tooltip to eltdetail Clean up login page
* Fix: Path to star icon
* Enh: Action dropdown menu, now with icons
* Fix : in the Comment LS table, it was calling a description property, the good name is comment
* Enh: dropdown action menu
* Fix : #148 : STOP_ACCEPTING_PASSIVE_SVC_CHECKS got not effect
* More cache for the livestatus module. Try to find some common rules for cache-able queries
* Add jQuery Meow script for notifications
* Enh: System Overview Part 1
* FIX #131 there was an error on selecting the correct package manager
* Apply seb-solon suggestion about ln -sf
* FIX #129 : better instruction when installing check_oracle_health plugin
* Fix some unexpected behaviour when removing shinken
* Code review. Fix header
* You can send several check result using NSCA ..
* Add support for max_packet_age
* Fix mispelled pnp4nagios apache configuration file
* Added ability to choose to remove (or not) check_mk multisite when removing shinken
* Added option to choose to remove (or not) pnp4nagios when removing shinken
* Remove unnecessary imports from livestatuscache
* Constructor signature change due to cache implementation
* Be consistent with reference implementation
* Add a lfu to the livestatus cache
* Add: Licence
* Fix a bux in the livestatus broker (use_query_cache flag)
* Add: tooltip functions for all pages Add: tooltip to system overview page
* Fix the test again for issue #155
* Fix issue #155 again. The shell error message looks different for ubuntu
* Fix test case of issue #155 again form <2.7 (screaming loud the print statement on line 155 of test_action.py)
* Fixing #158. Please, @david-guenault look at the comments with "Sugg : " ;)
* Del: unused css code
* Fix the missing import of livestatus_query_cache in the livestatus_broker
* Fix issue #155 for < 2.7 where the submodule does not make a difference between a plugin's exit(1) and an angry shell
* First steps of the implementation of a cache for the livestatus module. (Disabled by default and i don't tell you how to enable it yet)
* Add: 'SOLVE THIS' highlight box, pulsate effect
* Add: new spezial css class -> layout.css Fix: Typo Del: unused css classes -> eltdetail.css
* Add a before_after_hook to the regenerator. This gives other modules the chance to take actions when a state change occurs. (used for livestatus)
* Enh: Base layout
* Add first version of dashboard mockup
* Add a new label class
* Resize dropdown menu
* Change minimenu to a cool pill menu
* Add shinkenui.js Add dummy action menu
* Fix issue #155 also for windows
* Fix issue #155 and add a test fixture
* English style changes and small comment corrections
* Fix: typo Enh: Table style
* Add: alert-critical css class
* Fix : search invalid TP got problems in multi timerange format, and so got problems for DT
* Add: search form
* Enh: eltdetail view
* Add jQuery
* Complete typo fix ..
* Add new class Enh: box class
* Add: new style class Start migration from 960 to twitter bootstrap
* Fix comments of WebUI modules
* Fix : (reported by: Landry MINOZA) status.dat and regenerator got problem with pure notif ways contacts
* Corrected spelling, style, descriptions and reordered some poller related items
* Deactivate {{user}}
* Add: badger styles Enh: header element Enh: navigation element Fix: Base layout
* Add: no padding class Fix: title in main template
* Enh: Login form part4
* Fix : error in pyro3 HA mode about broker to scheduler spare connection
* Fix : some miss in the changelog
* Add : 1.0 changelog
* Enh: Login form part3
* Enh: Login form part2
* Tabula rasa & reimport of twitter bootstrap
* Hide badger style
* Enh: Add host/service dependencies and contactgroups
* Badger customizing ... css
* Initial upload of badger
* Fix : (reported by: Steve Kieu) missing get_name() method for config
* Fix a livestatus testcase which failed because of different behavior of the json module under different python versions
* Change minimenu color
* Change position of business impact box
* Fix : the tactical overview. We can merge navigation and nav for 1.2
* Add : shinken logo instea of robot red
* resize h1 header
* Fix : get back LS on the 50K port by default. + some comments fiexes
* *Fix : (reported by : denetariko) manage spaces before and after type name in define line. *Fix : remove mockups things in the webui
* Fix bug when installing pnp4nagios. Now all of the stuff seems to work fine
* Add : Asterisk SP discovery rule
* Fix a bug in livestatus WaitCondition (returned too fast)
* When removing shinken, it also remove addons installed from shinken installer
* Make the logstore_mongodb more robust against database outages
* Code Review. Fixed : typo in comments Fixed : misplaced comments Updated : licence in files Added : # -*- coding: utf-8 -*- in header Added : Info and Warning in some logger.log
* FIX #135 #136 #137
* Fix missing dependency : libmysqlclient-dev
* FIX mispelled variable
* FIX missing files to be deleted
* Livestatus: can now connect to a replica set through the parameter replica_set Old entries are deleted at midnight
* Add : make the nmap discovery do tcp and udp scan
* Enh: make livestatus module more robust against malformed queries
* Fix a big bug in architecture detection and package detection
* Added script to clean all packages. DO NOT USE THIS UNTIL YOU KNOW WHAT YOU ARE DOING git add clean.debian.shgit add clean.debian.sh
* First steps to add transparent failover handling for livestatus and mongodb replication sets
* Fix a test which was broken since the last commit (Warning_:_)
* Code Review. Fixed : typo in comments Fixed : misplaced comments Updated : licence in files Added : # -*- coding: utf-8 -*- in header Added : Info and Warning in some logger.log It will be easy to split logs after
* Fix : issue #86
* Fix : issue #85
* *Add : is_admin property for contacts *Add : if contact is not is_admin, then the /problems view only show its related elements (if he is a contact of the elemetn, of an impact or a source problems one)
* Code Review. Fixed : typo in comments Fixed : misplaced comments Updated : licence in files Added : # -*- coding: utf-8 -*- in header Added : Suggestion in a property.py (not very important)
* Fix var path
* Fix : no running_properties elements for notif ways
* Fix a bug in contactgroup livestatus mapping and set defaults for bool attributes too
* Fill some more livestatus attribute stubs with code
* Code Review. Fixed : typo in comments Fixed : misplaced comments (My mistake, I've to fix previous one because I read again the docstring rules, and they are not as the simple comments ones) Added : licence in files Added : # -*- coding: utf-8 -*- in header ( Once done for each files, we should try to replace the name in the licence with special character like 'è' or 'ß' :P )
* Remove the servicegroup alias workaround in livestatus
* Fix : issue #58
* Add: webui/mobile make page higher and make big icons links
* Add: webui/mobile add sorting on impacts page, and data in problems one
* Fix : (again?) the emc discovery rule
* Fix : discovery test
* *Fix disco datas again without iteritems()
* fixed grammar stuff for shinken/daemons/brokerdaemon.py
* fixed comments gramar for shinken/daemons/arbiterdaemon.py
* *Add : TIMEPERIOD TRANSITION logs from the Arbiter to get timeperiods transition output (for reporting or debug for example) *Fix : LS create the socket directory if not existing *Fix : discovery lib, bad disco data type?
* Add : if missing alias in objects, put the name if available
* Update etc/discovery_rules.cfg
* English style corrections
* English style corrections
* Workaround for a strange error which made livestatus crash. In a unittest "GET servicegroups\nColumns: alias" is ok. In the running process, there is no such attribute alias
* Add: CSS classes
* Fix servicesbyhostgroup and num_services_* attributes for servicegroups in livestatus
* Code Review. Fixed : typo in comments Fixed : misplaced comments Fixed : replace print by logger.log when we have an error Added : licence in files Added : # -*- coding: utf-8 -*- in header
* Fix : discovery module was using old mongodb parameters
* Enh : skonfui, change validate host form in an ajax way
* Enh : change mongodb server properties into an uri one like the livestatus modules
* Fix bugs in livestatus Downtime attributes
* Fix a bug with centos 5 and python 2.4 in livestatus_stack
* Fix a bug in logstore_mongodb which needs the generic method commit_and_rotate_log_db too
* NON WORKING : seems there is a problem with pymongo module
* Added support for mongodb log store for livestatus
* Started to implement the new livestatus module
* Add: some images
* More bugfixes in the MongoDB log storage and a better test
* Update usage
* Clean some code Add check_hpasm to the list of supported plugins
* Enh: Login form
* Add Service tab content
* Change command buttons possition
* Enh: Gitignore
* Fix: some stupid style bugs
* Fix a bug in the fallback-if-no-separate-logstore-module-routine
* Logstore_mongodb inserts documents in safe mode
* Added support for mongo retention to redhat (at least redhat 6)
* remove unused line in conf
* Added support for mongodb retention module. When installing RETENTIONMODULE=mongo ./shinken.sh -i
* FIX typo in log (redis is not mongo) ;-)
* Add: Tab comment and graph
* Fix: Toggle link
* Add: eltdetail tabs
* Remove a silly debug print
* Fix the fallback-to-built-in-logstore-module-method
* Fix test_regenerator. Better import the classes you want to test
* Init of livestatus_broker failed in test_modulesmanager. Now initialization is mor erobust
* Fix a bug in disco to make jenkins happy again. is_matching_disco_datas datas is a list of tuples not a dict
* Fix some minor bugs in livestatus Make test_livestatus_mongodb exit gracefully if no pymongo is installed Some cleanup of unnecessary code
* Remove the performance test from test_livestatus. There's an extra test_livestatus_perf for that
* Add: jQuery Tabmenu
* Add the new livestatus module and test cases
* Remove the old livestatus module
* ADD two new modules for storing livestatus logs. sqlite and mongodb
* Enh : make datamanager, the regenerator front class, a common one so it can be reused by LS
* Add: Navigation + Header styles
* Replacing the useless shebang by a useful utf-8 encoding. Sorry guys, I'm tired too sometimes :)
* FIX a missing linebreak
* FIX remove a non-ascii character in a comment
* Add: Style Login page
* Code Review. Fixed : typo in comments Fixed : misplaced comments Fixed : replace print by logger.log when we have an error Added : licence in files Added : Info, Warning, Error in logger.log / print statement
* Code Review. Fixed : typo in comments Added : licence in files
* fix
* add another missing command
* Code Review. Fixed : typo in comments Added : licence in files Added : personnal tags on comments + <WTF??> : Refers to something that is unclear for me so that I can't fix it + <TMI!!> : Too Much Information/Comments. This is my opinion, if everyone agrees we remove some. Personal Note : * I choose to use """ for class comment and # for other function comments. * TODO stuff is good, but please dont use the doc syntax (""") for drafts :) * Comments are usally before the function definition not under
* add missing command
* Add : mongodb retention module
* Add a new test program for livestatus benchmarks
* Initial upload: jquery-ui-bootstrap
* Start of a new branch, webui-develop
* Add : mongodb module for the arbiter, to load hosts object from it
* Add : skonfui: raw addition for discovered hosts
* Add : SKONF forms for discovered hosts. Need to get the action page now
* Fix : flaw on multiple date and multiple timerange
* Add : skonf : autocompletion for host tags
* Enh : make the autocompletion lib common
* Add : plug the form for the discovery of new hosts with nmap and the workers
* Fix: some typos
* Fix: Performance Data display bug @ mockup, thanks Nap
* Fix : (reported by : lminoza) corner case with between date in multiple timerange timeperiod
* Fix: typo
* Added script to install all plugins and addons
* Fix umlauts in german timezone
* Added support for check_nwc_health (need to be tested on centos/redhat)
* Add: Dashboard mockup
* Add: css class .hide
* Fix : other service packs
* Fix : mysql service pack
* FIX problem for prerequisites in install_check_emc_clariion
* Added support for check_emc_clariion plugin
* Added support for check_mongodb.py plugin installation
* Add : real services in the EMC clariion template
* Add : some business_impact templates
* Clean : host templates
* Add : end of mongodb service pack
* Enh: Sidemenu @ eltdetail mockup
* Add: New main navigation (pure CSS3, yeah)
* Add : mongodb service pack. Need to finish it
* Add : helper script for creating a sample service pack
* Add : pop3(s) service pack
* Fix : smpt pack services
* Add : imap(s) service pack
* Fix : reorganize the templates by creating a services directory in them, and factorize some like http/https inthe same pack
* Add : skongui can now dump the discovered hosts in pending
* Add : mongodb insert capabilities for the discovery
* Enh : get out most of code from shinken-discovery into a real class, so the skonfUI will be able to use it :p
* Add : skonfUI worker launch
* Add : first pages for the discovery page in SkonfUI
* Fix : (reported by : puisea) kill all sub process action tree on unix
* Fix: class Items needs a __contains__ method, otherwise the "in" operator doesn't work. (and regenerator doesn't link servicegroups with services correctly)
* Add : make the skonfUI run. Lot of duplicate from webui, first we code, then we factorize :)
* Add : first attempt for the skonf daemon. Don't loose your time in running it, it doesn't work from now :)
* *Fix : VAR/RUN error in the init.d script *Add : if address is not available, ip_tag module take the host_name
* ENH do not use the internal self.items when deleting an element from Items
* Code Review. Fixed : Bad indent due to an auto replace of \t with spaces
* Code Review. Fixed : typo in comments Fixed : indent in some .sh (please choose \t or spaces but no mixing) Added : licence in files
* fix : last notif ways test
* Fix :(reported by : lminoza) too much notifications for a contact with multiple notification ways, all where send when just a part of them was able to pass filter
* Fix: separator can be blank or semicolon for WaitObject header
* Fix : (reported by hobgoblinsmaster) missing time import that make queries crash
* Add : akcp template. (temperature and humidity probe)
* Add : netapp template that is using check_netapp2
* Add : linux template is now with Manubulon SNMP
* Fix : remove useless old glpi importer module
* Fix : (by sduchesneau) global command dispatch problem
* FIX missing perl module
* Added simple test script to install all stuff
* Add : dispatch the discovery rules into the packs
* Fix : discoveryrule name duplication
* Add : network equipement commands
* Add : use check_hpasm instead of check_hp_bladechassis in the templates
* Added support for pnp installation on redhat/centos (need testing)
* FIX remove an annoying debug print statement
* FIX a second typo in the livestatus database exception class
* FIX classname of a livestatus database exception
* FIX make Regenerator a new-style object, so we can inherit with super
* Add: Log mockup
* Fix: Issue #104
* enh: eltdetail mockup
* FIX missing dependency on redhat/centos for check_mysql_health installation
* FIX bad epel-release version
* FIX : missing wget for centos base installation
* Added support for check_oracle_health installation for redhat/centos (only tested on 6 branch)
* Added check_wmi_plus installation support for Redhat/Centos (need testing)
* Added check_esx3 installation support for Redhat/Centos (need testing)
* enh eltdetail mockup
* Replace print by logger calls. Looks better?
* Remove a double assignment of the logger
* Add : HPAsm dicovery rule and check. Also add HPblade check and a procurve template
* Add : HPBladechassis discovery rule
* Added support for nagios-plugins installation for redhat/centos (only tested on 6 branch)
* Add new css style
* *Add : new way for nmap discovery output. Now there is no more a big mapping pass. It will output what it can, and it's for the discovery_rule do do this job now, it's far more flexible (and need far less code!) a BIG thanks to all folks that send me sample xml output :)
* Add : simulate mode for the nmap disco wrapper, so we can ask xml outputs to users, and then simulate it easily
* Add : do not have a template is no more a critical error, jsut a warning. So the user can just 'tag' hosts without fearing to manage conf first. this can be done after
* Fix :(reported by Andreas) Receivers broks were missing
* Fix (reported by titilambert): catch Pyro.errors.TimeoutError in satellite.py too
* Code Review : beginning of typo fixing. Feel free to (dis)agree
* Add : some exchange templates
* Add : add the complex group management but for srv templates on host template. Should rename the complex expression functions name now it manage hostgroups AND templates :p
* fix: pyro error handling
* * Add : (reported by : MINOZA, Landy) multi-layer management for serice template on host template. So if you apply a service on layer 3 and your host inherit from layer1->layer2->layer3, it will inherit the service. * Fix : bad setup with setup.py (yes, AGAIN problem with that script....) for packs
* * Add : '+' in discovery rule management, so you can 'add' something, like a template. * Enh : change sample discovery rules into a host tag based instead of a service based one
* Enh: Add External Authentification for WebUI
* Add : active directory DC template
* Add : IIS template
* Add : windows template
* Add : cut templates.cfg into several pack files
* Fix : put all man authors. Thanks to you guys :)
* Add : Michael Leinartas to the THANKS file
* Add : macros file in the packs
* Enh : cut commands.cfg into packs file
* Add some comments
* Now we can change some default values according to the README file
* Add : start to cut commands.cfg in the packs
* fix help message
* Add : directory pack in the etc for service packs. Need to get commands and host templates in it too, so ti will be easy to activate/disable a pack if need
* Fix : shinken.sh add proxy to all wget calls
* Added shinken header for license
* Removed unused folder
* Updated README file
* Added check_wmi_plus support (debian only at the moment)
* Fix : Service cache was bad structured. Should be ok now
* enh: sidebar @ eltdetail mockup
* Add sidemenu and other stuffz
* Enh : cosmetic change, there are now lot of options (greats :) :) ) and so in multilines it's easier to read and copy/paste
* Now retention is enabled by default at installation time (Pickle)
* updated readme file
* Added support for check_mysql_health plugin (only for debian like distro at the moment)
* Clean : webui problems page with less borders
* Clean up man pages
* add markdown source for shinken-admin manpage
* Regenerate manpages to correct troff format
* Fix : change sourceforgetrac with github in tracebacks
* FIX #343 incorect field separator in split
* Add : (by Seb-Solon) new capability for ndo/mysq : use in database intance_id lookup if need, like for merging nagios and Shinken in the ame ndo database
* Add : (reported by : foobar1111) arbiter match only hostname, and not fqdn. Now it try fqdn, and then hostname
* FIX missing nmap package required for discovery
* FIX some folders permissions and group
* fix : forgot the last test in the automated tests
* Fix : (reported by : twellspring) escalations were not inherited
* FIX usage, output redirection and apache secondary group for multisite installation
* add z-index to navigation mockup
* FIX missing parameter for external commands and wait livestatus queries
* FIX add default configuration for multisite
* First attempt to add support for mk_multisite
* FIX htpasswd.users path in pnp4nagios.conf
* FIX pnp4nagios was not fully integrated with shinken. This is now fixed
* FIX package name for lsb-release
* Fix: wrong html tag
* Fix bug in eltdetail mockup
* add zebra efect eltdeatil mockup
* Removed bad extension for macro
* removed unused code
* FIX fix macro extension
* Added support for pnp4nagios installation
* typo
* FIX : home directory was not created
* FIX : plugins dir was not correctly relocated
* Updated README file and usage
* Added support for check_oracle_health plugin installation (only for debian like distro at the moment)
* Enh: slider. we don't need on/off background images
* Del unused icons
* New slider images for the eltdetail mockup
* aligned span element at eltdetail mockup
* Oups forgot to update the usage since last commit
* Added nagios-plugins installation and check_esx3 installation (only for debian like distros at the moment)
* enh switch menu at eltdetail mockup
* Add switch menu to eltdetail mockup
* *Add : manage \; to be change in ; without cut teh rest of the line to be removed as a comment
* Fix : (reported by : Thibaut Notteboom) catch ConnectionClosedError on poller/reactionner connections
* small style sheets changes @ eltdetail mockup
* Enh : some space on comments
* *Fix : fix test_modules_nrpe_poller.py
* change log container border style
* Del: unused jscript function
* Change font size
* Add : (by Gabor Varga) change instsrv.exe windows installation way with a sc command one so it work on 2K8r2. Thanks a lot :)
* Add : dhcp template
* Add : asterisk template
* Add : hp printer service with template link
* Add : bunch of oracle services. Theses ones are using the service generators with duplicate_foreach, based on databases on the hosts
* Add : mssql services
* Add : bunch of defaults checks for mysql, esx and mssql. Need to finish the mssql services that are using it
* Enh : better performance for livestatus "GET logs" through sql-preselect
* Add : ip_tag module for change property by looking at the hostip range. the method name 'replace' should be renamed with a better name :)
* Add : (try to add) touch management in the /mobile/impacts p�ge. Need more fix :p
* Fix : testactions, we init perf_data of checks as void isntead of thinking it was done by scheduler. It's purely related to tests, no change on run
* Fix : perfdata are stripped now, so fix the test
* Fix : test_module_service_perfdata needs an update because output and perfdata are stripped
* Fix : forgot a css file
* Add : /mobile/problems page
* Fix setup.py
* Add : admins photos and links in the impact page for root problems
* Enh : stars on the mobile/impacts page
* Add : tween effect for mobile/impact page
* Fix a loop when the client initiate the socket closing
* Fix : (reported by : sprudhomme) longoutput parsing and perfdata did not follow nagios way
* Add (reported by : sprudhomme): long_output in ndo if it's teh centreon version
* *nosetest also runs xtest_ stuff. add a return otherwise hudson runs for hours
* *fix a typo in a testfile
* *add attributes "services" and "services_with_state" to livestatus Host
* *prepare a testcase for performance measurements of the livestatus logs
* enh: new navigation mockup
* Add : left/right effect on the mobile impacts page
* *Add : port option for the mysql connexion with NDO *Add : impact page for mobile
* Enh : send broks in external modules as a biglist instead of n broks. It's more efficient (X3 perf for this, can be huge time for huge conf)
* Add : ackn with expire date
* Add : first mobile login and main page
* Add : NOT operand rule in the business rules
* Fix : oups, don't touche the default conf for test and then commit.
* Add : (reported by : sduchesneau) check_shinken.py is now with a timeout by default at 10s
* fix the bugfix. (some hot advice for masochists: catch a bad cold and keep struggling with éncôding)
* forgot to import sys
* better encoding of umlauts in livestatus output
* Update layout.css (table)
* Update Thanks: Typo
* Add : /wall view is not a div based one and no more a 3d effect one
* some small style changes
* Add shinken plugin to check memory usage
* Update navigation element
* Update navigation element
* FIX : line feed
* FIX : way to upgrade for shinken.sh
* Fix help
* Add shinken plugin to check unix load
* Add : make external commands to be send as bulk from arbiter to schedulers instead of one connexion by command. Manage 10K commands in few seconds, so should be ok
* dropdown menu without javascript
* Fix: Default scheduling time for host
* fix a bug in livestatus (worst_service_status)
* Add options timeout and snmp port
* Add shinken snmp plugin
* Add : update option in the setup.py file
* Fix wrong options
* Fix example path
* Fix : test end to end typos
* add main navigation without javascript
* Add Float classes
* Added support (untested) for Fully automated nagios
* Fix : test dispatcher typos
* Fix : (reported by : Httqm) default notification_interval was one minute, 1hour is better
* *Fix : clean_previous_run call in the poller/reactionner *Fix : Pyro exception print with Pyro4 *Fix : discovery launch *Add : by default, no min worker for poller, so = NB CPU or 4
* Fix : deleting void macros even if there were none
* Fix : $$ are now interpreted as $ in macro solving
* Fix : "workink directory" ==> "workinG directory"
* Fix : "Dispatch OK of for configuration (...)" ==> "Dispatch OK of configuration (...)"
* "Waring" ==> WarNing
* "host_notification_period" and "service_notification_period" defined twice in the contact definition
* Fix : if a scheduler restart, we got problem because the arbiter did't resend it the configuration
* *replace BaseException with Exception (crash python 2.4)
* Fix : (reported by : Venelin Petkov) print in hostgroup names was a problem
* *Add : poller can now load a standard external modules like the namedPipe one, and get external commands from it *Fix : missing a Pyro exception in poller/reactionner code
* Fix: (from rootix2) catch case where service do not have imported_from from modules
* Change possition of the gesture container
* enhance login screen style
* Add : an orange outline to see where the focus is on input
* Add : password iphone like in the login screen
* *Add : next/previous image for the /wall page. Click on them make the wall "slide" *Fix : strange high behavior of the item in the /wall page, reduce the number and add some width/heigth protection
* Fix : buttons in the /flow page
* Fix : /flow page is now working. Need test on touch screen
* Add : first attemps of a /flow page. Need to rework image management to get our divs instead like in /wall
* Fix: /wall page under ipad
* Fix : miss Hvad on the Thanks file
* Fix : should not enable PNP UI by default I think
* Fix : bug on hovering image under FX
* Add Laurent Ollagnier to the THANKS file
* last line of email notification must finish by a \n otherwise it will not be sent
* Add : Multiple instance writing in the same NDO database. This try seems to work :)
* Add command buttons @ detailsite mockup
* center messagebox @ detailsite
* center login screen
* switch table to definitions @ detailmockup
* O!=0 :)
* Add new comment box to detailsite mockup
* Add : fadein detail page after 5s
* Add : fadein effect when we arrive in the detail page. So the user will focus on what is important, and will make appears clicking elements with a mousemouve. should be ok for tablet, it should not apply on them
* Add : perfometer image hovering with the graph module like PNP
* use auto-generated, absolute path for README, this fixes #76
* Handling correct query of database in synchronized mode
* Fix sender options
* Add sender option
* Add sateicon to detail mockup
* Add : last 10min it problems, and make them 'slide' in the wall page
* Add : autoslide to the wall view
* Fix : some div bugs in the wall page
* PARTIAL: added support for satelites deployment
* Fix Issue #75 (hopefully)
* Clean : wall code and style. Now w can work on 'last changes'
* Clean : snowstack code with no more useless part for us
* Ajout nouvelle classe css et centrage vertical
* J'ai remplacer les <br> par des <div>, ce qui est mieux je pense et permet d'appliquer des styles plus finement. Ça résout également le problème du même nom pour la classe et l'id css
* Add : comments in the dummy webui plugin
* Started : Handle properly several instance in the same DB
* Clean : wall page
* ADD macro for enabling npcdmod
* Add : make all nodes apears in the dep graph, but hidden one in very smalls
* ADD macro for remote start/stop/restart satelites
* ADD macro for configuring simple poller
* Now sync is based on setauthfile
* FIX : problem with remote config deployment
* Fix: Image possition @detailmockup
* PB affichage bouton de recherche
* Fix : ùake all log pass the utf8 management
* Enh : make TheWall in our normal layout
* Add : manage connexion timeout in broker and Pyro4
* * Fix : tests were broken with the dep name change * Fix : (in fact try...) to force utf8 management for Python >= 2.6 every where :)
* Add : now page rendering can be launch in parallel, and so page can now call 'long' queries without breacking all. But during a long query, we still cannot eat broks
* Makes merlindb insert host_contactgroups
* s/dependant/dependent/
* s/dependancy/dependency/
* make log message speak english
* Add : more colors in the perfometer
* Fix : for test, we allow the create_queues to be call without a Manager object
* English vocabulary and grammar changes
* Enh (WARNING : should be tested for huge load) change multiprocessing.Queue() by Multiprocessing.Manager.Queue(). Will start more processes, but it seems than teh classical Queue is not so good
* *Fix : multiprocessing Queue() seems to got problem. Rool back to a true manager management. *Add : add more perfmometer things, and colors. *Del : remove buttons on the problems page, it was a double thing with the select+action
* EVOLUTION : added new verb onerror for macros. This continue or stop on error. Also fixed a bug in delboject and add delboject support in macros
* Add : generic perfometer manager
* Fix : we got problem with pure multiprocessing Queue, so fail back in Manager mode
* PARTIAL COMMIT: added support for controlling satellites
* Add: New alertbox style @ detailsite mockup
* Change/Add some layout elements (login.tpl)
* Add : allow_html_output parameter for the WebUI
* Add : peter woodman to the THANKS file
* Add: first attempt of a wall page. Need clean
* fix crash bug when timezone set in config file
* FIX : problem with sync
* Add support for shinken configuration deployment
* Fix : utf8 names in the UI
* FIX : missing python module for skonf in prerequisites
* Started to fix duplicate entries. This should be fixed soon
* Removed output
* Fix : do not insert directive value if it allready exist ..
* Add mini menu @ detail mockup
* Add iconset for mockup
* Add address to the eltdetail.tpl
* Add a bunch of mockups
* Started to implement some modification in shinken.sh due to heavy modifications in skonf
* Add maccros support for skonf. Fix lot of bugs
* Clean up things
* Add icons @ detailsite mockup
* Fix : canvas in android
* Updating file to fit to the actual version of Shinken
* FIX : bad path for config.files
* Add : gesture canvas as smaller and visible
* *Fix : with new pickle things for command and commandcall, the pickle files were not compatible from 0.8 version. Not good! *Add : better error text when the pickle load got an error
* Fix : the last enhancement was a bit too optimist. Mush find a better way for conf identification than just ids
* Enh : when there is a dispatching problem, the arbiter send and send again the same configuration to satellites. Now it will bypass the resend of the same conf. Less verbose too
* Fix: jenkins is not happy with utf8 print..
* * Fix : memcache and redis retention modules. They were loading notifications->contacts->commands but this class got slots but no __getstate__, so it was a real problem
* Enh : the Service-perfdata module now open/close the perfdata file each second. So it's compatible with tools like Centreon that move it (and so the module can't keep a file desc on it)
* Add : first attempt of a perfometer backend. It's more a poc than a prodcode in fact, should put all of this in modules with a good and simple API
* Fix : UI page navigation should not propose page too high if not need
* Add : PerfDatas parser class that is the upper level of Metric
* Add : helper class for parsing perfdata metrics
* Fix : test_timeout was still using a Manager and not a Queue now
* Fix : (reported by : DGuenault) hack_poller_tag_by_macros was not applying poller_tag to commands, only root objects, but after the command tag inheritance, so the checks were not taggued
* FIX: default iface should be eth0
* FIX #62: htpasswd.users file not correctly updated at installation
* Change overview container scale @ detailview mockup
* FIX #61 : Misspelled module name and type in shinken-specific.cfg
* FIX : PROXY should not be activated by default
* Change the scale of the impact view divs
* Clean : useless css things
* Add : first perf print version
* Fix sender
* Fix : (reproted by : darkweaver87) somethimes we got a bad formed external command. If so, bailout and warn in debug mode
* Add : android module can now raise external command and send it back to reactionner, then the arbiter eat it
* Add missing file
* Add mail python script
* Fix : test end to end for changing Manager into Queue, so process management into thread one
* *Add : Try to check for dead queue threads. If so, give a change for the tread to restart. *Enh : change the Manager.list() into a simple Queue()
* FIX: proxy support and python-setuptools installation on RHEL/CENTOS 6
* Clean up impact view
* * Fix : android sms send module * Add : first attemps to read sms for acks
* Clean up impact view
* *add a warning to test_livestatus_db (it fails because of the daylight-time change)
* *use StringIO to read configuration files into a string (much faster with lots of config files)
* Fix : forgot a sample host file
* Fix : some utf8 stuff
* Test suite for Skonf class
* Skonf is a class dedicated to shinken configuration
* Enh : better SMS things definitions
* *Fix : module_type got not give to notification. Not good. *Add : android SMS module
* Add: reactionner can run under android
* fix typos
* fix acknowledge typo
* add module to deal with flat file dependencies
* Add : if the run/var dir are missing, try to create them in the init.d script
* Fix: graphite is not by default on 81 :p
* Add : tips on the eltgraph view
* Add : Graphite graph backend
* Add : Brok Queue watchdog for satellites, activate for Broker by default at 100000 broks to kill/restart the module.
* Add missing <p> attribute
* Add Graph Tab @ Detailsite mockup
* Add \"SOLVE THIS\"-Icon @ Detailsite Mockup
* Change h1 position @ detailsite mockup
* Fix : do not think the pnp is with mod_rewrite enabled
* Add : add graph time selection in the detail page
* Fix : PNP UI links
* Add : UI PNP module. Need to put graph call in a graph modules too
* fix encoding stuff
* fix : test end to end was bad on one cpu server with last commit
* Add : by default the poller will use all the CPUs available
* Fix: 'SOLVE THIS' highlight box @ mockup
* Initial release of a detailsite mockup with live data
* New spec file
* Add: Graphite broker backend to export perfdata
* ignore conversion errors in safe_print
* Fix : useless and dangerous str in redis module. And a strange erorrs in safe_print, I think it should be in encode no?
* Don't print newline between dot in receiver daemon
* A better safe_print for you and for me ...
* Fix : the WebUI now exit when the brok thread got a problem
* Clean : useless code and comment
* Fix spelling
* Add : better logging for warning in host/service conf, and npcd configuration too
* fix: file rights
* Fix : pyro 4.10 management
* Fix permission
* Solved Issue #15
* Fix : (reported by : lminoza) bug in inheritance if templates give only a + elements, should continue to loop and not stop here
* FIX: forgot to change the setup.py for new release
* Missing character added
* *keep multiple spaces in config files. (check_command!"args " were stripped)
* Fix : shinken-admin now get shinken config from arbiter directly
* TAG: 0.8. Go release
* FIX python files without py extension were not processed correctly
* Bunch of fix and functionalities
* Fix: "has" was missing
* Added daemons configuration
* Formating tabs with spaces
* Added support for adding new objects to config
* FIX added support for perfdata in shinken configuration for CES integration
* FIX : added support for retention in shinken for CES integration
* Fix : message at the end of installation and warn about redhat-lsb prerequisite
* Added support for Centreon Enterprise Server switch from nagios to shinken ;-). If you want to test it : - install Centreon Enterprise Server - wget or clone the latest shinken version (master branch) from github - go to shinken/contrib/alternative-installation/shinken-install - execute : ./shinken.sh -i && ./shinken.sh -z. - Push configuration from Centreon and that's all !
* Fix dashboard view
* Fix : some bugs in the topology change date access and export
* Add : regenerator can now manage topology change and update parents and sons only if need
* Add : toplogoy change flag to tell modules a change happened
* Fix: Pyro4 for shinken-admin
* Fix : exit loop when host is found
* Fix man pages
* Add shinken-admin manpages
* add a hover style for the system box
* Fix: encoding stuff
* Fix: encoding stuff
* Add: Alt tags
* Add: A fullscreen dashboard view (its only a mockup without any live data!)
* Fix some encoding stuff
* Fix: Handle incorrect value type in configuration file
* *forgot to remove leftover code before the ast commit
* * custom macros are now available as environment variables
* Fix : (reported by : Furao) typo about acknoledge/acknoWledge
* Fix : default ini files optiosn for logging
* Fix : (reported by : ScriptFanix)unknown variable for broker->scheduler lost connexion
* Added a tool that can manage shinken-specific file from commandline.This will be used in the shinken.sh script
* Fix for fedora
* Fix fedora configuration
* Fix: missing alt attributes
* FIX : fix search form apparence in a more cleaner way. Not perfect but i think it look a little bit better
* FIX : display problem in sidebar for tac. removed deprecated center tag and replaced table with div and css
* FIX : removed python 3.2 from supported versions, fix a problem in default python version
* Clean GLPI arbiter module
* Fix for state_type
* Cleanuo the system view
* Add: New System overview
* *Fix bunch of Windows related errors : * Windows do not like to fork() a process on an object that got some strange innner objects like this process... * Bad arbiter registry call * fix nagios-windows.cfg file
* Update config file for GLPI modules
* Update glpi_arbiter for plugin monitoring for timeperiods
* Update glpi arbiter module
* FIX : Wrong default python version in final test
* Fix some encoding stuff
* Fix : typo
* Add : last python version detection in the init.d script
* Fix : remove useless reg file for windows setup
* Fix : windows registery loader call
* Fix : python is 27 under windows, no need to 26 anymore
* Enh : start to remove useless things in windows isntall dir
* TEMP : more effective centreon enterprise integration .... i just need to write a function that will enable the ndo broker module with correct credentials
* TEMP : added better support for centreon enterprise server integration
* TEMP : added better support for centreon enterprise server integration
* update becasue have lot's of modifications on plugin monitoring for GLPI (remove hosts and manage all in services class
* CLEAN: clean configuration and code
* TEMP : prepare sudoers configuration for centreon specific deployment
* FIX : allow write access to nagios group
* TEMP: when using centreon do not forget to alter sudoers file
* FIX : missing file list for removing demo configuration after installation
* FIX : added missing prerequisite mysql-devel
* It is now possible to remove demo configuration after installation
* Finaly got a working nagios wrapper for tools such as centreon
* Fix : (reported by Olivier Hanesse ) typo and WebUI crash
* Add : opacity effect so if a bunch of same error is on an host, we really show only the first 3 of them, the others are in opacity hovering mode
* Enh : resize the actions dock in problems to a less huge size
* Fix : merge conflict between Gerhard ersion and my own. Gerhard one was far more readable :p
* *Fix : some tests things with Pyro4
* * fix handling of null values in template inheritance chaining
* *Allow creation of a Notification object without a ref
* *Add : notification insert in ndo modules *Fix : notifications brok raising was not filled like it should
* Add : expand by dfault the worse state in the impact page
* Add : dep tree in the impact page too
* Add : show dep graph button on the impact right panel
* *Clean : the sample configuration *Enh : Changelog for the 0.8
* Some small changes
* Change the layout to a fullscreen layout
* Add: New Dropdown- Menu
* * Change order of values in additive inheritance
* fix commands file
* Enh : changelog for 0.8. Need more work on it
* Add: changelog for 0.8. Need more work on it
* Add : no_event_handlers_during_downtimes parameter to choose between nagios and shinken behavior to (not) run event handlers during a downtime
* FIX: add missing debian/ubuntu package for sqlite db purge
* FIX: added support for $ relocate in /etc/defautl/shinken
* FIX: we were installing an incorect python mysql module
* Enh : make appears on the dep graph only interesting elements, so near the root or hosts or service in real problems. Far more redable with huge conf
* Fix configuration for Fedora
* Add : less labels on the dep graph view, only for useful elements (hosts, business ones and problems)
* Add : welcome text and error text in the login page
* Add : module for autotagging polelr_tag from a custom macro
* Add : TODO after catching exception
* BugFix Pyro4 compatibility
* I give up for quering the database only once, I will do it properly with 2 queries
* I give up for quering the database only once, I will do it properly with 2 queries
* And now it works!
* I give up for quering the database only once, I will do it properly with 2 queries
* Fix : Bug in the query
* Enh : factorize dep graph orbital cut
* Add : dep graph orbital spiner is now cut in 3
* Forgot import
* Forgot try catch
* Start to handle synchronisation of instance_id in database
* Fix : Pyro >=4.5 compatibility. (the API change since this version a bit more than I thought...)
* *Enh : change default http backend from swsgi to auto, so if a better one (paste, cehrrypy) is founded, use it instead of the simple swsgi. *Enh : give css before javascripts in the pages
* Fix : indent
* Add : /all page
* Starting to handle exception in Mysql module
* Fix configuration file
* Fix configuration file
* Fix footer margin
* add some css code for the system page
* Oops, to much diff with the real file
* Trying to handle mutiple acces to database
* Add : move the more button from left to right in detail page
* Add : less info in the detail page, with a mroe button for rarely used infos
* Add : clean do not failed, and so we can chain clean and launch all debug
* *Add : Andreas to main contributors :) *Fix : but wtf the check_mk.js file is still in the sources? I removed it twice and it is still present! Git, I don't know why you really want to keep this file, but we do not need it anymore, so thanks to really RM it :p
* Fix : notifications were brok with a non existant long_output
* Fix : trying to find an unknown contact make AD login module crash
* Fix : Pyro 4.5 change the serveur type from select to multiplex
* delete file linux_admin.cfg
* Add forgoten module
* Add tmpfiles file
* Fix: Missing alt tags
* Change tbody border
* Fix: Missing alt tags
* fix configuration file commands.cfg
* Add configuration file for webui
* delete old file
* Add : circle particule effect on depgraph view. Need more work on text, with distant not print or something like it
* modify configuration file
* Fix a bunch of typos
* modify logrotate file
* FIX : error on python devel version for RHEL/CENTOS 5
* FIX : fixed pyro module name
* FIX : Finally shinken is now working fine with python 2.6 under RHEL/CENTOS 5
* Partial support of python26 for redhat centos 5
* Partial implementation of python 2.6 in redhat/centos
* Fix : now check_distro work well with redhat like distros
* Fix : ok husdon, I surrender. You won, ad I'll will not try to make you look at utf8 stuff anymore. promise
* Fix : ok let go for a utf8 match with kenkins. Last time he won, this time I get back again and I hope I'll win :)
* fix : try to fix bad notification output make scehduler crash
* Add : more debug output for the pyro port connexion
* Add : good values for /system start date and versions
* Add : MIT tag for the border css
* fix : collumn name change in merlin ds
* Enh : better looking for depgraph box
* Add : dock effect for actions buttons on /problems
* Fix : call the system css in /system
* *fix the livestatus sqlite test (ignore sqlite journal files)
* Add: Headline and a small system overview
* *Fix : (SebSolon) catch incomplet service group members *Fix : bad message for arbiter in HA without host_name value. *Fix : arbiter can get problem in broking realm :p
* Enh : cosmetic changes to the UI
* Enh : clean a useless box in the problem page
* Add : realm information on the system page
* Enh : factorize the /system page template
* Add : other satellites in /system webui page
* Add : /system page with schedulers in it
* bugfix in ncpdmod
* FIX : added RUN var relocation in shinken default file
* Add : remove technical picture for userinfo, an put a better honeycomb one
* Add : autocompletion on the problem search field and a /lookup page for searchingthem
* Add : info about ask scheduler full brok source
* *fix a type in an import statement
* *Add : true redirect when the UI session is not valid *Add : generate initial log only at scehduelr start, not when a broker module ask a full brok
* Fix : timerace issue in a test
* Update GLPI modules for business rules
* Fix : Oups, commit a too much rm...
* Fix : fix the test_livestatus_db.py that run if launch 2 times, and forgot in jenkins
* Fix : add strip() in business rules
* Add : brok the lst_notification as soon at it is set
* Add : search form in the problems page. Search problems and impacts names too
* Add : overview in the problem page
* Add : an overview on the detail page, with a pulse effect
* Fix : eltdetail page
* Fix : eltdetail page with the dep tree in the end of the page
* Fix : python 2.4 with module maager got problem
* Add : pyro connect() timeout management for the broker
* Add : connect() timeout catch in poller/reactionner
* Update to update state of host and services
* Add : timeout management for passive pollers
* *Make the livestatus socket world read/writable
* Fix : ok, the socket hack was crashing multiprocessing (known bug) and so we must find another way..
* Fix : (reported by Vincent Riquer ) Pyro got problem in connect() and so need a low socket timeout by default
* Fix : no keep alive option for python ldap in most releases, so need to connect each request... I hate that..
* Add support for serviceextinfo
* Fix : bad message in log for an arbtier start with a spare lokking
* Add : 'pulse' effect around important problems
* Add : no tip overlay for small outputs
* Modify configuration file for WebUI
* *Derive the archives filenames from the main livestatus db
* Add delete man pages
* *Remove a needless livestatus test case
* * Rewrite the livestatus sqlite code. Now there is one database file with logging events for each day. * !! If you have a huge livestatus.db it is recommended to stop shinken and run the script contrib/livestatus/splitlivelogs.py
* Fix: Footer CSS configuration
* Clean up some templates
* Fix: Some unclosed divs
* Adds some consistency to login plugin
* Fix: unclosed div container_16
* Fix: Attribute slick-uniqueid not allowed on element html at this point
* Fix: unclosed dl
* Fix: unclosed div host_overview
* fix: removed reset of running_properties dict in module object. was raising key error configurations_errors when some modules get a configuration error
* Redirect instead of using javascript
* Adds warning when user doesn't exists
* Fix and clean up login.tpl
* Fix host and services in GLPI modules
* Avoid utf8, pandoc@squeeze not working
* Revert gitattributes
* avoid errors when manpages not generated
* Fix glpi modules
* Update glpi arbiter module
* No place for this file
* Fix : AD module crash when bad ldap entry
* Fix : was doing only one photo lookup in AD/UI
* FIx generate services in glpi_arbiter module
* Add : local log for the arbiter
* Update indent
* Fix get services in glpi arbiter
* Fix indent problem in GLPI_arbiter
* Fix for Business rules
* Update arbiter GLPI module to get services configuration
* Fix : (reported by : grim) manage flap_detection_enabled and enable_flap_detection
* Update config
* *Add : in cfg file password for users *Fix : installation was jsut all messing with run/lib dir
* Add support for hostextinfo
* Clean : the old UI session code
* Add : new way of handling cookies. Now it's a crypted way, and so stateless. Needto remove all session file thing so
* Add: change the UI default port from 8080 to 7767
* Add: first attempt of pagination system. For problem page here. Looks quite good, I love the green
* Add : Cool technical inspired image to fill the user info panel
* Fix : use the rebase statement for views
* Fix : the layout template is now up to date with the header one, with a cool use of globals() so it will be quite easy to use the rebase statement now. Great :)
* Fix : UI move all cs into a css dir
* Fix : move css into a css dir for common ones
* Removes legacy manpages
* Adds some markdown manpages
* Typo: Css instead of ccs
* Adds basic attributes
* Removing useless mockups messing with licensing
* Avoid have twice the same css in two different locations
* Add : UI login page, when the user press enter in the password field, it launch the form
* Fix : the yellow for warning was very hard to read, orange is better
* Fix : remove unitedseed uri from templates
* Fix : (reported by : Vincent Riquer) no event handlers during a downtime
* Add : userinfo panel
* Add : ldap authentification with AD
* Add : UI auth can now be done with an apache passwd file
* Fix: Remove useless webui cfg file
* Add : more clean
* Fix : modules tests were not happy about the need modules property
* Add : AD module that will get user photos from Ldap
* Add : missing auth.tpl file and add module load in the webui module
* *Add : session check in all page. If not good, redirect to login, but always with giving NO DATA. (javascript is is the user want ;) ) *Add : session save way
* Add : go to detail on impact panel, and add a close icon
* Add : impact icons are good with state icon
* Fix : remove webui daemons things
* *run the test_maintenance_period with finer time granularity to get rid of a nasty race condition
* disable pyro initialization for webui. this prevent Pyro to bind socket shinken-webui daemon.port just before bottle bind the same port for the WSGI daemon
* Added standard documentation and removed some unused code
* Now we can see the default directives values if they are not defined in the object definition. Still get an hardcoded path for shinken-specific.cfg but this will be resolved soon
* *re-introduce fake timing to the tests. test_timeout.py gets un-fake timing
* FIX: filter pyc file in relocate
* Add : auth now redirect to login or problems page
* Add : first login attempt
* Add : example in the Webui module conf for http_backend
* Fix : remove all select things in the webui, because now we are using thread. So now it's possible to use another thing than swsgi, like cherrypy or whatever you want in fact
* Fix : a text in tip was for hst only, so remove for services
* Fix : go html5, not enhanced 4 :)
* Add : AGPL headers in js
* Add : menu is now highting the element
* Add : network_service icon set
* Add : enable refresh
* Add : refresh each 1m on the problem page, but reinit this timeout each time the user select an element. So he will have time to ask action
* Add : Bruno Clermont and Stéphane Duchesneau to the THANKS file. Thanks guys :)
* Added a nicer output for status. Added config output
* *Comment the fake timings because the tests behave different on the jenkins server and my dev server
* *Fix the strange_characters_test which also needs a real timing
* *fix the modulesmanager testcase which needs a real timing
* *Simplify livestatus setup in testfiles *Use a fake time.sleep/time in test files for speedup
* shinken.daemon.Daemon.do_daemon_init_and_start do not have argument
* recovarable isn't a word
* fix typo
* bottle.run expect an integer as port value
* Typo: No need for french words in source
* Add support for RUN directory and LOG directory in setup.py. Also makes the init script now work!
* fix commands.cfg
* Fix commands.cfg file
* Fix file commands.cfg
* Add : better right top box for dep graph with infos
* Add: favicon UI
* Add : opacity hover effects on comments adn downtimes
* Fix : missing ack standard image
* Fix : the wrapper function for pages was missing args
* Add : UI : lower the lock level for HTTP at python function call, and not the whole http. so the Static elements will be delivered without lock. (they are static, why lock???). I love function wrappers :)
* Add : a workdir parameter in the nagios.cfg file for set the arbiter working directory
* Add : more clean with the clean file
* Fix : nowthe box for 3dimpacst is better
* Add : a 3d button in the impacts page
* Enh : make multibox a common element
* Enh : 3dimpact with more info box information, link and buttons
* Add : 3dimpact now get real objects name and color
* Enh : 3dimpact got now distinct files
* Work in progress : poller profile configuration
* Add : header call for 3d impacts
* Add : the info box for 3d impact is now better ;)
* Work in progress : poller profile configuration
* Work in progress : poller profile configuration
* removed addons folders
* removed addon handler as it will not be used anymore. Addon management will be handled by another script
* Add a new css class for the p tag
* New tab based menu for the comments and downtimes (without position:absolute (ugly))
* *Add : canvas+image rendering for dep graph. Looks quite good isn't it? I love html5 :) *Fix : missing pictures, and fix unreachable, was not good enought
* Add : overlay for tabs hovering
* Add : icons for host service and impacts in detail page
* Add : problems icons on the impact page
* Add : better icons for states
* Fix : too much " is not a good thing
* Add : icon on the elt detail page. Need higer resolution default icons
* Fix : helper function for icons was not returning up state correctly
* Add : icon set for servers
* Add : disk icon set and forgot database one
* Add : more icons for states
* Add : icon set feature for host and service
* Fix : now the WebUI is installing correctly. But let me say something : I HATE SETUP TOOLS a lot, but really a LOT. Why does we need to depalce in manifest.in some fiels that will nto be copied then??? We just declare them for playing football with them???
* Fix : when disable active check was done, the pending check was still executed, so the effect was not immediate. Now we change it as a dumym check with curretn value the value of the host/service
* Add : get back teh opacity effect for comments and downtimes in the detail page
* Change: comment and downtime possition ..
* Add : gesture management for the detail page
* Change: state colors
* Add : modules for modules. Will be useful for the global configuration in the WebUI (it's a module, but will need additonnal modules)
* some small changes at the login page
* Fix : remove useless webui file
* Add : missing image for WebUI
* Fix configuration file
* Fix configuration file
* Delete webui.cfg
* Fix formating problem
* Added alternative installation way
* Added a control in the update process. You should use the script from source tree not target installation folder
* Fix: missing </div> in header.tpl
* Fix: CSS - Login footer
* Add man page to admin tool
* Add : flush all ticks on problems after we ask an action
* Add : select multiple items in the problem page, and actions them
* Add : tips about full output and problem duration
* Enh : problem page can be table draw from now, can get the same things in a more clean way with div, but will do it later
* Enh : the dep tree on the eltdetail page is now one level deeeper, and will not stop for bad elements states
* Fix for thrift 0.7.0 compatibility
* Add : links in the elt detail impact elements
* Add : problem page now get a link to go to the detail elements. Can be useful :p
* Fix relocate function : the relocate source path was wrong
* Add : show only the fiest 7 impacts or services for a elt detail page. But add a button to thow all the others
* Add : make the elt detail impact/service page do not explode with too much services or impacts
* New login form
* Fix : THANKS file with real name for Thibault Cohen
* Enh : litle detail page looking corrections
* Enh : change comments/downtimes links into buttons, and add ALL_DOWNTIMES external command
* Enh : cleaning the eltdetail page, less lines, more smooth
* fix Shinken configuration file
* Add : downtimes print and delete in detail page
* Add : comments on the elt detail page. With delete icons and code
* Add : David Walsh to the THANKS file. He is a core member of mootools
* Fix init script missing directory /var/run/shinken
* Fix : tabs opacity effect
* *Enh : factorize opacity code into one common class *Add : opacity on detail comments and downtimes. *Add : nice tabs for commetns and downtimes
* Fix : (reported by : Carmelle Monkoun) pyro 4.8 configuration errors
* *fix the livestatus testcase. (no more automatic commit for logs)
* Add : ack/fix/recheck buttons on the problems page
* Enh : all problems view
* Enh : problems page, with impacts and colors
* Add : first page of all IT problems
* * the livestatus module now commits log broks to the sqlite db not immediately but in intervals of 1 second
* * create the simple-log archive dir automatically if it doesn't exist
* fix macro
* Fix macro
* Enh : larger maps and dep graph
* Add : links in the dep tree part of the detail page
* Add : links to services in host page
* Fix : missing an image (ugly I know, must find another one)
* Enh : impacts page with get back of the opacity hovering effect
* Enh : impact page and OK elements
* Fix : (reported by Hvad) bad default value when no parents in the UI
* Enh : impacts page
* fix the test_lifestatus test
* the livestatus sqlite db will now be opened in do_start() instead of init(). Now only the livestatus process has an open filehandle. (the main broker process had one too)
* Fix : box size of the detail page
* Enh : putthe importance of the elements on the heading part
* Add : a impact div that show important impacts for an element if need. Business sorted
* Add : high div box that warn the user about an important impact
* Add : show the business impact as text and stars in the host/service page
* Add : now the dep graph is now managing service elements as URI
* Add : UI service page now raise actions with no problems
* Add : first version of the /service/hname/desc page with the same code than eltdetail, so the host one
* Enh : now the detail template do not call an host but an elt
* Enh : rename ui hostdetail into eltdetail. (for future service management)
* Add : externals commands now work in the hostdetail page
* Add : recheck now command call
* Add : acknoledge problem click way. But mootools messages is not good for message+forms, we should look to another one
* Add : first version of the command launch from the UI
* Add : parallax effect in the top right banner
* Add : now got a fancy dark sky effect on the top right banner
* Enh : make known bad nodes shown in the dep tree, so the admin don't even have to expand and find the bad thing that cause him a problem. Lasy admin mdoe on :)
* Enh : now dep tree got icons with states
* Add : new images for UI
* Enh : show the dep tree for all hosts that need them, not only business elements one
* Add : first business rules print on the hostdetail page
* Enh : style refresh about dep graph map
* Add : sample about a OR rule in the host check, here for a HA router
* Fix : I missed a mk file, was not used but still called. sorry about that
* Enh : hostdetail page is now cleaner, no more actions tab, got enouth with quick access ones
* Fix : the javascript for graphs was broken. Not good :p
* Clean : a test text cas in the hostdetail page
* Add : fix a bad cut in graph javascript :p
* Add : cool tips
* Add : export dep graph into a lightbox
* Fix : nosetest is not happy about sys.stdout and encoding
* Add : top right banner now 'fadein/out' some times when it appears
* Add :I've got my on/off advanced actions :)
* Add : now services are fadein/out in the host page
* Add : swtich buttons for ths hostdetail page
* Add : services info in the host page
* Add : cool buttons
* Add : better import json for webui helper functions
* Add : top right banner with good colors on hostdetail page
* Fix : (reported by : Nicolas Dupeux) regenerator crash
* Add : top right banner. Need rename and better css style effect
* Add : protect again strange Queue access
* Add : Broker, a dump of the queue() size each turn. So we can look at bad external process
* Add : the /host dep graph now got a better log overlay
* Add : now the hostdetail page got a real data for dep graph
* Fix : (reported by titilambert) bug about linkify and templates, so need to clean search lists after remove templates
* Add : tabs to the hostdetail page
* *Add : Radial view to the hostdetail page, so we will see links and states. *Fix : bad images path on the main css. Look better now :)
* Add : hostdetail now show state with good color
* Add : now host state duration is printed ok
* Add : the print duration function is now far mroe powerful and human
* Add : hostdetail view is now better, less printed info, but still the same number printed
* Add : doc about how templates work in the WebUI
* Modify check_host_alive command
* modify shinken config file for webui
* add webui.cfg file for Fedora
* Add webui.cfg file for debian
* Add : now hostdetail code is a real one
* Add : now use real objects in impacts UI page
* Add : now real impacts get print in the /impacts/ pages
* Add : host invalid text when no or invalid host in the hostdetail template
* Add : rename criticity modulations into business impact modulations
* Add : rename min_criticity into min_business_impact for contacts and notifways. And keep a mapping for old conf
* Add : factorize old_properties_names_to_new in items.py
* Add : rename criticity into business_impact for hosts and services. Criticity is automatically mapped into business_impact in the configuration reading
* *fix external_command.py where the config setting log_external_commands was ignored
* clean : hostdetail view and dataui access
* Fix : (reported by : obiouane) missing object value is now reported correctly
* Fix : (Etienne Obriot) multiple = in macos values
* fix a bug in config.py where resource macros containing a "=" were not correctly processed. Thanks Etienne
* Fix : (reported by hvad) readme was asking to launch main.py for webui, not the case now
* Try: (again the jenkins debug, not easy to test, hard to debug)
* Try: (again the jenkins debug, not easy to test, hard to debug)
* Fix: (still jenkins utf8 way, you don't follow commit text or what? :) )
* Try: (again) to fix a notif error test in jenkins. This become to be boring jenkins. You are not fair with my holidays return :)
* Fix : (reverted) try to see why jenkins is not happy about the warning on notif
* Try: (again) to fix a notif error test in jenkins
* Fix: (a try) to get Jenkins happy with this test and all utf8 things
* Try: (or at least try) utf8 characters in bad notification launch
* Fix : (reported by: d.durieux) typo in variable name
* Fix : typo (reorted by Claneys Skyne)
* *the thrift broker used "Exception as e" which is incompatible with python 2.4
* *modify test_livestatus to respect aggressive_host_checks. Now hudson is happy
* Add a cool feature to the dummy view: the %rebase statement
* Started to make the readme file more rst compatible
* modify test_problem_impact.py so it takes care for use_aggressive_host_checking
* fix test_hosts.py so it takes use_aggressive_host_checking into account
* Initial import of the thrift broker with a sample client in python
* Fix : WebUI now work under Windows. This ... system... do not have a cool select function. And so only network FD can be selected. So now we are using a trhead and a global lock to update data and answers to queries
* mockup htdocs moved to webui htdocs
* Fix color ie gradient
* Fix: Opera, IE #header background
* Fix: Opera z-index
* Add: Possible template framing
* Fix Livestatus path database
* Fix wrong umask value 027
* Update glpidb broker to send dat to GLPI DB
* Fix get timeperiods
* Add: UI: Stylesheets classes
* Manage use_aggressive_host_checking as it can modulate host status
* Add: UI: first hack about how give pages a real host object. It works :)
* Fix : big memory shrink in regenerator code
* Fix : added missing module copy in livestatus_query.py
* Add : regenerator call can brok management in the WebUI
* Add : regenerator, finished impacts and problems linking :)
* Add : regenerator : on init phase parent/child link too for host and services
* Add : regenerator : on init phase impacts and problems linkings
* Add: regenerator, add the service status update. rgenerator is quite good now, only need some problem/impact linking
* Add : regenerator : host stats update
* Clean : regenerator code is now cut into parts. less easy to see phases
* Add : regenerator, servicegroup creation and linking
* Add : regenerator, service creation and linking
* Fix : regenerator, now hosts are available when they are ready
* Clean : regenerator, a bit cleaning of useless lists
* Add: regenerator, the merge of contact groups
* Add : regenerator, add the hsotgroups merge, and only when they are ready with good hosts
* Add : regenerator, create and link contactgroups
* Add : regenerator : fix last commit... and link contacts as it should be
* Add : regenerator : send and link notification ways too
* Add : regenerator : send and link notification ways too
* Add : regenerator, recreate contacts
* Add: regenerator, link hosts with timeperiods too
* Add : regenerator : linking host with commands and create timeperiods
* Add : regeneratro, hostgroup linking in hosts
* Fix string comparison for livestatus. None is equivalent to empty string
* Add: regenerator now link hostgroups and hosts
* Fix: regenerator last commit was too early... thanks bash my fingers...
* Add : in progress objects for the regenerator. We will 'lazy' manage things : only insert real objects when they are full and ready
* Add : in progress objects for the regenerator. We will 'lazy' manage things : only insert real objects when they are full and ready
* Add : test regenerator and first pass of the generation
* Add : regenerator class first version
* Add: UI: the second try of a twitter like businessimpact view ..
* Add: tiny version of the business impact view
* Rename configuration file
* Fix pipe configuration
* Add : host and port configuration for the webui broker module
* Add : transform the Webui into a select based daemon
* Add : bottle is now non blocking
* Add : the webui as a broker module. Was more easier than I thought
* Fix: UI: clean the static mess code :)
* Add: UI : banner in the login page
* Add : UI : common nav.css from lastest mockup versions
* Add : UI: login page and update css files from Andreas mockups
* Add : UI: dummy plugin page for example
* Add: UI : templatise the hostdetail view
* Add : UI: first python value for host detail page
* Fix man pages
* Add initSyV script
* Fix shinken configuration for Debian
* Fix manpages fo Debian
* Add: UI: the first try of a twitter like businessimpact view with a flexible width and heigh
* Add : UI: 3d impact view
* Fix : UI: host detail do not have from now static files
* Clean : UI dir
* Add : css and js static files for impacts in the impact plugin dir
* Add : UI: load static files for plugins too
* Add: UI: the impact page now load as a plugin
* Add: UI: the plugin load feature
* Add : UI: some clean in webui daemon, and export impact as a 'plugin'
* Fix : by default do not open pyro.. not a good thing..
* Add : first shinken-webui daemon. was not so fun with a sys.path management too and bottle way of working..
* Add: UI: Login mockup
* some small changes and a few new templates
* Fix (reported by: fraggod): inline comment in boolean cause an arbiter crash when lookup conf
* Partial commit for thruk installation
* Started to reference various addons
* Added some screenshots of the mockups (everybody does not have pencil installed)
* Fixed a bug in check_distros. Added support for RHEL/CentOS 6
* Fixed some bug. The installation process is now from current source tree
* Fix : UI: forgot to add the good files
* Fix : remove check mk things in the impact page
* Add: LS client Pool interface
* Add : UI : 3d impact mockup
* including a few skonf templates ..
* Remove reference to the uncommited (yet) thrift broker module and fix TSCA configuration
* Fix : remove the Thrift module from normal configuration. It's a svery specific module, don't have to be in default conf
* re added Livestatus module as it is the default interface used to talk with shinken .... do not remove it
* Fix : sched crash in the external command printing on a NO utf8 env
* first commit of meatball.ep
* Fix configuration file
* Enh : LS client for getting results
* *Fix : utf8 print in a LS test make Hudson not happy. *Fix : super() in a bad way(?) for WaitClass. Direct call is good too. *Enh : LS clietn class. Now do sync/async mode
* Fix import and module type
* Initial import of samples clients for TSCA
* Configuration sample for TSCA
* Initial import of TSCA, Thrift Service Check Acceptor
* Add : query class in the LS client
* Add : readme for the webui part
* performance improvement for livestatus queries with Limit:
* added an installation script compitable with ubuntu, debian, rhel5 and centos5. Intensive tests needed
* Removed unused files from repo as skonf will be intregated in shinken ui. Keep mockups in contrib
* Add systemd init script for Debian
* Add hostgroups configuration file
* Add configuration file for Debian
* Add default file for Debian
* remove a small, unnessesary piece of code
* Fix : (while working on livestatus asyncron...) utf8 insert log
* Add: first LS client code. Must tune this simple connect to an asynchronous way. Will be fun
* Clean : remove help function from shinken-admin, the module cmd already got one
* Add : more functions to the shinken-admin tool
* Add: UI: images
* Add: UI: some JS ..
* Add: UI: some stylesheets ..
* Add: UI: hostdetail view
* Add : shinken-admin command that can connect to an arbiter and ask daemons status
* Fix : UI: impacts view layout
* Add : UI : Meatball over manu for impacts view
* Add : UI : host view from Meatball
* Add : discovery runners timeout parameter. Set by default at one hour
* remove some debug prints from livestatus_response
* add a new test class for livestatus performance tests with a huge configuration
* improve performance of livestatus_broker's manage_initial_servicegroup_status_brok
* Enh : cut the livestatus.py file into anoter file. This time it should be ok
* Enh : cut the lviestatus.py file into numerous ones
* Add : (From Gerhard) less list, more generators for LS
* Add: bench test for LS (disabled by default)
* Clean : still put LS code in mutliple files
* Clean : begin to put LS code in mutliple files
* Clean : begin to put LS code in mutliple files
* Add: way for livestatus module to be in profile mode
* Add : better debug output in LS hook_get_prop_depythonize function
* Add : UI : templatify impacts.htm with python data
* Add : UI: header and footer as templates
* Add : first atempt for an UI with Bottle.py, ligth web framework (more a tool box). Less scary than turbogears opr Pylons/pyramid..
* Enh : move webui mockup files to a true mockup dir
* Fix : (reported by Seb-Solon) custome macros get problems in notifications
* Add : enable log by default on windows daemons
* Add : tag the version as in dev
* Add : 0.6.5 version
* Fix : windows daemons failed to launch with multiprocessing call that reimport and relaunch all
* Add : contacts to the mysql raw importer module
* Fix : (reported by: Seb-Solon) bad contact group insert in objects in NDO
* Fix : (reported by: seb-colon) bad contact group id in NDO
* Fix : (seb-solon) ndo contacts were not registered with the good id
* Add : tune the livestatus long test for bypassing initial log that take a LOT of time
* Fix : the ndo module with some new properties in program status not managed
* Add : a way so we can mix shinken and nagios/icinga ndo modules in the same database
* *Add Jan Kaliszewski's sorteddict.py *Use SortedDict in the livestatus module so that sorting is no longer necessary during a query
* Fix : ok, use the number of cpu by default will break tests. Get back to 4 by default
* Add : by default the poller will use ALL cpus of the server
* Clean : clean on scheduler output
* Clean : clean on arbiter output
* Clean : arbiter output
* Clean : arbiter output
* Clean : arbtier output
* Add : a debug option for the hot dependency module. Less verbose on arbiter
* Add : better version printing with Pyro version too
* add check_external_commands, check_service_freshness, check_host_freshness to scheduler's running_properties, so they appear in the livestatus config table
* Modify notify command
* Modify notify command
* Add Debian Man page
* Add : current_notification_number in the ndo module
* Add : last_notification in ndo module
* Add : last_state_change to the ndo module
* Fix : UI: forgot the nav.css
* Fix: add the flap_detection_enabled in the ndo status tables too. (I love duplicate data...)
* Fix : I'm a morron, not test well the last commit
* Fix : the ndo module with is_flapping value for update states
* Add : add the is_flapping data to broks and update teh ndo module so it update the value
* Fix: flapping value was too low (0.1 instead of 10), the log got a typo too
* Add : percent_state_change as check_result brok and in the ndo module
* *implement host/service attribute display_name in the livestatus module
* Fix : I forgot : the last bug was reported by Michael Grundmann
* Fix : a service for a void hostgroup and a host exclusion was reporting a bad conf instead if forgot this service
* Add: UI: some ui elements from Meatball
* Add : UI : try to look as Meatball
* Add : test about single host exclusion in a service and groups
* Add: mockup images for the services
* Add : UI: solve a little bug in problem hovering
* Add : UI: use the background from MeatBall mockup for the impact background
* Fix: UI: mockup stars
* Add : hostgroup explode for host and service dep
* Add : easy way to create a new test with all files
* Add : the criticity modulation computation in the scheduling phase
* Add : update criticity now look at modulation for getting current value
* Add : the criticity modulation objects host/services linking
* Add : criticity modulation objects
* Add : new tests for A,B,Cof: rules and a fix for the default return logic
* Add : manage A,B,Cof: rules. Need more test cases
* Add : manage A,B,Cof: expressions for business rules
* Fix: commit too early last commit
* Add : add a of: values of dep rules are a triple value
* Add : add a of: values of dep rules are a triple value
* Fix : add a check_esx3.pl default path in the discovery command
* Fix : (Reported by : Dirk Hallanzy) was not launching under XP due to some pid file creation bad mode
* Fix (reported by: cmertz): typo in VM command example
* Fix : test that do not create its own arbiter object
* Fix: protect again call on bad initialized connexions
* Fix : a spare arbiter will not try to push conf to the other arbiter
* Fix: catch pyro exception when creatin a connexion to a bad name
* Fix log in DB last check and state
* FIx glpi broker to send events in glpi DB
* Fix get datas from GLPI
* Add config for GLPI module arbiter in config
* Get contacts from GLPI
* Get Commands from GLPI
* Add new module arbiter. Get config from GLPI with webservice
* Add : a way so external modules can send us a traceback of their crash before dying. From now only LiveStatus us it
* Add : LS : a debug_queries parameter if we do nto want to log queries
* Add : add a debug mode to livestatus module
* Fix: (reported by : Denis GERMAIN) service with no description cause an host problem in linking phase
* Add Fedora spec file
* Create directory for debian package
* Rename fedora directory
* Fix : (reported by : Seb-Solon) manage utf8 in host and service perfdata
* Fix: missing adding in git the tests
* Fix : (reported by: Denis GERMAIN) serv ice with no description in a servcie group was causing a crash
* Fix wrong path in manpages
* *Fix: (reported by : Ronny Lindner & Markus Elger) LiveStatus crash in log parsing. *Fix: bad conf were not detected due to a variable name overlapping
* Fix : (reported by : Ronny Lindner) fix status.dat module with utf8 characters
* Fix : status.dat test
* *Add : warn about scehduler with no broker on it *Fix : host tests were bad since the change of how we warn about bad realm conf for hosts
* Enh : some comment fixes
* Fix: (reported by :Markus Elger) bad host count in realms
* Fix: (reported by :Markus Elger) bad host reaml conf were not detected
* Complete the python 2.4 compatibility fix
* Fix: LS test about logs, initial logs make it false
* Fix: initial log states for hsots and services
* Fix indentation and add config example for mysql hosts/services import
* Fix: elapsed time badly computed in arbiter daemon when external command enabled
* Add a new module to import configuration data (hosts/services) from a MySQL database
* Add : now poller/reactionner only ask for checks/notif/event that they can manage for module_types
* Fix: suppl_socks given to handleRequests must not be by default None otherwise "X in None" fails
* fix/enh: 'shinken' init script:
* clean: mixed spaces/tab indentation
* Fix: remove criticity from retention data, it was stupid to put it in it
* Fix: protect broker agains module taht ask for full instance init about unknown scheduler
* Fix : do NOT resend already send broks to external queues if internal ones are low (like the ndo one)
* Add : initial_broks_done brok to say to modules that the init phase is done. Will help to lasy link objects in modules
* Delete configuration file
* Add shinken configuration for Fedora
* Add shinken specfic configuration for Fedora
* Fix: (reported by : Olivier Hanesse) nrpe module did not tag the check_time value for checks, and so pnp and other tools were not happy. BP rules were alike
* Add : LS: lookup hostgroups and servicegroups by name when creating them isntead of the id that can change if the arbiter is restarted with a new conf
* *handle a sys.exit() more cleanly (affects python 2.4) when calling the arbiter with -v
* Fix: livestatus with multiple instance now clean in a good way services
* Fix: (reported by Olivier Hanesse) in livestatus the hostgroups values were teh last one seen. Must merge them instead
* Add Discovery man page
* Add logrotate configuration file
* Receiver man page
* Update shinken Spec file
* Add Shinken Spec file for Fedora
* Add systemd init script
* Add systemd daemon init script
* Update arbiter anpage
* Fix : the old-objects cleaning pass in LiveStatus was full of bugs with the last patch. I need more coffee
* Fix : (reported by Markus Elger) LiveStatus module did not clean previously added elements before recreating them
* Add : UI : reorganisation of elements so we can create anotehr html page
* Fix : test about host rescheduling was breack with new schedule way if a valid next_chk was here
* Fix : (reported by Markus Elger) the arbiter get a bad working directory when installed. So now go in the /var/lib/shinken before starting the arbiter, so its happy again
* Add : classic changing values like active check or not in retetnion. Will override configuration value, but the guy already touch it once, it can do it twice if he mess up
* Fix : forgot to save service file in the last commit...
* Fix : (reported by Markus Elger) add next schedule date in the retention data
* Add: create a fedora repo for David
* Add : UI : now the >> image stay for selected impact elements. And some IE8 fixes. Did I say I didn't like IE. now it's done
* Add : UI : forgot >> and << image for impact view
* Add : UI : add new impacts and indent code
* Add : UI : add >> image inversion when selecting an impact
* Add : UI, only show >> image when hovering the impact
* Enh : Reord problems
* Enh : UI redindent the html code
* Add : UI, star and other good looking indicators
* Add : UI can clic on impact to show problems
* Fix: forgot to increase version number..
* Fix: (reported by : Olivier Hanesse) bad realm configuration was not detected for satellites
* Fix : better do a true commit than a revert. Need to read a book about git :)
* clean: hostgroup_name expression parsing better
* Fix: regression for service with no host nor hostgroup. The conf will still be valid
* Add: UI impact view mockup
* Add : mockup ui with the impact view
* Add the REUSEADDR flag to livestatus's socket. Thanks Olivier Hanesse
* connection is the english word for connexion
* Fix a bunch of typos
* clean: unused variable
* Fix: parsing of complex hostgroup_name possible attribute of service definition
* Dsicard empty values in configuration to be in sync with nagios behavior
* temp fix for windows
* Fix : (reported by : Olivier Hanesse) fix a fixed 60sec interval for checks
* clean/enh/fix: use relative paths + use by default current user/group for executing all daemons:
* Update Change log for 0.6
* Fix : (reported by Ronny Lindner) manage the not host expressions for services
* fix: service: hostgroup_name parse error
* *Fix : make retention from 0.5 load under the 0.6, was caused because we moved the CommandCall class and pickle call for whole path classes. It begin to make me angry this pickle... *Add : more logoutput for scehduler when it kill a module
* Fix : archive files were with one day offset
* Fix : discovery script
* Update Changelog for 0.6
* Fix : Ok, bad bash up for my last commit (wanted to launch tests, launch git commit...). Was fix, bad escalation name are now catch. And this one is : and if it's a '', it's not a problem
* Enh : cosmetic changes
* Enh : cosmetic changes
* *Fix the livestatus module so that multiple external commands in one request are possible. (thruk uses this for mass operations)
* clean: partially revert 48bd47c9a0a1806c98d575e9a8d48de7eef42131
* clean: factorized __getstate__ & __setstate__ in Item
* Fix : change teh default criticity from 3 to 2, so it let a higer place for critical values, instead of more for lower ones
* clean: imports of all objects
* clean: changed init_running_properties to class method. better
* Fix : (reported by : Denis GERMAIN) contactgroup without members raise exception if an host or service ask for it
* *Allow a sequence of external commands in the livestatus module
* *Improve livestatus waits. Now in order to watch a specific object for changes, no longer will the entire list of objects be scanned first
* Fix : remove old discovery.py script
* Add : +x to stop_receiver.sh
* *Fix the tearDown method in test_livestatus, so it cleans up an ugly hack in the Livestatus class after every test
* *Fix a small bug. (LiveStatusQuery needs a tic proprty)
* *Remove som crappy debug-prints
* *Fix the livestatus, so that host_name and service_description are shown correctly for downtiems and comments. *Add another test case for this
* *Repaired the status_dat module, which crashed when downtimes/comments were set
* *Add a test file for livestatus wait-commands
* *Implemented the Wait-commands in the livestatus module. *Fixed some bugs in downtime and comment handling in livestatus
* Add : (David Guenault) a way for people that install shinken lib in non standard place (like /opt) to get it working for python path
* Fix : catch badly form answer from nrpe daemons
* Fix : some problem with bad runing nrpe calls(close connexion and co) and less cpu used
* Fix: broker daemon: bad variable name
* Fix: (reported by : Raynald de Lahondès) for python2.7, if shell launch, do not go in shlex split pass
* clean the clean test
* clean: the config clean() :p
* clean: config: while reading it
* clean: factorized 'members' & 'unknnown_members' within Itemgroup
* clean: Itemgroup(s) (& subclasses) now inherit Item(s)
* *Add icon_image_expanded to the livestatus module
* clean: typo
* Fix: close was done on bad object for log
* *Catch an exception when deregistering Pyro. (When the scheduler was started as the only process and no communication happened, then ctrl-c showed an ugly stacktrace)
* *Add the path of the current script (ex: bin/shinken-arbiter) and ".." to the list of paths where Python looks for shinken modules. This allows to call the bin-scripts from any directory
* clean: factorized init_running_properties in item.py
* fix: mess with branches /o\
* Add/Fix: check for duplicate command_name
* fix: bad prev commit.
* clean/fix: factorized configuration_(warning|error)s within Item & Itemgroup
* fix: default config had duplicate command name define: check_http
* add/fix: Commands.is_correct: can have duplicate command name, that's bad
* Add: keep filename for each object declaration for debug purpose on bad config
* Fix: forgot inner_class for Commands
* Fix/Clean: move of CommandCall to shinken/commandcall requested more attention
* clean: Command(s) now subclass Item(s) as any "shinken.objects"
* add/fix: often forget to add new files :/
* clean: consistency on objects: moved CommandCall from to shinken/commandcall
* Fix : nrpe module got problem for parsing since unicode, the shlex was not happy with it
* Add : human_timestamp_log option so the log will output time as human readable format
* Add : make the local log rotate with the logging module, max keep file at 5
* Add : the crash catching in the log for arbiter
* Add : the crash catching in the log for broker
* Add : the crash catching in the log for receiver
* Add : the crash catching in the log for poller/reactionner
* *Fix : enable by default local log, should be enable by default, and if the admin want it down, he can. *Add : if teh scheduler die, logthe traceback !!!
* Fix : (reported by Raynald de Lahondès) if a hostgroup member got no host defined, create a dummy service for no host, so failed
* Fix : remove a bad call to iexplore to the windows install script
* Fix : update Eric Beaulieu thanks file entry
* Add : (Eric Beaulieu) new install bat script for Windows
* Add : new test in the nested groups, about an host delcare in the low group, and a service apply on hte higer group. and it work of course
* Add : new test in the nested groups
* Fix : forgot to declare teh last new test
* *Fix : better print of service taht will be disable for bad hostgroup application *Add : Add test about nested hostgroups
* Fix : bad UTC hour for scheduler
* Add: discovery cfg files to the etc, and discovery try to look at the default discovery cfg
* Fix : add +x to discovery
* Fix : move the discovery into the bin dir
* Fix : in a rare case, the picle need to call the __init__ of notification before the __get_state__, but it will call it without args
* Rename README to README.rst and add a README symlink
* Fix : the test end to end conf for result modulation
* Fix : the default conf example for result modulation
* Enh : updated Raynald de Lahondès line in the THANKS file
* Fix : (reported by : Raynald de Lahondès) bad hostdep definition (link host) was badly detected
* Fix : LANG parameter for shinken init script
* Tun : change parent_dependencies and child one into a set instead of a list that we should keep uniq
* Fix : default conf got a double template problem
* Fix: the hudson server launch ascii env, not a good idea for utf8 output..
* Fix: the hudson server launch ascii env, not a good idea for utf8 output..
* Add : internal modules for broker are now restart when they die
* Fix : utf8 management in the db class
* Fix : forgot a new test
* Fix : inverse last init try, so if an exception is raised by queue, this property is still created
* Fix : the * member was wrong in service calling hostgroup of this kind
* Fix : the schedule immediate check now work without having to force it
* Fix : raise id of class for the creation when we load existing objects
* fix : protect against bad event handler or notif
* Fix : protect against actions witout workers
* Clean : still cosmetic clean on satellite code
* Clean : still cosmetic clean on satellite code
* Clean : cosmetic clean on satellite code
* Enh : remove useless level in self.q_by_mod
* Enh : rename wroker_modules with an explicit name
* Fix : call for on bad call for dict
* Clean : a little bit satellite code
* Add : round robin dispatching way between the worker of a module for the satellites
* *Fix : change the way worker got checks, now each one got a Queue(), so we can know which worker take the action *Fix : and so if a worker die, we can re-queue the action into other queues()
* Clean : a bit the arbiter output and the satellite code
* Fix : test satellite was too quick to new ping thing
* Add : set a check_interval to satellites, so we do not try every second to ping them, each a minute is quite enouth
* Add : manage a possible return from Pyro
* Add : slots for commands and commandcall objects
* Add : add __slots__ to checks, should be good for memory :)
* Add : sending USR1 do a memory dump of the daemon
* Fix : get work with Pyro3 :)
* Fix : get a real debug output for no pyro installation
* Fix: under Pyro4, a bad socket close can make a socekt being in TIME_WAIT, so retry during 30s before die, so we are sure it's a real socket or not
* Manage Pyro4.2 and higer
* Fix : remove a dangerous print of utf8 char for hudson
* Fix : reset some file rights
* Fix : bad start was creating 0 mode dir, so bad to tar then :)
* Fix : correct the check launch under python2.7 with utf8 char
* Add : test and fix about bad notification named
* Fix : manage no notification period for hosts too
* Fix : manage void notification_period for services
* Enh : little tuning about callign time.time() when it's useless
* Add : print the sleep_time as a load average, so will smooth in one minute average
* Fix : manage define with spaces before define like Nagios, and solve a regression in NodeSet pass with unicode elements
* Add : track of sleep time in scheduler, for future 'load' indicator
* Add : force LANG=us and UTF8 in init scripts. No sense admin can set another langage for system and hope for tools to work
* Fix : print the min/max lat en float too
* Add : show min/max of latencies, and with a 95percentile average
* Fix : protect against bad type compare in stalking
* Fix : crash in stalking for utf8 problems
* Fix : now init.d scripts runs under ubuntu AND centos/redhat
* Fix : less debug output in the scheduler..
* fix : made the hack_commands_poller_tag_arbiter module less verbose (a bit)
* Fix : (reported by Denis GERMAIN) set by default retention update inverval to 60 minutes
* Fix : Last commit was reported by Denis Germain
* fix : retention_update_interval is in minutes, not in seconds..
* Fix : I forgot the ndomodule by default, not good
* Fix : bad sys.path management for ndo module, I hope this time it will be good
* Fix : manage EOFError about external Queues for the arbiter
* Fix : missing print debug in log
* *Fix : better manage of utf8 in output and external commands. Now even spacy characters from Thruk are ok. PS : I hate encodings thing :) *Fix : init() external modules unless when we start them, so in the arbiter the file descriptor for queue will not be deleted in teh daemon pass..
* Add : when a hook point faile,d set the module to restart, not to kill
* Add : test about cleaning too much broks
* Add :test about deleting too much notifications
* Fix : clean queues failed with event handlers
* Add : test for the comming clean queue rework
* Add : clear Queues() of dead external modules
* Enh : remove useless print
* Fix : manage missing property from previous retention files
* Enh : make the queues() for external modules create oly when we launch the external commands, so less risk of 'oups I did again close the filedescriptor'
* *Fix : all external comand are not pass in a utf8 pass *Clean : the module management now need an explicit call to create external module, so for arbtier it's easier to manage, and mroe clean
* Fix : do not double init modules in arbiter, just launch external afterward
* Enh : boost a little the livestatys test by disabling useless env macros
* Fix : module killing under windows
* Fix : action launch under wndows 2.7 python version
* *Fix a bug in test_module_hot_dependencies_arbiter, now cross-platform tests run without error
* clean: factorized properties of Daemon
* fix: missing else:
* clean: factorized check_and_del_zombie_modules in daemon.py
* clean: modules_manager better to empty list by del l[:] than to re-affect new list
* clean: factorized macros & running_properties within SatelliteLink
* fix: modules manager: to_restart badly used
* fix: bad work/pid dir can because of directory not readable
* Fix : bug in exec for python 2.7
* *Fix : too much loop in daemons! do_loop_tunr must WAIT a little! To managed in the main_loop part I think. *Add : better test of named pipen, with huge send *Fix : protection against bad Pyro error
* Fix : protect agaisnt queue problem or missing scheduer entry in satellite
* Fix : missing a utf8 pass in the config reading
* *Fix : get back no chown on setup.py if --root set for Packagers *Fix : bad string catch in test_end_to_end
* Fix : if the scheduler gotthe same conf but got a wait a new one before, it do a zombie scheduler then...
* Fix : uncomment the clean after the test end to end
* Fix : manage the configuration as utf8 files
* Fix : typos and missing default properties in the ini files
* Fix : get back to no local log by default for schedulers
* Fix : (reported by : Hienz Michael) do not close local file in the daemon pass
* Fix : do not give to daemons modules instances that got problems
* Add: protection against too quick module restart. Now it is with a delay of 5sec
* Add : auto restart feature for modules
* Fix : add the test_modulemanager.py in the automated tests
* Add : killing pass for external modules if they do nto want to exit in a clean way
* Fix : protect against bad character from Nagios retention file
* Fix : make the modulemanager log errors
* Enh : do not look for archive log for each brok..
* Enh : make the log module an internal one, do not need to be external at all
* Add : protection about bad Pyro return type (mispatch pyro version for example)
* Clean : still factorize some pyro exceptiosn code
* Clean : factorize some pyro exceptiosn code
* Add : really cehck the return of ping command for satellite
* clean : remove useless cpickle pass in send conf
* *Add support for multisite's double-requests (extcmd+query) to the livestatus module
* Fix : (reported by : Denis GERMAIN) Nagios take check_period =24x7 and check_interval to 5 by default for hosts
* Add : Raynald de Lahondès and the Sibio team to the THANKS file
* Clean : get arbiter module code
* Add : the hack module thing for arbtiers and especially command_file. Was tricky
* Add : named pipe module, so now nagios.cmd can be distributed with receiver, and less hard code in external commands (should be clean)
* *Add support for multisites double-requests (ext. cmd + query) to the livestatus module
* Fix : (Raynald de Lahondès) setup.py for bsd systems
* *Add statistics for the livestatus module (multisite needs it)
* Add : check_hpjd rule with printer discovery
* Fix : test for service and host good definition with the new no contact nor host way
* Fix : error message with unknown host for a service
* Add : service without host will be just droped, like Nagios
* Fix : forgot to declare last test case in auto test. Ok, this time we are good ;)
* Fix : forgot the last commit test case
* Fix : Nagios allow elements without contacts. Do alike
* Fix : all logs are in UTF8, that's all
* Add : protection against adding again and again the same actions ifthe scheduler ask it, like for orphaned checks
* Fix : still fixing hot dep module under windows
* Fix : fix hot module under windows test. (at leat I hope...)
* Add : cannot think integration tests got database ready
* Fix : test end to end by lost the discovery dir in git
* Add : discovery merger option to run only what we want in the arguments
* Fix : do not generate service donf with discovery if the host conf was not done
* Add : real write of configuration file for discovery merger script
* Clean : discovery merger script code
* Add : creation_type and writing properties to the discoveryrules
* Fix : (Reported by : Julien Toscano) bad launch with bin/launch_all.sh
* Fix : discovery rule with disco data with , should be splited
* *Add : vmware discovery runner command *fix : vmware discovery runner fix to bail out at check_esx3.pl errors
* Add : by default, strip fqdn from discovery names
* Add : vmware discovery script, that output ESX data
* Add : macro overright on the merger call
* *Add : made the nmap wrapper use a temp file and call by itself the nmap
* Add : the discovery merger now launch discorun commands
* Fix : do not bailout in error for a service apply on a void hostgroup, it's not a crime
* Add : a launch command to discovery run with an EventHandler
* Add : discoveryrun definition and linkink for commands
* Add : first discoveryrun Class
* Fix : move all database connexions rule in a place
* Add : discovery rules for ESX host/VM
* Add : lot of standard network discovery rules
* Add : sample discovery configuration files
* clean : comment unless print in discorules
* Add : the not rule matching in discovery rule
* Add : more debug in discovery-merger script
* Fix : delacre teh new discoveryrule test
* Fix : discovery rule matching logic
* Add : matching all disco data for disco rule
* Add : is_matching function for discovery rule and key/value pair
* Add : matches rules management for discovery
* Add : look for presence of our first rule
* clean : useless config.py comments
* Add : manage/clean and all for discovery rules
* Add : Discoveryrule Class
* Enh : code of config
* Add : first discoveryrun and discoveryrule objects
* Clean : remove useless option of nmap runner
* Add : first version of the nmap discovery runner script, with discovery output
* Clean : remove the old retention way with the new one
* Fix : the old pickle scheduler retention modulme is now compliant with new moduel way, with a support to old call
* Fix : the nagios retention module is now with new retention module style, and a little less hacks
* Add : test for the nagios retention file module
* Fix : the memcache retention with the new retention way
* Fix : the redis module with the new retention method, (and a test)
* *Fix a bug in external command processing. Passive checkresults need last_chk too
* Enh : change the scehduler retention by the generic one
* Enh : backport code from pickle module to scheduler as helper function for other modules
* Enh : backport code from pickle retention module to the scheduler as helper function for other modules
* Fix : declare the test_module_pickle_retention_arbiter test
* * Fix : remove hook_late_configuration from BaseModule, if a module do not have, it will be killed. * Add : retention for Arbiter, based on the generic pickle one
* Add : hint about some modules in the defaut conf
* clean : generic pickle module
* Enh : rename the broker module in a generic way
* Enh : make the retention code for broker more generic
* Fix : delare in tests the new pickle broker one
* Add : pickle retention module for the broker
* Fix : and protect agains unnamaed host template
* Fix : protect against host with no host_name
* *Fix a bug in socket handling of daemons. External cmd pipe cannot be treated like a Pyro socket
* Add : now the multi broker dispatching is a smart and smooth one , instead of dumb random
* Enh : made the dispatching with multiple broker test with multiple schedulers
* Add : allow multiple brokers in a realm, and will make one scheduler be send to only ONE broker at a time, with a random distribution
* Clean : realm code
* Enh : clean useless method in realm
* Enh : remove useless parameter in realms
* Add : test case of reactioner taking the actions with tags
* *Fix : reactionner_tag and in Notification and EventHandler creation *Add : reactionner_tag definition test
* *Fix : possible problems with Queue() in worker that is not available, and so problem. *Add : reactionner_tag(s) like the poller one
* Add : receiver script for windows installation
* Fix : update test end to end test with receiver
* Add : receiver launching scripts
* Clean : receiver sample conf
* *Enh : make the hook_point in the daemon class *Add : the arbiter get external commands from the receiver
* Fix : bad configuration send to receivers
* Add : configuration is dispatched to the receivers now
* Add : made the arbiter ping the receivers
* Add : first version of the receiver daemon
* Fix : try to fix test_module_hot_dependencies_arbiter.py under windows
* Add : new daemon, the receiver, port 7773
* Add : make the nsca module available for the receiver... Ok, this one is still not here, but it will
* Fix : renamed nsca module becuase it will be load from arbtier or receiver
* Add : now a deamon load all modules, but keep only the daemon one. So we wil be able to use a same module for numerous daemon, like an arbiter and a receiver one
* Add : filter module with daemons in the properties defined
* Fix : forgot a module last commit
* Enh : prepare the new module way of detecting
* Fix : subprocess and Windows do not want to close fd
* Enh : use list comprehension instead of functions
* *Fix : I forgot some part of the Denis patches... *Fix : Unknown value *Fix : protect against bad arbiter connexion
* Add : (Denis GERMAIN) check_shinken plugin and interface in the arbiter to get data
* Fix : non saved file in the last commit :p
* Add : set 'None' as the default poller_tag value, so a poller can get untaggued AND taggued checks
* Add : orphaned test to all tests
* Add : raise only one log for orphaned instead of xK useless logs
* Add : now when a poller/reactionner take a job, is name is save on the check/notification/event handler object
* Add : first orphaned test
* * Add : test for passive pollers * Fix : passive poller to not try to connect to schedulers anymore
* Fix : get back LiveStatus as default
* *Fix : the super() do nto work with non new style class, so the ArbiterInterface should be at least a sub class of object *Fix : with new pythonpath, the status.dat module failed, now better
* fix: super not ok for Pyro.core.ObjBase
* Fix: Pyro4: ObjBase is gone so can't use delegateTo obviously.. more simple too finally
* Fix : (Rémi BUISSON) use grep instaed of sourcing nagios.cfg file
* Fix : (Rémi BUISSON) source the nagios.cfg file without errors
* Fix: shinken default: ARBITERPID could contain invalid data because of comments
* Fix : bad broker conf with test_end_to_end ha test
* Fix: try to fix init.d scripts
* Fix : I don't know what pyinstaller is, but it's not shinken
* Fix : with the no-sys.path change, now pickle is not happy at all for loading unkown classes
* Fix (Rémi BUISSON) missing PATH in the init.d scripts
* Cleanup: scripts in bin/ needed to modify sys.path for importing shinken if shinken-top-directory was not in PYTHONPATH Fixed by using imp() to import shinken from either the current dir (for the case it is shinken-top-directory) or the parent dir (for the case the current dir is bin/)
* Add : test case about get checks from poller to scheduler call
* fix : bug introduce with last commit :p
* Fix : bad default tag comparision
* Add (reported by : net-spider): remove instructions on the README file
* Fix : (reported by capibaru) add a strip pass before loading cfg files
* Fix : (Rémi BUISSON) LSB for init scripts
* Fix : (report by : Rémi BUISSON) missing strip for sub realm make problem in broker dispatching
* Cleanup: usr str.split() instread of str.partition() where appropriate
* cleanup: removed useless usage of ctypes.create_string_buffer just for sending packaet via a socket
* cleanup: some import statements
* cleanup: link_vmware_host_vm.py
* cleanup: link_vmware_host_vm.py: use optparse instead of ugly getopt
* Minor cleanup to link_vmware_host_me.py
* Minor cleanup to discovery.py
* claenup: remove unused reexport of daemn classes in daemons/__init__.py
* Cleanup: use properties for daemon configs, too
* New property type `PathProp`: a string representing a path
* fix: must not use an empty list as default argument value
* Updated copyright year
* cleanup: added __all__ to property.py
* cleanup: use `properties.items()` instead of `for prop in properties: ... properties[prop]`
* *More repairs. end-to-end now passes
* *Repair the end-to-end-test
* Fixed three sytax errors introduced in 08f30ec21347378e3d72b1ca45919504f767db63
* Changing `xx ==/!= None` into `xx is (not) None` as suggested by PEP 8 (libexec part)
* Changing `xx ==/!= None` into `xx is (not) None` as suggested by PEP 8 (tests-part)
* Changing `xx ==/!= None` into `xx is (not) None` as suggested by POP 8
* Add : first getwmic.sh script version, for linux wmi call (windows will be easier ;) )
* Fix : (Denis GERMAIN) a lot of typos
* Add : Rémi BUISSON to the Thanks file
* Fix : (Rémi BUISSON) bad default/shinken path for copy
* clean: do_load_config -> load_config_file for clarity/consistency
* clean: spaces arround dict/dict items
* clean: arbiter: created "load_config_file" + small clean of code
* fix: shinken_test adapted for Scheduler
* clean: scheduler; odd pyro_daemon not anymore required for Scheduler
* clean: better laziness :)
* clean: declare object attribute in __init__ is always better
* Fix: Comment & Downtime: prevent of duplicate id
* fix: bad lambda for is_me + previous commit was missing a bit
* Fix: arbiter slave dispatch: Force conf to schedulers on first dispatch
* fix: "satellitelink.con" was not restored on __setstate__
* fix: daemon handle request: trivial case. "[] is not []"
* fix: arbiter slave: self.new_conf was not set.
* clean print
* clean: 2 bits better
* clean: not anymore used/needed
* clean: factorized arbiter interfaces
* clean: scheduler: do setup_new_conf at only one place
* fix: Daemon needs subclass object for super.
* clean: use super()
* fix
* sched: unregister pyro Iface on do_stop
* clean: scheduler: use Interface for all pyro interfaces
* clean: factorized do_stop + use of IForArbiter in scheduler
* clean: factorized pyro interfaces wihtin Daemon & Satellite
* clean: renamed Daemon.daemon to Daemon.pyro_daemon for clarity&safety
* init
* clean: unused import in modules
* clean: space arround daemons properties dict items
* fix: broker: do_load_config() in main() instead of __init__()
* clean: removed lot of unused import for clarity
* clean/better: permit pyro daemons to use automatic port attribution + use this with test_bad_start
* Fix: fixed and re-enabled test_system_time_change
* fix: arbiter spare: last_master_speak need update on system time change too
* Add: quick and very dirty first attempt for a nsca client class. I cannot clean it from now, it was for David to start his new agent
* fix: arbiter fifo can be None even if loaded ?
* clean: factorized some shinken daemon properties inside base Daemon class
* fix: arbiter spare would have loop for ever.
* Clean: Factorized quite pyro + system time change code + some bits
* clean
* clean: some comments/missing space/indentations
* Clean/Enh: continue factorization of daemon & modules_manager:
* fix: better handling for deepcopy with test_status:
* fix: copy.deepcopy is probably cool but it *is* heavy :p
* Fix: livestatus now correctly handles downtimes & comments
* fix: setup was missing to create "etc/discovery" directory
* Fix : remove my email from sample conf, got 200+ emails in night about other guy server problem is not so fun :p
* Revert "Add/Fix: set default encoding to UTF-8 for every shinken daemon."
* Fix: downtime can have no extracomment
* Add/Fix: set default encoding to UTF-8 for every shinken daemon
* Add : discovery and parents management
* Fix : rename shw_nmap.py to discovery.py
* Add : discovery add esx automatic checks
* Add : discovery, maange vmware hosts and vm
* Add : discovery and criticity
* Add : discovery smtps
* Add : mysql to discovery script
* Add : discovery and ldap/ldaps
* Add : discovery smtp and mssql
* *Fix : bad custom macros dispatching to schedulers *Fix : get output as UTF8 in the scheduler and drop bad caracters. *Add : change $USER1$ in sample conf to better name
* Add : service writing to discovery
* Fix : discovery, one output dir is good. not need for 2
* Add : also service generated output dir
* *Fix : bad command fill brok with defaults. *Add : generate host config for discovery script
* Add : generate host conf for discovery
* Add : add some classic network checks
* Add : first configuration manager for discovery
* Fix : discovery script crash if no mac vendor
* Clean: Renamed paths_and_owners to default_paths, since is only contains pathes now
* Clean: group config files (and such) for better understanding
* Clean: Remove old, commented code
* Enh: Added *one* options for setting owner/group. Removing options for var_owner/group
* Fix: missing import
* Move test for Python version to the very top
* Fix: recursive_chown did not recurse
* Clean: Rename `_chown` to `recursive_chown` which is more meaningful
* Add: Hartmut Goebel to file headers, daemon part.
* Add: Hartmut Goebel to file headers, object part.
* Add: Hartmut Goebel to file headers
* Add : arguments and output of dicovered hosts
* Add : some sample commands for beginers
* fix the fix.
* fix: livestatus: manage comments & downtimes ref
* fix: partially revert of 46a3bf950149bfb13dbd5084b46dbb8f2b7c6b30
* Add : first attempt to autodetection
* *Fix test_livestatus. The class-wide Comment-id had to be reset before each testcase
* *Be less strict with pylint checks to make the jenkins test happy
* *Fix a typo in the livestatus test file. Do we need tests for the tests?
* dev: git-ignore eclipse project files
* clean: livestatus: some small but easy factorization
* fix: livestatus_broker: restored do_stop() on exit
* add: "Auto-Submitted" header field so sendmail commands
* fix: sendmail requires a valid from address ; not <>
* Add: sendmailhost.pl + sendmailservices.pl in libexec
* Add/Fix: comment & downtime: also set the "ref" on pickling
* fix: daemon: removed a ')'
* add: shinken init script: do checkconfig before arbiter restart
* clean: livestatus: less indentation and a bit change for a for loop
* *livestatus: changed "commands" get handler for the request. seems better with this
* add: livestatus: contactgroups & timeperiods now handled by request
* Use os.path.isabs() intead of reinventing a bumpy wheel
* Use os.path.* functions instead of split/join on os.sep
* Use os.path.dirname() instead of split/join on os.sep
* Enh: build_config: Take var_path and etc_path from install_config. Remove superfluous var_owner and var_group
* Fix: DistutilsOptionError was undefined
* clean: indentation of dict objects declarations. Really Finished
* clean: indentation of shinken 'properties' object dicts. Finished
* clean: indentation of shinken 'properties' object dicts
* *Remove empty brackets from a class, so it python 2.4 doesn't complain
* Fix : setupy.py with default/shinken not write and lib/shinken with not the good rights
* Fixed: setup.py: Some destinatio pathes in where wrong
* Cleanup: Removed setup_parameters.cfg from MANIFEST.in
* Fix: setup.cfg did not match commands in setup.py
* Fix : commands.cfg was with test in it
* Add : now scheduler also get returns from the pollers
* Add : call the push actions from the scheduler to pollers
* Fix : made the scheduler object connect to pollers, and not the master app..
* Add : declare a scheduler itnerface on the poller/reactionners
* Clean/Enh: rewrote livestatus get_live_data method for clarity&factorization
* Add : poller_tags information in the satellites info send to the schedulers
* Add : make the scheduler connect to the passive pollers
* Add : passive satellites do not initiate connexions
* Add : send satellites info to the scheduler
* Add : passive poller attribute
* Typo in setup.py
* Add : if the command_line start with a _, it will use the command as a module_type for this command
* Fix : the classifier in the setup declaration
* Add : Papp Tamas to the THANKS file
* Use distutils mechanisms in `setup.py`: - more flexible, eg. distutils options can be used to change target dirs, etc. - config is now in `setup.cfg` (which is standard) - new sub-commands `build_config` and `install_config` to do the job - use distutils logging for messages
* Enhanced README: useradd + lock login
* Enhanced README
* Reformating README to rst format
* Spellchecked README
* Reformating README
* Adding .gitignore files
* Cleanup: setup.py: Code, authors, comments, imports
* Fix : bug in test and external commands, sorry, my fault
* Fix : now the poller hot addition works
* fix: livestatus: GET contacts was returning empty cause bad var name used
* Add: first version of the add poller code
* Use sys.exit("...message...") instead of print plus sys.exit(...)"
* Fixed python version comparism with Python 3.0
* Use sys.version_info instead of platform.python_version_tuple
* Add : nrpe module example in the sample configuration
* clean: better alignment/indentation for some "properties" dicts definition
* Use sys.exit("...message...") instead of print plus sys.exit(1)"
* Tivial: fixed message texts
* cleanup: shinken-poller is always used as main program, no need to test for `__name__ == '__main__'`
* fix: livestatus: missing key case in host_states dict
* cleanup: shinken-broker is always used as main program, no need to test for `__name__ == '__main__'`
* cleanup: shinken-reactionner is always used as main program, no need to test for `__name__ == '__main__'`
* cleanup: shinken-scheduler is always used as main program, no need to test for `__name__ == '__main__'`
* Cleanup: scheduler: Use optparse instead of getopt. As a side-effect, the author list will not longer be displayed on an usage error. Unused option `easter` is gone, too
* Removed unused import
* Cleanup: reactionner: Use optparse instead of getopt. As a side-effect, the author list will not longer be displayed on an usage error. Unused option `easter` is gone, too
* Fixed error in help message
* Fix : nrpe module test
* Cleanup: poller: Use optparse instead of getopt. As a side-effect, the author list will not longer be displayed on an usage error. Unused option `easter` is gone, too
* Removed unused import
* Cleanup: broker: Use optparse instead of getopt. As a side-effect, the author list will not longer be displayed on an usage error. Unused option `easter` is gone, too
* Fixed error in help message
* *Add : timeout management on the nrpe module *Fix : bad cehck command parsing with a split on space. Should call shlex intead
* Clean : of the nrpe module
* Typos : (from Hermann Lauer)
* Add : Venelin Petkov on the THANKS file
* Add : test for customs on services in the quick tests
* *Fix : (Venelin Petkov) missing customs on services copy of a based one (multiple hosts, hostgroups, etc) *Fix : crash in badly hostgroup definition service
* clean: use specific 'none' object for "no" default value of shinken property
* clean: better indentation
* fix: missing os import
* Fix : ssl in nrpe, nasty things indeed...... I hate asyncronous programmation
* Add : first attempt of ssl connexions in NRPE..
* Add : manage badly formated ask for nrpe module
* Add : manage badly formated ask for nrpe module
* *Fix : catch no message for nrpe ask *Add : arguments management
* *Fix : more try/catch in nrpe code *Add : test for the nrpe poler module
* cleanup: shinken-arbiter is always used as main program, no need to test for `__name__ == '__main__'`
* Cleanup: arbiter: Use optparse instead of getopt. As a side-effect, the author list will not longer be displayed on an usage error. Unused option `easter` is gone, too
* *Make pylint less strict by adding F0401 (unable to import...) as an exception
* Add: first nrpe poller code
* *Fix the test_action because a loop sometimes was executed too fast and the test failed under windows
* Add : sample of hack_commands_poller_tag
* Enh : the hack command poller tag should not update already tag commands
* *Fix : bug in arbtier for bad configuration in is_correct *Add : hack command poller tag module
* livestatus: use VERSION from shinken.bin
* *Catch exceptions caused by mktime(1970,1,1,...) on Windows
* *Fix a bug in the externalcommandmanager. Now it works with check_mk
* *Add a small wait in test_maintenanceperiod to avoid a nasty race condition and a failed test
* fix: BaseModule: 'process' attribute needed initialization and check on remove
* *And as always there's a fix for the fix, forgot to set the %PATH%
* *Some changes to the jenkins files for a code qualiy test
* Clean: thx to subpackage: "shinken.objects.*" -> "shinken.objects"
* Fix : remove module_type from sample commands..
* *Fix : bad import for logger in scheduler *Add : dummy poller module, with bad return for all checks :)
* *fixclean: catch INTR in queue.get to have cleaner exit
* *fix: brokerdaemon needs traceback + removed unused import
* fix: some modules (like livestatus) need their queue setup before "init"
* Add : dummy poller module example
* *Fix : missing logger import on scheduler leading to a crash on exit *Add : module import for pollers/reactionners
* Add : local log management in satellites daemons
* Clean : satellite comments
* Clean : arbiter daemon comments
* *Remove the dot from some import paths, so python 2.4 is happy
* *Remove the dot from import-statements, so 2.4 understands it
* *And another fix in the hudson script
* *Fix a path separator in the hudson script
* *Make the hudson scripts more flexible (for testing multiple interpreter versions)
* *redesign: moved classes for configuration objects to "objects" subpackage
* Fix : bad sys.path management. The . was added to the path, and so the test or importing was false then
* *clean: moved *daemon.py to shinken.daemons subpackage
* Fix : missing comment on the hack on the python2.4 bypass sys.path for the broker
* Fix : too much header printing in the arbiter
* *add: created the subpackage directories for coming split.
* Fix : missing sys.path entry for broker and direct launch
* Fix : for Python2.' compatibility, we can't have as in Except. :(
* Fix : last_hard_state_change was not taken into account in the broks for check results
* Fix : License header on link_vmware_host_vm.py
* Add : manage the module_type for commands, and give it to the poller in a good way
* *clean: move classes from bin/shinken-* to shinken/XXXdaemon
* *Add: "bin" common module: for usage of the different shinken service daemon
* *Clean : satellite code *Add : now call really a queue of good worker for special module_type action
* Add : first version of poller/reactionner modules with their own queues
* Fix : launch scheduler without parameter was invalid
* Fix : manage the exit from unknown/unrach phae with a different state that we enter with
* Add : the unknown/reach phase notification bypass to the host down/unreachable/down sequence too
* Add : now during a HARD phase, if a service came into unknown, it do not raise a notif, nor when it came back as CRITICAL
* Add : test about first unknonw state still raise notif
* Add : test before changing the hard/bad -> unknonw->bad way of launch notifications
* *Fix the new jenkins-script
* Fix : a possible nasty bug in satellite links with a bad self.con value
* *Change the jenkins/hudson test scripts
* *clean: basemodule.Module renamed to basemodule.BaseModule
* *fix: merlindb forgot subclass Module
* Fix : we can have problem in the call os.getlogin under the hudson service for testing (bad euid?) so bypass it
* Add : ways to diable command launch in hot dep module (0 in mapping_command_interval or void command)
* Add : links to the bin/shinken- daemons with .py names because we cannot load a python module with no .py name in it. (fu.k) With links, we should be ok for no duplication and still happy packagers
* Add : Gregory Starck to authors. Good job :)
* *fix: modules: needs to release queues for arbiter usage
* *fix: dummy arbiter not using good queue
* *clean: hot_dependencies module now uses new style Module
* *clean: ndodb_oracle module now uses new style Module
* *clean: couchdb module now uses new style Module
* clean
* *tests: test pickle retention adapted
* *tests: simplelog needed change for new style Module
* *tests: npcd: tests needed adaptation for new style module
* typo
* *clean: npcd module now uses new style Module
* *clean: merlindb module now uses new style Module.merlin
* *clean: status_dat module now uses new style Module
* *clean: redis_retention modules now uses new style Module
* *clean: host + service perfdata modules now uses new style Module
* *clean: nsca module now uses new style Module
* *clean: pickle_retention module now uses new style Module
* *clean: simplelog module now uses new style Module
* *clean: syslog module now uses new style Module
* *clean: glpi now use new style module
* *clean: memcache_retention now use new style module
* *clean: nagios_retention now use new style module
* *clean: ndodb_mysql now use new style module
* *clean: shinken-scheduler: do_load_config in main instead of __init__
* *enh: daemon: raise specific exception for bad/invalid workdir or pidfile or port not free
* *clean: basemodule: return manage(brok) + added "has" method + no need to dup conf.properties
* *clean: shinken-scheduler: do_daemon_init_and_start in main
* *clean: satellite: do_load_conf & daemonize in main method
* *Add : command launch to the hot dep module with its test case
* *Fix : bug in hot dep module (inversed son and father on tick part) *Enh : more tests for this module (how do you know I find the upper test? :) )
* Enh : the hot dep module test
* Add : test for the hot dependency module
* Clean : remove useless mapping_file_history parameter for hot dep module
* Update the hot dep module example in the conf
* clean : the vmware helper script
* Enh : factorise again the vmware helper script
* Enh : factorise again the vmware helper script
* Clean : the link vmware helper script again again
* Clean : the link vmware helper script again
* Clean : the link vmware helper script
* *Fix another path *shame*
* *Fix the path of the nosetests script
* *Add some test scripts (unix&windows) for continuous integration (hudson's name will soon be jenkins)
* Fix : bug in broker about brok managed in bad order
* *Fix the fix
* *A little cleanup in the livestatus test
* arbiter: and clear modules instances on exit
* *damn: forgot test_livestatus changes in previous livestatus module update
* *fix: forgot arbiter must not start its "external" modules at/during its configuration phase
* *fix: apparent wrong effectless statement changed
* *fix/clean: bad indentation + comment spaces
* *test-fix: typo
* *clean: modules: make livestatus now subclass Module
* *clean: basemodule.Module: continue factorization
* *test: end_to_end: real install test with debug enabled
* *Fix test_action for windows
* *Fix test_module_simplelog for windows
* *Fix the npcdmod testprogram which failed under windows
* *Fix a bug which prevents eventhandlers and notifications to run as early as possible (this broke tests on windows)
* *Fix my changes of last night in test_acknowledge
* Add : the delete part of the hot links module
* *Fix : nasty bug in link vmware objects *Add : addition of hot links now raise external commands
* Add: DEL_HOST_DEPENDENCY command
* Add : create status broks when we add new hot links
* *Add : tick hook point in arbtier, at the begining of the main loop *Add : reload mapping file in hot dep module if need, and get add/remove elements
* Add : hook point management in arbiter
* *add: basemodule class for shinken modules. + make dummy modules uses it
* *Fix testcases so that they succeed under windows (module_pickle_retention, module_host/service_perfdata)
* *Update test cases in test_acknowledge (file was not in use for some weeks)
* Fix : sic, I mix my git pul/push... dumbass...
* Add : at hot dep launch, really create hosts connexions
* Add: ADD_SIMPLE_HOST_DEPENDENCY command to create (on run) a dep between 2 objects
* Add : first laste configuration arbiter module. Here links between VMware hosts and vms
* *clean daemon: better method name: do_load_modules -> find_modules_path
* Enh : dispatcher test with a check of good simple dispatch
* Enh : dispatcher test with a first dummy dispatch loop
* Enh : dispatcher test with a first check dispatch loop
* Enh : dispatcher test
* Enh : dispatcher test
* Enh : dispatcher test
* Fix : missing test dispatcher in quick tests
* *Add : tets for dispatcher, with dummy connexions *Fix : search for schedulers and other satellites where bad *Fix : satellites are alive as default
* Clean : scheduler coments and remove useless getters/setters
* *clean: modulemanager: get_instances reworked
* *clean: shinken-arbiter: variable not needed
* *clean: scheduler: logic for add method fixed
* small enh: use dict inside scheduler add method instaed of multiple if
* *clean: satellite: less indentation
* *clean: 2 bits change
* *fix: action: shlex.split(arg) doesn't change arg in place but returns result
* *fix: scheduler: needs special manage_signal case
* *enh: still more factorization within Daemon
* *Fix: shinken init script: checkconfig was broken by me
* *Add some .gitignore files so that "git status" looks more neat
* *Clean: Factorized pyro daemon code in Daemon
* forgot bad_start test files
* *Fix/Clean/Enh : Daemonize the later possible, only once all required resources have been loaded
* Fix : pylint line size
* Clean : arbiter comments
* *Fix another typo
* *Fix a typo
* Update Changelog
* *Fix : bug in LiveStatus with Service.get_full_name taht not exist *fix : add protection against raw queries liek the NagVis ones that send queries with no spare after a :
* fix: daemon.py: invalid content (like empty) in pidfile raised exception with int(p). was making unlink of old pid file not reached
* *clean: init shinken-all not anymore needed ; redundant with 'shinken' one
* *TAG : 0.5 release *Clean : some business rules print
* Fix : rollback, it was not so brok in fact. But must clean all of this, I do not like how dispatcher do all of this
* Fix : bug in dispatched for sub realms to scheduler connexion
* Fix : hostgroup was wtill bad, sorry :)
* *fix+clean: reworked init scripts: shinken-* are now all using 'shinken' one
* *fix/clean: default/shinken.in : cleaner + explicitely declare ETC/VAR/BIN variables
* Fix : bad host group member id in NDO
* Update the Changelog for the 0.5
* Fix : (Laurent Guyon) select with no timeout in NSCA arbiter module
* *Remove a temporary test in test_livestatus which failed
* *Add error handling for business rules which reference non-existing hosts/services *Add a test with a broken config to test_business_correlator.py
* *Clean: some statically used lists changed to tuples
* *Prepare error handling for unknown objects in business rules
* *Add some documentation to the livestatus module
* *Enh: shinken init script: enable use of another "default" shinken file than hardcoded one by env variable
* *Remove a leftover test file
* *Fix a bug (current_service_groups needs to return an empty list instead of string) in the livestatus module
* *fix 'setup.py -h install' now also exit
* *Fix: "setup --help install" was not exiting after showing help
* *Clean: factorized .is_correct() call for all object types. + added log to see more clearly wherer the error is
* *Add a missing brok handler in the livestatus module
* *Fix a small bug in the livestatus module (database cleanup)
* Fix : test livestatus
* *Add options allowed_hosts and max_logs_age to the livestatus broker
* Fix: missing creation_time property for notif load for 0.4 daemons
* *Fix : load of downtimes form 0.4 was bad due to missing extra_comment *Fix : python2.4 seems strange with in broker python path, add a hook about it *Fix : some enhancement were python2.6 only, rollback on them sorry
* Add : Laurent Guyon in Thanks file
* Fix : () crash for some bad conf, should raise a message instead
* *Fix missing check for no args in 'shinken' init script
* *Clean: factorization/simplification of code in action.py (and related) for spawning checks processes. + clean of old deprecated commented code (& "related" too)
* *Add them for Stats: too
* *Add some rarely used operators to the livestatus module (!>=)
* *Fix a bug in livestatus Servicegroup.members, minor cosmetics, test case for thruk
* Fix : missing the sample certs on the setup.py script
* Add : the full demoCA certification autority so people can sign their own keys
* Enh : clean the use_ssl from all where it was useless. We are not doing C after all, so too much args for a fucntion call is a bad sign :)
* Enh : begin to enhance the use_ssl boolean dispatching. It's global, let use it as it
* Fix: fix pyro wrapper for Pyro4 for ssl variables
* *Fix : satellites links where send with 'con' information. It's not a good thing at all :) *Add : SSL capabilities for Pyro connexions (Pyro3 only from now). Add certificates for helping users, available until 2021 :)
* *Small fix in test_livestatus because the order of result lines changed (depending if unittest or standalone)
* *Fix a bug in host.parents livestatus representation to make thruk happy *Add a test for this
* *Redesign of the livestatus module *Some bugfixes, testing with multisite and thruk *Add testcases for thruk and multisite
* Add : module exception/kill catch in the scheduler
* Fix: check for /dev/shm access for the satellites
* *Enh : downtime and comment are now pickle in a dict, not a list. *Add : pickle pass for look at tyype, so downtime and comment from 0.4 still ok
* Fix : acknoledge got too much information in the pickle pass, making the pickle save very very huge. Now fit from 100Mo to..2Mo :)
* Enh : use the binary format for the pickle, so it take less space
* Fix : missing command property in the event handlers
* Enh: use of default value to getattr where possible to remove some hasattr checks. Also changed some statically used lists to tuples where possible
* Clean : (Grégory Starck) clean of some getattr code, bis
* Clean : (Grégory Starck) clean of some getattr code
* Add : another business rule example
* Fix : (Laurent Guyon) crash in workers
* Fix: notification and event handler crash in worker
* *Implement in_check_period/in_notification_period for livestatus to make multisite happy *Remove a leftover atribute from timeperiod&daterange *Transmit dateranges in timeperiod-full_status-broks
* Add: got_business_rule property in the broks and livestatus module
* Add : child_dependencies/ parent_dependencies in livestatus module
* Add : parent_dependencies/child_dependencies list for host/service so we can have like parents/childs, but for all dependencies now. UIs will be happy
* Fix: time race in test contact downtime possibility
* Fix: (Laurent Guyon) crash in scheduler stop if not initialized
* * Replaced the deprecated StatsGroupBy, implemented Stats: for log entries, making Multisite happy with shinken-livestatus * Some code and comment cleanup
* Fix : manage the 'null' for inheritance
* *Some bugfixes and new code to make livestatus work together with Multisite
* Fix: missing contactdowntime.py in git..
* *Add : cancel contact downtime command *Fix : missing test for contact downtime in git
* Add: downtime for contacts
* Clean : code for escalations
* Clean : test for escalation based on time
* Add: shorting the notification time if a time based escalation ask for it. So you can stick with huge notification interval, and still got escalation that just works :)
* Fix: default config for escalation was using a unknown contact name
* *Add a timeout to the status_dat module so that the status.dat is written even if no broks are sent
* Add: notifications based on time
* Fix: remove a unused test that make the integration server not happy
* Fix: missing logger in the escalation class
* *Fix: escalations were offset of notif number by -1
* *Fix : 'required' for a Prop in items.py *Fix : escalations can have contact or contactgroups
* *Replace Queue with an own implementation of LifoQueue for Python 2.4 (livestatus) *Fallback to sqlite 1.x for Python 2.4 (livestatus) *Fix a bug in the table structure where logging messages are kept (livestatus)
* removed duplicate method
* TAB -> 4SP under shinken/* done
* *Add a fallback to the sqlite module for livestatus
* converted TAB to 4SP everywhere possible
* better logic: (not A and B) or A <=> A or B
* better logic: A and B or A and C <=> A and (B or C)
* fix bad logic test: X != val1 or X != val2 -> X not in (val1, val2)
* Better tests: Replaced "X == val1 or X == val2 .." by "X in (val1, val2 ..)"
* Fix: crash of the arbiter for a missing host_name host attribute
* Fix: the setup.py that now load all .cfg files in the objects part
* fix: the Gerhard version for get customs keys was in fact faster. We keep it
* Fix: bypass find of bad formated template
* Fix: rolback on the last commit, because if there are no change on a dict, key(),values() are ok for indexes
* Fix: service dep desc can be None, bypas it
* Fix: we are not sure the key() values() will return the same order for customs dict, so we explicitly sort it to be ok
* Fix: problem/impacts should be list, not string
* Add: initd.shinken script with +x chmod
* Enh: (Hartmut Goebel) use universal open way for conf reading
* Fix: missing customs values in host/service tables in livestatus and Thruk was not happy
* Clean : more OK/CRITICAL in sample conf, and remove _port because it make Thruk not happy. must find why, but will wait some patch in Thruk commit before
* Add: more host/service in the sample conf
* Fix: (Grégory Starck) french name in variables
* Clean: (Grégory Starck) clean pyro_wrapper call by just 'pyro'
* Fix: is_impact/is_problem got bad format in lviestatus tables
* Fix: (Grégory Starck) Hard coded timeout in satellite links
* Fix: (Kristoffer Moegle) remove \r\n in unix box for read files taht were done uner windows
* Enh: (Grégory Starck) still code clean for pyro wrapper in satellitelinks
* Enh: (Grégory Starck) better catch for pyro wrapper in scheduler
* Enh: (Grégory Starck) better code in pyro wrapper
* Fix: (Kristoffer Moegle) missing check in generic object configuration module
* Add: add a bailout for workers if they got toomanyopenfiles errors
* Add: (Kristoffer Moegle) now arbiter modules are generic for item types
* *Fix a bug in livestatus (get hosts with limit)
* *Fix a bug in livestatus. Catch the exception if a peer is not listening for the response
* *Fix a bug in livestatus module. Macroresolver must be initialized
* *Fix a small bug in macroresolver, so it works with livestatus
* *Add support for unix sockets to the livestatus module
* Add : add the bp_rule links into the cutting algo for conf packs
* Fix: factorize code in the macro resolver about the main function(s)
* Fix: roll back about note_url and co. The raw must be fill :(
* Fix: missing configuration_errors properties in the satellites
* Fix (tmp?) : bypass a test for action_url NO xpanded in livestatus
* Add: now macros are expand for url_notes and action_url before the brok send
* Enh : change brok_transformation fucntions so they get 2 args instead of 1
* *Add action_url_expanded and notes_url_expanded to the livestatus module. This needed a new method for the macroresolver and some heavy function fulldepythonize in the module which i don't like. BNut for the moment it works (needed for Thruk & action_url/notes_url)
* *Add forgotten test case for host_without_cmd
* *Add support for hosts without check_command (assumed to be always up)
* Add: add shinken in the livestatus version string
* Fix: only go higer in criticity, even if we got slow impacts
* Add: test about the problems getting a huge criticity, and so it will pass notification min_criticity filter if before it was refused. Cool :p
* Add: now 'problems' got the max fo theirs impacts criticity. When they came back as normal, they return to their configurated value
* *Fix: bug in last commit about host_notification_commands checking in is_correct *Add: criticity/min_criticity is now checked in the contact/notificationway pass :) No more SMS for dev servers!
* Add: min_criticity definition in cotnact and notificationways
* Fix: hostgroup realm assoc was broken. Now it's tested
* *Fix: autogenerated satellites do not link to the default realm *Add: tests for realms
* *Add: Gregory Ranchy to the THANKS file for his help on the documentation! Thanks a lot for this hard work. *Add: ERP full test in business rules
* Add: link for problem/impact raised for all problem that is linked to a business rule. it's rude (maybe it is still ok), but we will enhance it later
* Add: a list all elements of a business rle so we can register to them after
* *Add: coverage output in quick tests *Clean : Host code
* Add: now internal checks for business rules are managed in the scheduler. Look like a standard check, but it's just launch internally in the scheduler when it's time to go. GREAT GREAT GREAT
* Add: N of: rules for the dep nodes rules
* Add: the AND rules in dep nodes
* *Add: last_hard_state_id value filling *Add: code for OR dep rules
* Add: last_hard_state_id in host/service, and a first code for or rules in dependencynodes
* Clean : a little the host code
* Clean: micro clean on external commands
* Clean : scheduling code
* Fix: last_hard_state was false
* Add: first dummy code for a state calculation of a dependencynode
* Fix: autoslots filling
* Add: link of host/service in the dependency nodes creation
* Fix: missing defautl value for pnp_path in livestatus module call
* Add: business rule correlator factory, and host/service set
* * Fix a bug in the livestatus tests and make it use temporary files in the test directory
* * Add the new column pnpgraph_present to the livestatus module
* Add: detection of a busienss rule based command
* Fix: (Maximilien Bersoult) fix mysql_db module search path
* *Fix: forgot the propagate_timezone_option in all tests launch *Add: code for the creation of the business trees
* Add: begining of business correlation, tests and a ghost command creation : bp_rule
* Fix: I'm a morron, I didn't launch test with the last commit... sorry
* Fix: problem in event handler, state was a false property in the properties
* Fix: problem in the notificaton pickle pass
* Add: now create the pickle retention file with a .tmp, so in case of problem, we do not lost the old one
* Fix: remove the automatic_event_handler property. Now even_handler_enabled say if we use the automated way, and on demadn are always launched
* Fix: bug in compensate time when thecore got event handler
* Fix: forgot the add of on demande event handler tests
* * Fix a bug in the npcd module (spoolfile timestamp extension was float, not int)
* *Fix : there is no resource under windows box... *Fix : still 0.3 version in bin/shinken-* scripts
* Fix: windows registry paths
* Fix the isntall script on windows box
* *Add : "Fix it" button feature :) ** it add the automatic_event_handler (1 by default) param to hosts/services so event handler can be disable to send in an automatic way ** Add LAUNCH_SVC_EVENT_HANDLER/LAUNCH_HOST_EVENT_HANDLER external commands so the UIs can add a fix it button, to ask the event handler launch :)
* Fix: (htgoebel) remove the useless ... useless parameter
* Fix: issing the property lib
* Fix: notification and event handler should not have 'ref' link when they are pickle (only in retention)
* *Fix : problem with Nagios retention that was not happy about host properties type. *Fix : pickle/nagios retention was loading a retention host/service in the comment.ref link!
* *Clean : (Hartmut Goebel) BIG code property change. Now properties are not dict, but real objects
* Fix: now only previously notified contacts are send for recovery notifications
* Fix: some texts in readme and changelog
* Fix: (Nicolas Dupeux) typo in host.pyu about Stalking
* Fix: (Nicolas Dupeux) typo in host contact groups check
* Added Django license
* Updated README file
* Fixed root url and added SHINKEN_PATH to settings.py
* Add: put 0.4 version in the code
* Fix : missing alive property in the arbtier link object
* Fix: scheduler need the recursion limit set to max too for retention things
* Add : Vincent Riquer to the THANKS
* Fix : (reported by : Vincent Riquer) now a spare broker can be send to sleep again by the arbiter. It will clean its queues and stop modules
* Fix: arbiter crash with a spare and the new smoothing wat i managed behavior
* Add : arbiter ask one a cehck_interval the managed conf for satellites. So more smooth decisions
* *Add : good error message when there is no /dev/shm on Linux *Fix : catch Vacuum problem when the database is corrupted on livestatus and log sqlite db
* *add a missing vacuum-statement so the livestatus-log-database will shrink after the daily cleanup
* clean: bad indentation + small comment typos + few unused imports
* fix: use unique VERSION from shinken.bin within daemon.py
* Add : now a npcd module with a missing init phase will see it and ask for new one to the broker
* Fix : bad property default lookup for timeperiods
* Fix : utf8 in print is not available for jenkins, so disable print for host perfdata module
* Fix : missing timeout variable init in the scheduler code
* Fix: jenkins is not happy about printing utf8 char :p
* Fix : add the test_timeout to the jenkins whole tests
* *Change default check/eventhandler/notification timeouts and flap thresholds to make nagios more compatible to shinken
* *Better handling of check timeouts (there was an empty output) *Log notification and eventhandler timeouts
* Added skonf in shinken repository, it will be available starting with version 0.5 of shinken
* removed mockups as they are part of skonf
* *Fix a bug in recursion limit
* *Recursion limit is now dependent from python release and process' stack size *Fix a bug in livestatus Host.childs *Add more tests fot livestatus *Cleanup optional Nagios comparison in livestatus tests
* *Moved livestatus typemap Host.childs to the (alphabetically) correct place
* Add: childs property in the code and in livestatus module
* Fix: ndo/mysql problem with utf8, sic..
* Fix: the log file was erase when we open it
* *Fix: now export only useful properties in the pickle module. IT WILL BREAK prevouisly created file, sorry
* Fix: a crash of the scheduler when we got a return of a unknown event handler id
* Fix: Nagios is stripping output and perfdata, and the perfdata is not good for centreon2, must be stripped for it
* Add: Hartmut Goebel in the THANKS file for the code quality pass
* Add : test for the pickle retention module
* Fix : (Nicolas Dupeux) a space before the shell bang is not good
* *Fix: crash of poller/reactionner on windows *Fix: for service generator, if there was error in config it was not print at the is_correct pass
* Clean : of service code
* *Fix a bug in external command handling of livesttaus
* *Fix a typo
* *Prepare the livestatus module for some performance tuning
* Add: add the pylint pass on modules too
* Clean : clean of the item code. More work need
* Clean : some clean ups of from imports
* Clean : clean of config.py code
* Clean: (Hartmut Goebel) Removing-useless-Borg-pattern-form-log.py (great)
* Clean: (Hartmut Goebel) Removed-unnecessary-import-of-platform-module-in-scr
* Clean: (Hartmut Goebel) Removed-unnecessary-import-of-platform-module-and-wr
* Clean: (Hartmut Goebel) Reformating-and-textual-cleanup-for-shinken-autoslot
* Clean: (Hartmut Goebel) Reformating-and-textual-cleanup-for-shinken-action
* Clean: (Hartmut Goebel) Reformating-and-textual-cleanup-for-shinken-acknowle
* Fix: env was compte but not set for checks
* *Fix: error in false daterange catching *Fix: some pylint errors
* *Again bugfixing in the livestatus testcase
* *Some livestatus tests failed, because the reference output from a mk-livestatus showed different results. Commented these tests out, because i want to see the "get out and buy you some beer" from hudson
* *Code cleanup in livestatus. *Made the test_livestatus more robust by adding the pid to some temporary files
* *Code cleanup in livestatus servicesbygroup
* *More livestatus tests have their results compared to a running nagios/mk-livestatus *Fix some small bugs in livestatus module
* *Add tests for the livestatus module which run against a real nagios mk-livestatus
* Fix: the integration server got a old verion of pylint, and they change teh disable mesage argument
* Clean : code for pylint, and remvoe 'do not have bla property' because it's not compatible with how we code
* Add: the coverage pass is done during the quick test
* Fix: test_external_commands and add it in quick tests
* Fix: add the last_hard_state_change compute in consume checks and in the ndo export
* Add: pylint and noseets pass for unit tests and code quality
* Fix: the set recursion limit was too high for some system. Put a little power2 loop to search the max
* Fix: (Thanks Nicolas Dupeux) max recusrsion was too slow for the pickle pass
* *More work on the new livetstaus tables. *Fix handling of missing properties for Host/Service.__setstate__
* *Add tables gethostsbygroup, getservicesbygroup and getservicesbyhostgroup to the livestatus module
* *Fix: now the getstate/setstate for host/service is fully compliant with adding properties. Less beter for speed far better for retention!
* *Fix: bug in action for direct launch that failed, for python version ebfore 2.7, the fd were not closed, and it's a real problem. So the direct launch is for 2.7 only. *Fix: bug in ndo/mysql about a bad where statement *Fix: last_chk should be an int, not a float
* *Fix: ndo/mysql missing ack data *Fix: ndo/mysql missing update of servicehosts status in update data
* *Fix: missing 'as_been_checked' in ndo/mysql *Fix: now we control how comments and downtime are send to the others daemons, so we remove the .ref that is a service/host, and so will link with nearly every thing!
* *Fix: the retention autogeneration was for broker instead of schedulers. *Fix: remove teh pickle auto generation now we have the nagios one
* Fix: do not connect in the confloading, it can slow the arbiter, and it's not a good idea
* *Fix: NDO , the servicegroup_members was not cleaned *Add: do not try to send a conf to a dead satellite
* *Fix: crash of Arbtier in bulk command send *Fix: scheduler got always a bad running_id ifthe broker got a new conf
* *Fix: error in init.d script for stopping the broker *Add: stop are done with the init.d scripts in test_end_to_end.sh
* Fix: (David Hannequin) status checks in init.d scripts
* fix: the db test case
* Add : a ' protection for all db queries
* *Fix : ndo was active by default, not good. *Fix : do not add a property in an update if it's also in where (will warning...)
* Fix: a bad reinit of cache in ndo/mysql
* Fix: boost ndo/mysql perf with less useless deepcopy and a cache for host and service
* *Fix: livestatus import where crashing in daemon mode. *Add: livestatus by default instead of the status.dat broker module
* *Added StatsGroupBy: to the livestatus module
* *Rewrite of the livestatus connection handling *Fix typos made in the last commit
* *Revert Livestatus flag is_executing. It's now 0 by default because the info is not updated fast enough
* Fix: the retention from nagios was not good about state_type
* *Fix: when check_interval is 0, do not scheduler unless force check *Fix: is retry interval is 0, take the cehck_interval instead
* Fix: do not bypass the sys.path set for nt, only for sons of main processes
* Fix: update the old shinken specific for windows with a real one
* *Fix: add the nt bypass module error on the other satellites *Fix: simple log was in error under windows
* Fix: some command were shell without shell bang, and so raise errno 8 in direct launch. Should be managed with shell one in such case
* Add : the precise Pyro version in debug
* Fix : my stupidity : it's better to do the .py for binaries just in the windows isntall script, so under unix we are still clean
* Add Петров Иван to the Thanks file for his bug report
* *Fix : poller/reactionner do not want to launch on Windows, need to rename all binaries to .py !
* *Fix: aknowlegement property was deleted at the end of a ack. Not good. Put None instead. *Fix: some case where an action got a.t_to_go==None make it disapear now :) *Add: more debug in the case of a bad launch of a poller/reactionner
* *Add a test case to test_livestatus which checks service/servicegroup linking
* *Add a test to test_lifestatus for the is_executing flag
* Fix : hostgroups and services groups are send as a list in the host/services broks. + test cases
* *Fix : the servicegroups and host groups do not register as they should in the service/hosts properties
* Add : change nagios_user and nagios_group by shinken_user and shinken_group. The old names are still ok in conf
* Add : the auto generation of the nagios_retention_file module
* Add: (Sven Nierlein) generic init script
* Add: first version of a Nagios retention load file :) Just load, not write. So another retention module is good
* Add : some on running declaration so the module retention from flatfile Nagios is able to know what to do
* *Fix : some possible error in item.py contructor for the new retention module *Add : changelog update :)
* Fix: correct the get_key_value_sequence function for the NodeSet case
* Fix: rename importance into criticity
* Fix: (NICOLAS DUPEUX) typo crash
* Add : problems/impacts on host/service livestatus tables
* *duplicate_foreach attribute can now have more than one value per key
* * Make parsing of generator key/values regex-based (preparation for multi-values)
* *Fixed a typo in config.py
* *Implement Limit: for livestatus (at least for hosts and services)
* *Fix the livestatus test case
* *Fix a bug in livestatus csv output generation
* *Add some missing properties to livestatus
* *Rearranged the generator code. Moved the expression parser into util.py
* Fix: bug in ndo/mysql for missing properties at service/host start in status
* Fix: bug in ndo/mysql for missing properties at service/host start in status
* Fix: bug in ndo/mysql for missing properties at service/host start in status
* Fix: bug in ndo/mysql for update host
* Fix: bug in ndo/mysql for update service
* Fix: bug in ndo/mysql for update service
* Add: when a scehduler got a new conf, it save it s retention data before take the new one
* Fix: bad table for the ndo host update, and missing update for services
* Fix: parent were lookup without a stip
* Fix: a lof of missing ontacts were not catched, and same for missing parents
* Fix : bug crash in poller uner windows host and Add : better smaple conf for windows
* Add: retention save at the exit of the scheduler
* *Fix: Nagios allow contact_name to miss if there is an alias *Fix: Nagios allow a contact with no 'action' if his options are n/n *Fix: No mroe output for a event handler. *Fix: Resolv macro can loop forever with special output. Now limit it at 32 loop max!
* *Fix: broker can now correlty stop modules instances. *Add: now the statusdat and simple_log correclty quit. same for service_perfdata. Quite a lot of code to merge I think
* Add: signal handling in the livestatus module
* Add: better output to know which external process for the broker is who
* Fix: the env_macros were enable if we use the tweaks, not good. And they are REALLY CPU killers
* Fix : I forgot DEGREMONT Aurelien in the patch about NodeSet. Very sorry about this
* Fix: LiveStatus : do not close the socket before we are sure the other peer send us nothing. If so, we can close it
* Add: NodeSet lib use if available for the [X-Y] keys in service generators
* Fix: some bugs in livestatus for how navgis ask in livestatus protocol (some spare, some not, etc). But still need keepalive
* Clean : more code clean and comment for the service generator part
* Clean : code in service generator in the host class
* *Add : service generator for host properties like Unit [1-6] Port [0-46]$(80%!90%)$ (the code need a lot of cleanup by the way)
* Fix: problem with service generator finishing with value
* Add: redis retention module like the memcache but with... a redis server :)
* Fix : now files for the end_to_end tests are in the test/ dir
* Fix : declare the importance in the livestatus module, for the collums list feature
* Add: test for the load balanced configurations in the end_to_end test
* Add: user can put the name he want for a resource macro now :) not just USERBLABLA
* Fix: solve a case where config files do not end with a line return and will mix parameters
* Add: test for resource file value resolution
* Add : the importance value for an host/service (implicitf inheritate) as an int, 3 by default (will be 0->5)
* *Fix: broker sapre not look at pollers/reactionners when he come active
* Add: broker spare takeover for end_to_end test
* Add: reactionner dead test in end_to_end test
* Add: tests the good poller takeover for the HA automatic test
* Fix: limit output from broker about connexion problem to another satellite
* clean : more output clean...(quite a lot ins't it?)
* Clean: more output in satellite, and remove a scheduler connexion useless
* Clean : more clean output for poller/ractionners
* Fix: now the poller/reactionner REALLY raise broks to the broker (it was clear before...)
* Add: more poller/reactionner cool output
* *Clean : now we connect to the satellite when we got them. It's more easy to folow in the log, and we are no more in a pyro thread, so we can. *Clean : lot of output for the log
* *Fix: bug in the Broker that make in some cases broks lost for extarnal modules if they come from the arbiter. (like logs) *Clean : more cool outputs for log, so we better know where is come from (broker, scheduler, arbiter, etc)
* Clean : some outputs clean for the test end_to_end error catch
* Clean : clean output so we can have good test from log output only
* *Add : test_end_to_end for HA installations (not installed, direct launch), so add a full spare stack (name stack2) and update test_end_to_end to launch and check all is launched
* *Add a workaround to the livestatus module so it can handle requests from thruk 0.71.1 (which uses strange Stats: requests)
* Add : print tests with variables
* Add : now number of processes in tests are variables
* Enh: rename all 'binaries' without the .py extention so distrib will be happy
* Add: missing module example in the configuration
* Fix: the Queue order for stacks in python 2.4
* Add: livestatus nearly ok for Python 2.4
* added various missing or optionnal parameters
* comment bubble was too small in modules mockup
* added various comments about behaviours, added module management screen mockup, update realms management
* added various comment to the mockups. Added search field. Fixed typo
* updated readme file and added tool location used to design mockups
* merged first screen mockup of other tools integration from jean
* added all of the screens mokup needed for distributed monitoring configuration
* Added some screen for shinken configuration UI
* Add: mockup about easy other tool integration
* Add : conf sample for PNP integration
* Add : mockups dir
* Add: (David Hannequin) man pages
* Update the THANKS file
* *Fix : (Hermann Lauer) important bug in status.dat (and in fact all other 'external modules') taht make the brok not manage in the good order in some case or Arbtier restart. Thanks a lot to Hermann Lauer that help me a LOT with all the debug logs!
* Fix: indent
* Fix: change the default_parameters into default_value
* *Fix: error handling in timeperiod inheritance *Fix: missing service_tpl_on_host_tpl test in quicks one *Add: first version of service generators (with default parameter handling)
* *Fix: templates name was not strip, now no problem with space in the use parameters. *Add: service template apply on host template feature :)
* Fix: more clean on the default conf
* Fix: more clean in the default conf
* Fix: some objects are out from common.cfg and put in their own files
* Fix: clean more the common.cfg with templates
* Fix: timeperiods are now in their own file
* Fix: the default conf with commands.cfg not in common.cfg
* Removes unused imports
* Removes trailing spaces
* Add: Andreas Karfusehr to the THANKS file
* Add: memcache retention load now work. Need a timestamp things I think to do not go in all modules
* *Fix: the dummy retention was false (missing a parameter) *Add : retention module (just push) for a memcache server
* Add: now the retention load from flat file (picle) is done in the module, not the core
* Add: now the flat file retention is managed by the pickle_retention_file scheduler module
* Update the THANKS file
* Add support for XOR encryption in nsca arbiter module
* Add: first version of the pickle_retention_file scheduler module, but void
* Fix: I was missing the dummy_scheduler code, not good :p
* Fix: autogenerate the retention module only if we've got a real path for the retention file
* *Fix: update_retention at 0 will just crash teh scheduler (not good :p ) *Add : now autogenerate a scheduler module if the user want the rentention with a file
* Add: now the retention_update_interval parameter is managed
* *Add: the ! character before a host_name is now managed in the services. (even if host was defined in a hostgroup). And with test
* Fix: manage additional_freshness_latency parameter with a test for check_freshness now
* Clean: clean the unmanaged perfdata commands tag
* Add : perfdata command management for host/service with the test code that check it
* Clean: with the o*hp commands linked with classic way, the classmethod is not useful anymore
* Fix: the obsess_over_service is fill by default, and so it's not useful to check for is hasattr
* Fix: do not activate NSCA daemon by default
* Add an NSCA server as an arbiter module
* Add: now the scheduler use module to retention load/update. The flat file is still used in update and if no module can load correctly
* Add: module detection and loading from scheduler
* Fix: remove the doc from source. Now all is in the wiki
* Add : queue get of external modules from the arbiter. Now it should be ok o integer NSCA one
* Add : new property for the modules : phases. So we know when to use them, especially for arbiter
* Add: a dummy arbtier module
* Fix: no mroe unmanaged parameters for o*hp commands
* Fix: copyright by default with Gerhard of course
* Fix: exit on error when a malformed parameter is given
* Enh: use the explode_global_conf functionality to send OxHP commands
* *Fix missing : in oc*p-code and add some more tests
* *Fix a bug in eventhandler output handling
* *Fix a bug in oc*p_command resolving
* *Added obsess_over_host/service and executing oc*p_commands like eventhandlers
* * Start working on oc*p_commands
* *Enh : remove the 150host confs. It's too much for a sample :) *Fix: remove path/mode/template for service/host perf data from global conf unmanaged parameter
* Add : manage use_large_installation_tweaks (in fact only the macro is useful for us)
* Add: template and more for host perf data module
* Add : macro/template management in service perfdata module
* Add : mode and template parameter to service_perfdata. More is used
* Add: perfdata module autogeneration
* Fix: error in what I manage last fix..
* *Fix : error in what_I_managed return a bool instead of a list. *Add : process_performance_data management
* Dbg : add debug protection for a strange bool intead of list in dispatcher/satellites
* *Add : error raised on o*HP commands definitions (global parameter) *Add : error raised on regexp configuration. *Fix : do not raise warning on env variables or bad macro character (now they are managed)
* Fix: now host/service with a bad contact raised an error with the unknown contact
* *Fix : error in daterange checking *Add : now host with no address are fill with host_name for this value
* Add: test for warning on notification errors
* *Add : (last commit) raise warning on notification command error. *Fix my SHAME : in fact I didn't commit a false code :)
* Fix: SHAME ONE ME: invalid syntax. Tests were still running while I commit. Please forgive me :)
* Add: bad timeperiods now raisend an error (like sounday instead of sunday)
* Add: timeperiod inheritance
* Fix: setup.py can create a zip file (egg) for the librairy under Centos. It's not a good thing. It should avoid it (test in progress)
* *Fix : From Nicolas Dupeux : error in livestatus split
* *Allow "members *" in a hostgroup definition
* Add : manage inherit_parents for dependencies
* Add: system time change in the arbiter too (ha mode)
* *Fix : From Nicolas Dupeux : fix a crash in delete ack in a unack object. *Add : system time change catch for satellites
* Add: method for system time change, but not actif from now
* Fix: debug print in macro resolver
* Add : enable_environment_macros now create or not the env dict for checks
* Add: finished env macros tests
* Dbg : add debug print in bad order update brok
* Fix : error in status.dat with update before creation?
* *Add : first version of a env macros creation for checks *Fix : some macros were not working, need more fix
* Add :time compensate in scheduler. Now should do other satellites too
* Enh: update system time change test and now the scheduler compensate hosts and services too
* *Important and useful code in the more critical part of the code
* Add: env management in actions like objects
* Add: use_timezone support for schedulers
* Add : manage illegal_macro_output_chars
* Add : management of illegal_macro_output_chars for hosts, services and contacts
* *Add : now satellites got parameter timeouts for ping and data send. *Add : now satellites got a SOFT/HARD way : do not set dead at the first bad ping. Like services now : max_check_attemps *Add : test case for this :)
* Fix: mysql was load to early in broker
* Update the Changelog and set version 0.3
* Add : debug message in status.dat module that is focus on useful cases
* Fix : simple log test and dep tests got small issues. Now it all OK
* *Fixed a but in windows check execution
* *always release new code with a test :-)
* *Add counters for event_id and problem_id used in $HOSTEVENTID$, $SERVICEPROBLEMID$ etc
* Add : use_timezone and use it in Arbiter/poller/reactionner/broker. Just miss the scheduler
* Fix : no more warn about unmanaged syslog and rotate options
* Add : now the autogenerated simple log module manage the archive path
* Fix : now log do not except about missing log file. It just pass
* Add : archive old log file in simple log broker module
* Enh : factorize the look for broker module type already defined
* Add: syslog broker module and catch from global parameter
* Add : warn about unmanaged parameters
* Enh: rename some Config properties for the new 'warn about unmanaged' properties
* Fix: merlin problem with direct method launch
* Add : doc for notification way
* *Add forgotten hostdependencies.cfg
* Fix: now contacts are correclty checks for correct with notification ways
* Add: now contact look at their notifways for knowing if they want to raise a notification or not
* Enh : now contacts give commands from notification ways instead of it's own commands
* *Fix : bug in status.dat when launch in direct mode *Fix : broker always ask for brok generation to scheduler even at simple start. This first ask is useless. *Add : notification now create a simple notificationway with internal parameters
* *Add : notification declaration and link to contact. Miss creation of a notifway with default parameters of contact and use of them in running part
* *Tuning : test_notification code, now run in nearly 10s. *Cleaning : now contact is call go give notif commands. It will be easier to change after how contact manage them
* *Add hostdependency
* *Add : use_property property in GLPI module configuration to choose where to get the 'use' property in GLPI
* *Add : first arbiter module : load from GLPI with webservices (xmlrpc)! *Change : now arbiters and modules are managed early before others objects (because of import like modules that must be active BEFORE manage all objects) *Fix : tests were broken with last commit with config api call changes *Add : example of GLPI module in standard conf, but no activated of course
* Bad commit last one. I must remove my gloves when I code..
* Prepare code for arbiter modules
* Prepare code for arbiter modules
* *Fix(?) : servicegroup members in json format was not good. Now it should be better, Thruk is happy
* Oups: bad commit line (bad bash :) ), was max, min and cod functions in lviestatus return 0 for a void entry
* Fix: program_start should be a int, a float is not useful and can cause problem
* Fix: program_start should be a int, a float is not useful and can cause problem
* Fix: missing print :)
* *Add : problems table in live status module :) *Fix : upadte status broks were not raise enough and so we missed some changed. *Fix : the live status test was launching broks in a random order (dict? strange!), now it's ordered
* *Fixed and rearranged the maintenance_period code so downtime is started and stopped at exact times
* Fix: next valid after a timeperiod was one minute after the end (like 09:01:00 for a 09:00 end of period. Now it's 09:00:01, because the whole minute was lost
* Add: manage in livestatus the update status for satellites. (you see, I do not talk about adding tests too of course :) )
* Add broker in livestatus (with test, but should I continue to say I add tests for all of this?)
* *Add : poller in livestatus tables *Fix : livestatus update service can failed due to a missing service (update before initial? Strange!) so just warn and pass
* Add: reactionners in livestatus (and a test)
* *Add : scheduler table in live status (and test) *Fix : potential error in item.py fill data from class property dict
* Fix: problem with GET columns in livestatus code
* *first implementation of maintenance_period automatically starting a downtime
* *Add preparations for the maintenance_period (first write a test case)
* *Fix the maintenance_period test case. These periods are not inherited from the host
* Add : now arbiter raise broks states for satellites, initial and if state change too
* Clean : old broker interface in Arbiter : no mroe use, because arbiter push broks
* Clean : all check alive code in dispatcher. Now more object and easy to manage
* Clean : dispatcher code. Will need more clean
* *Add : livestatus module now raise external commands to broker, then arbiter take it, and dispatch them. *Fix : livestatus test *Add : more trace about error in module loading. *Fix : arbiter -> scheduler sending (was using a old parameter active)
* *Fix a bug where i tried to convert a database file path to an integer (strange...it did not work)
* *Fix a small bug in the status_dat module (parent property was not output as a list of names)
* *Fix a lot of bugs in the livestatus module, perftuning, better handling of host/service alert/notification history
* Update the ppa for ubuntu pacakge
* Add : parameter disable_old_nagios_parameters_whining to disable all warning and notice about old nagios parameters
* Add : now arbiter take external commands from brokers. (just need to raise external commands from livestatus mod now)
* Fix : missing linux doc in git...
* Add: Thanks to Michael Jeanson for the ubuntu package :)
* Fix : the status.dat name is status.dat, not data
* Now external command is stacking in arbiter and manage in bulk mode (no limitation here). The external command process is an object now
* Rename ExternalCommand as ExternalCommandManager before add a real ExternalCommand class
* Clean in all setUp calls of tests
* Add : test for external comands
* Fix: now conf got a real id, ninja should manage it, that's all
* Tag with a + the version so we know if user use a devel version
* *Add : definition of maintenance_period in hosts/services with inplicit inheritance (host->service) *Fix : missing files for tests in git. *Enh : factorize code for setUp in tests. Need more clean up in this point in others tests
* Add pid/subprocess clean on all daemons
* Add problem/impact brok export for services (with test updated for)
* Add brok informations for hosts problems/impacts. (Need service too, test for services and update_status if is_impact)
* *Add : now realms conf errors are catched *Fix: there was errors in realms for default conf :( *Add : now realms are "flatten" before being send from arbiter to schedulers (just string) *Add : now realms are broked (as string) *Fix : a failed tests in quick_tests did not stop the script!
* Add a first brok_transformation property so we will be able to send 'special' objects like realms or services/hsots without problem in broks
* *Add : test for resultmodulation *Simplify the resultmodulation so there is only resutnr code, no output match
* Add : doc about service_dependencies in services
* Fix: service dep less debug verbose
* *Fix : host/service/dependencies where not "fill by default values". *Add : new service property to define some simple dependencies (as notification), service_dependencies
* Fix: a ronin print
* Add : test case for check the hostgroups with minus in name
* *Fix : hosgroups with a - gots problem( it's a sign for expression) *Add : enable_problem_impacts_states_change so we can choose to apply impacts states or not
* Update doc for new hostgroup_name property capabilities
* Now 'complex' expressions are allowed in the hostgroup_name property of service (and result_modulation in fact). Thanks to python eval function : I can be the lazier dev that this app have ever saw :)
* *Add better handling of required packages in setup.py (pyro<4 in CentOS)
* Factorize some code in complex hostgroup matching
* Now add the hostgroup | matching
* Add a first version of complex hostgroup matching. First the & operator
* Add a test for status_dat module
* Fix: status.dat now detect scehduler restart and so clean previous hosts and services managed by this scheduler
* Now not warn about pyro where it is a shinken dir problem even for broker.
* Should crash with correct error if the shinken module is not found correctly, no miore pyro where pyro was good
* Update versions with 0.2
* Add a test for macroresolver and add some generics macros
* Add a generic Oracle database layer and now ndo/Oracle call it. Now it's time for ndo/mysql and NDO/Oracle to merge
* Update the ndo/Mysql with the new database code. More clean
* Backport the database code from merlin broker to a generic one so all modules will be able to use it
* Add a test for Mysql (need a merlin db so not in quick launch)
* Add a test for Mysql (need a merlin db so not in quick launch)
* *Add a first Global DB class because we have piece every where in modules and I don't like that. And of course I add teh test for it :) *Add a first sub class of DB : sqlite. And first test. Not finished
* Add a test for a first module : log
* Add a unit test for command and commandcall
* *Fix : bug in printing error in invalid command for hosts. *Add a unit test for hosts like for services
* Add a scrip to launch all quick unit test files
* Clean at the end of the end-to-end test
* Now setup.py update also the nagios.cfg et shinken-specific.cfg
* More end-to-end test
* Add first end-to-end test with simple launch and check
* Fix: same fix but for notification and event handler
* *Fix : missing check class in satellite *Fix : broker got problem with finding modules with daemon mode
* Little Changelog reorg with priorities in changes
* Update the Changelog
* Fix : NagVis was not happy about duplicate instance, and mysql do not like 0 value for an id..
* *Merge different distribution installation
* Update the ubuntu install doc
* *Add the libexec to setup.py and the way for installer to change where it install in the parameter file (and in resource.cfg too of course). *Fastorize the setup.py code with var, etc and libexec code
* Fix: now with --root the ini files are correctly changed for the packagers
* Bug : the conf file services-150h-1500srv.cfg was not installed. And some README change too
* Add a test for actions
* Fix: reenabled all tests for services
* Add a text about problem with python 2.4 and 2.5 with the livestatus module (sqlite3 in fact)
* Add services tests
* *Fix : last_check and next_check were not updated in Ndo/Mysql. Now Centreon is Happy. *Fix : bug in service for bad command error printing. *Add a unit test for services (not finished) *Add a way to get the --install-scripts= from the setup.py so we can update the default/shinken file with good value
* Fix: get the default/shinken var value from the VAR variable
* Warn packagers about the /usr/bin directory for setup.py and how to change it
* *Now the setup.py also manage the *d.ini files so the var value is modified by the one in setup_parameters.cfg when installing. So we can still test easily, and setup do not need file modification
* No more modulespath need in brokerd.ini. Will be easier for packagers
* Add a dummy test file
* Fix: Again status.dat should work after a setup.py pass
* Fix: now status.dat should work after a setup.py pass
* Typo : (Zoran Zaric) help file typos
* Bux Fix (Sven Velt): patch about recursive dir load and check timeperiod typo
* Add -for-test.ini files so we can still quick launch the app for test
* *Fix a bug in livestatus where "None" was shown instead of an empty string
* Fix chkconfig : add short description
* Fix: Add headers in init scripts for chkconfig (RHEL/CentOS)
* Fix: installation modules, thx David Guenault :-)
* Fix : workdir value in *.ini
* Synchronise comments with code
* Fix variable : replace SHINKENDAEMON by ARBITERDAEMON
* Set $ARBITERPID by lock_file in $SHINKENCFG
* Fix variable SHINKENCFG to /etc/shinken/nagios.cfg
* Test if files exist and check VERBOSE variable
* *Patch from David GUÉAULT: Update setup.py with the ini files and typo and missing dep in README
* *Add ".." to sys.path in shinken_test.py, because test programs didn't find pyro_wrapper
* Update README, setup.py and FOR_PACKAGERS files for the 2.4 compatibility
* Fix : No more Pyro <= 3.10 required in setup.py
* Finish to backport to python 2.4
* Add 2.4 compatibility for Arbtier and Scheduler. Great \!
* Fix : forgot the launch scripts
* Now all *d.cfg files are renamed *d.ini files. doc updated too
* Now clean poller/reactionner code. No more hard 3/4 version check every where
* Clean the broker code for pyro 3/4
* Now clean the arbiter code
* Clean the pyro 3/4 specific calls in scheduler daemon
* Add spec files for RPM from Stéphane Urbanovski. Thanks
* Update diag about excludes
* Add a doc about how exclude tp works
* *Now code can manage Pyro 3 and Pyro 4 (not at the same time!). *Should have some clean code now, need some help fucntion to register, get sockets, etc etc
* Use english term in function name
* *Add external commands ADD_SVC_COMMENT and ADD_HOST_COMMENT *Change keys livestatus' out_map from Classes to class.name *Add Testcase for livestatus downtimes and coments
* *FIX: crash in scheduler in the is_correct check
* *Use the idea of yoyz (Johann) to get a default/shinken file. setup.py will generate it. *Update init.d scripts with LSB ones :)
* *Fix a bug in status_dat_broker. (downtimes/comments were not written since the last layout change) *Add patch from Nicolas Dupeux. Thruk socket shutdowns are now handled in an exception
* *Add a true check about host loop (now raise error intead of just a log)
* *Bug Fix: add duplication check for elements (and groups). Only service is allowed to have duplicated (will Warning, but no error). *Buf fix : the default conf was false with duplicated hosts, sorry :)
* remove unused default parameters
* Typo fix in commentes from Nicolas DUPEUX
* *Fix a bug in notifications (more blocks if in downtime) *Fix the testscripts. (timecritical routines use do_sleep=True)
* Update the readme file
* Still doc update for Shinken
* Little update of the doc
* Fix: do not set shinken owner for false install
* *Fix a bug in the status_dat_broker (incorrect servicegroup-definition in objects.cache) *Fix testscripts so they now import from ../shinken instead of ../src
* Very important code. .... just for fun
* Enhance the setup.py
* Update the setup.py. Should work now on Unix based system quite right
* More work on setup.py
* First setup.py version
* Fix : now merlin is correctly filled with update program value
* Fix : program_start value was not accurate for export. Now it is
* *Fix a bug in livestatus. A Separator: in a request no longer changes the default separators for other clients
* Fix : ndo do not have command_file, so do not export it
* Update the doc and the windows files for the new layout
* Update launch_.sh scripts for the new layout
* fix: forgot some windows installation related files
* *Big change : new layout: **bin/ all daemons **shinken/ the library call by daemons (or other tools) **libexec/ checks **etc/ all conf **var/ all variables files (logs, temp file, etc) **external_commands/ : some exampels of external commands **db/ the db sources files for ndo and merlin
* change the passive checks way. Return checks in the launch_check so add a force parameter to be sure passive cehck will be eaten
* *Remove some debugging prints in the livestatus module
* *Fix PROCESS_HOST_CHECK_RESULT and PROCESS_SERVICE_CHECK_RESULT (launch_check did not work)
* *Add GET columns to the livestatus module
* Add checks for python 2.6 at minimum in daemons
* Update doc diags by Romuald Fronteau. Thanks a lot
* Add debug start scripts
* *Enhance how retention file update old parameters : instead of tagging which one we do not want, we tag in running_properties the ones we want to load. So far less errors with this!
* *Bug fix : bad format in satellite (nicolas.dupeux) *Bug fix : retention load was loading not good tab (impacts ones) and so cause problem with remove (not the good object!) (nicolas.dupeux)
* Fix potential bug in get next invalid date (can go too far, some are lower)
* Add a Changelog file
* *Add sticky acknowledgement. Non-permanent ack-comments are now automatically removed *More acknowledgement test cases *Fix a bug in ACKNOWLEDGE_SVC_PROBLEM ext. command. Sticky can be 0/1/2, not bool
* Reenabled all timeperiods tests
* Add a test for fixed monweekday dateranges
* Add a funky hard multi daterange exclusions test.(and it works great ;) )
* Bug fix in find_day_by_weekday_offset
* Reenabled all timeperiod tests
* Bug Fix: same bug than for the other daterange format
* Bug Fix : when a date was calcl before teh ref time for a weekday it was not recalculated, so problem
* *Fix a small bug in the acknowledgement tests
* *Add host acknowledgement and acknowledgement stickiness *Add more tests
* *Bug Fix : error in get_end_of_day. It was given the first secon of the next day, so some exclude make problem with it. *Add a timeperiod test (know you know how I find the previous bug :) )
* *Finished service problem acknowledgement. one more testcase *Add REMOVE_HOST/SVC_ACKNOWLEDGEMENT external command
* Remove unused tests
* Forgot the nagios_problem_impact.cfg file for testing
* Debug Hudson test
* Add a test.sh script for Hudson test
* *Bug Fix : shell like commands where not good :(. Thanks to Gilles Seban for pointing it and to Hiren Patel for giving a list of shell caracters (so we know if we should use shell or not :) )
* *Began implementing ACKNOWLEDGEMENT (test case, blocking of notifications)
* *Bug fix: external commands to send checks should work now *Still try to correct downtime test..
* More factorize tests
* Begin to factorize tests in a Class
* Add a problem/impact test
* Add Zoran Zaric to thanks file, and update David greetings
* Bug fix : impact code make logic error in HARD/SOFT. Thanks Gerhard test cases
* Ok now broker get broks from pollers and reactionners
* Broker now load pollers/reactionners link (should be factorized)
* Now broker get links for sub pollers and reactionners
* Now poller and reactionner raise broks and can send them. (just need the broker to ask)
* *Bug fix : Arbiter do not more crash when scheduler is down and broker is up (not initialized make a missign parameter) *Give Broker a way to make broks :) (like for log) *Now external modules can return objects (from now nobody use it, but it can be useful in the future)
* *Bug fix : missing now definition *Changed tab with space *remove unused parameter
* Bug Fix : cehck orphaned was badly status set. Thanks Pylint
* Fix 2 tests (downtime is still no ok)
* *Bug Fix : there was a bug in dep checks launch by teh last commit. *Try to correct test of notification
* *Add brok update in impacts *Try to correct the notifiations tests
* *Bug fix : There was no more PENDING at start (impact?) *Now new checks are raised from the objects, and not just return. Same for notification and broks. It will be easier to raise broks from a deepiner method
* Query replace : incident to impact
* *Bug fix : host in unreach were set DOWN un state, but unreach in state_id. Now it say clearly it's UNREACHABLE. *Now problem/incident change states when apply. But it do not interfer with the standard check way of doing (or at least should not)
* Bug: retention was loading services objects from retention file. It's not good at all
* Bug Fix : in problem/incident, only be an problem is we REALLY are the root cause. :p
* *Fix a and -> or bug in the dependancies *Add a print debug for host/service (service will print host name too) *Add a first version of the problem/incident algorithm (just make links and print, do not change status). *need more test :)
* Add reverse link for dependancies
* Add some init.d scripts
* *Fix a bug in livestatus. state_type is now a number instead of HARD/SOFT
* *Fix a bug in the livestatus module. Eventhandler command is now serializable *Fix a bug in execute_unix. If there is an exception during plugin execution, use it's string representation as plugin_output
* *Fix a bug in the livestatus module. Multiline input is now possible
* Fix git conflict
* nothing
* Still cleaning the dispatcher code. Now remove the is_active flag, unused in the way we check if all is good
* Begin to clean more the dispatcher code, it look like C sometimes
* Less verbose and remove unused bloc in dispatched
* Bug fix, a missing print
* Bug Fix: now nested macros are managed (like USERN in ARGN macro)
* Patch from David GUÉNAULT about stopping all brokers
* *Add json outputformat to the livestatus module
* *Update THANKS after the repository cosmetics patch (file permissions)
* repository cosmetics
* Correct launched/lanched everywhere
* Patch from Grégory Starck about worker typo
* *Fix a forgotten ':'
* *Fixed scheduler.add so that master notifications (without contact) don't create a status brok
* *Renamed variable got_status_dat_module to got_simple_log_module
* *Redesign of the notifications
* add Nicolas DUPEUX in THANKS file
* *Patch from Nicolas DUPEUX about typo correction in service.py
* Notice about unused parameters and explain why it can eb removed from conf
* Catch non standard return code in actions.py so we can add stderr to the output for such cases
* Add check_period implicitly inheritate to service from host
* Add max_plugins_output_length parameter to limit the checks output size
* Now arbiter host_name property is not mandatory. But WARNING : for a multiple arbiter conf, it must be set
* Small comment changes
* Updated cfg documentation
* Add Luke L to the Thanks file
* Add documentation about date range format because it was not documented
* * Reduce CPU comsumption of livestatus broker (thanks flox for the patch)
* Update the nagios to shinken migration file
* *Change the way broks are send from Arbiter to Broker : before, the Broker connect to the Arbiter, take broks like for schedulers. But Arbiter also connect to broker. That's a nightmare about hangout. Now, Arbiter push the broks. It's far more easy and efficient
* Add a pas about changing Nagios2 properties to NAgios3 ones
* *Remove the Beta from the version string. It's too perfect to be called Beta :-)
* *Add template handling to servicedependencies *Add test_dependencies as the regression test
* * "Hack" the old nagios parameters : now status_file and nagios_log are catched. If the user defined them, but do not defined the good broker modules, we create them "on the fly". I hope one day we will remove it... * Less status_dat verbosity :)
* *Add a last_perf_data + macros to access last perfdatas as in https://sourceforge.net/apps/trac/shinken/ticket/76
* *Fix a bug in the npcdmod test case
* *Add a broker module npcdmod (plus test_npcdmod) which writes a perfdata file suitable for pnp4nagios
* *Fix : configurations files can be mix if the previous do not finished with a line return (Sebastian Reimers)
* I forgot : last bug find by Sebastian Reimers
* Fix: Correct a bad default arbiter pid configuration
* *a HUGE clean on shinken-specific.cfg file. *add a README file *update THANKS *add a little note about how migrate from Nagios to Shinken *add a hint about how solve 'cannot find my own arbiter' error message
* Fix stop all
* *Bug fix a missing save of shinken-reactionner.py about path in relative mode *ad bin directory with some bash scripts to launch/stop the whole application
* Forgot the path property in scheduler.. sorry..
* Forgot the scheduler daemon last commit...
* *Add relative paths features for *d.cfg files : now paths in it can be relative
* Thanks to Gerhard relative path, now we can have a easy portable sample configuration
* *Global external commands now create an update_program_status_brok instead of program_status_brok
* *Add two missing operators in livestatus.py
* *Add Maximilien Bersoult setup.py for testing, but we are not ready for the layout *Add Gerhard in print screen *clean up conf sample! *NO MORE nap :)
* Bug fix about a thread that change a dict about schedulers in broker
* *Better copyright authors *replace hard coded python by env call
* *Another small bugfix in livestatus.py (GET services Columns:host_notifications_enabled) *Fix bugs in external_command.py. Replace host/service.enable_notifications with the correct host/service.notifications_enabled
* *Cleanup and Bugfixing in livestatus.py (operations compared int to str, now datatypes are converted) *Add more functionality to livestatus.py (match operator) *Thruk should now run without problems, except for the functions which require logfiles access
* *Fill SCHEDULE_SERVICEGROUP_HOST_DOWNTIME and SCHEDULE_SERVICEGROUP_SVC_DOWNTIME with code *Fix a bug in livestatus.py so that all columns are sent when there is no Columns: statement *Add speed to livestatus.py when there is a Filter: statement *Add COMMAND statement to livestatus.py so Thruk can send external commands *Add lookup tables for hosts and services in livestatus_broker.py so update broks are processes faster
* *Finished the hostgroup livestatus attributes
* *Add num_services_* to the livestatus hostgroups table
* *Add more hostgroup attributes to livestatus.py *Start cleaning up unnecessary code in livestatus.py
* *Also move objectscache.py into modules/status_dat_broker
* *Change the default setting of has_been_checked to 0 (Thruk did not show pending checks)
* *Add minor enhancements to livestatus.py *Correct test_livestatus.py so it finds livestatus.py in the new directory
* *Remove debugging print from livestatus_broker.py
* *Moved status.py in the status_dat_broker subdirectory
* *Bugfixes in the test_livestatus.py assertions
* *Add a livestatus broker definition to shinken-specific.cfg
* *Remove livestatus code from status_dat_broker.py *Put the livestatus broker in it's own subdirectory livestatus_broker
* *Remove the livestatus module from the status_dat subdirectory
* *Add a new file livestatus.py which implements parts of MKLivestatus *Modify status_dat_broker.py so it listens on a network port and answers livestatus queries *Add a file test_livestatus.py with livestatus test cases *Modified the __str__ method of Comment
* Add a first ack managment
* Add the architecture animation in the doc
* Add a documentation about coe hacking
* *Add Icinga guys to Thanks :) *Bug Fix in flapping : bad status, not status_code *Add flap_history to change the hardcoded 20 states history of flapping *Add doc about this new property
* typo
* Doc for poller_tags
* *Bug fix : missing check_command name log when it was invalid. *Add poller_tag/tags for commands,services,hosts,pollers. Now a command, or host, or service can be explicitly send to a poller this can be useful for DMZ case, or even for a Windows poller and a Linux one (just tag commands here). This allow 'cutting' pollers in a realm in fact
* *Add comment_type attribute to the Comment object
* Final (I hope..) style.css version
* New style from Nagios-fr doc that solve navigation header styles
* *Bug fix : modulespath of brokerd.cfg was badly named. *Add configuration example for load balanced and high availability environnements
* *Add a Windows installation doc :)
* *Add the batch fiels to use M$ Resource Kit to install Services (still need doc) *Add reg to change parameters of services to get good parameters
* Do not open fifo on windows..
* *Add a logo in the left part of the xhtml doc in style.css *Add the pdf doc in the git repository *Some clean code in doc
* Dome doc update, and a wrapper script for nagios call
* *Change timeout for satellite connexion : now a ping-like call wait 5sec, and a data-call timeout in 120s. So less timeoutlock
* *add a full_broks call from Broker to scheduler for the initial connexion (or new scheduler) so the broker will always start with a full brok view (usefull for status.dat modules for example)
* *Fix a small typo
* *Fix bugs in scheduled downtimes *Add viability check for notifications *Fix bugs in delayed notifications *Add testscript test_notifications
* *Doc : Big doc update : change in the distributed and high availability part *doc : objects definition for : arbiter, realm, scheduler, poller, reactionner and broker. *doc : realm property for hosts and host_groups. *doc : more diags (just the png in fact)
* *Correct handling of relative pathnames in cfg_file statements. They are now relative to the main config file's diretory. *Corrected the 1r_1h_1s sample config files
* *Add some minor corrections to the downtime test case
* *Rename i_was_down attribute to in_downtime_during_last_check *More checks in test_downtimes.py
* small doc update
* *Bug fix : Huge memory use for broker/status_dat module because we get timeperiods/contacts in hosts/services/contacts and we do not link with real ones. So 1000 services -> 2000 timeperiods, etc etc Now timeperiods broks are send before contacts, before host, before service. So we can link without problem. *Buf Fix : execution time was with a bad name in status.py, now it's ok
* *Less verbose *Bug fix : an error in split command for negate, now use shlex *Bug Fix : host and service can miss check_period is passive *Bug Fix : No Utf8 caracters get removed *Bug Fix : max_check_spread was in second, now in munutes :) *Bug Fix : bad string format in service stale log *Bug Fix : the arbiter now take it's working dir in the user defined home, not the one that launch it (like root..)
* *Fix the svc downtime testcase
* ramsch
* *remove leading and trailing blanks from commands (which can be caused by unused $ARGx$ in the check_command)
* *Close filedescriptors befor executing plugins
* *Rewrite objects.cache until no more initial object status data are received (large installations could send initial_status-broks after the first status_update_interval)
* Simplify the autoslots by slots
* *add class Comment
* *broker now gets broks first from arbiter, then from scheduler (external commands must appear first in the logfile) *eventhandlers are now executed during scheduled downtimes *bugfixing in the downtime code *added downtime start/stop notifications *after a downtime ends and a service is still non-ok, a notification is sent *simplified the is_notification_launchable functions *enhanced the test file test_downtimes.py
* *Add a new file test_downtimes.py for testing the scheduled downtime feature. *Add a very simple configuration in test/etc/1r_1h_1s consisting of 1 router, 1 host and 1 service. It can be used to write test cases
* *Remove "if notifications_enabled" from consume_results because this is already handled in create_notifications()
* DOC: XHTML - Blue for title
* Doc: add xhtml export with a cool style.css + bug fix in docbook
* *Add fixed and flexible downtimes *Downtimes now create their own comments *moved sending of downtime-related broks from externalcommands to scheduler.add
* update_downtimes now have it's own call every sec by scheduler
* *__slots__ are now created automaticaly by looking with properties and running_peroperties of Host and Service. *Bug fixe: TypeError is nto catch in retention load
* *add scheduled downtimes to status.py *fixed downtimes are activated through a new function update_downtimes in the scheduler *flexible downtimes are activated in scheduler.consume_results depending on checkresults *host and service got methods for logging of downtime events
* DOC: diag about how notifications works (with level, etc)
* Add ref to png in doc for key functions like cutting into part of sending configurations
* DOC: begin to change the main config file documentation
* Doc : modify the start way
* Begin to adapt doc
* *Import Nagios doc in doc book format from svn checkout svn+ssh://user@forge.nagios-fr.org/docnagios3 The licence is in GPLv2
* *scheduler now creates initial status broks also for timeperiods and commands *objects.cache now contains service/hostgroups, timeperiods and commands *added an iterator to the Commands class
* Scheduler now take a conf only if he do not have one, or the conf is a new one
* small code indentation change in shinken-scheduler + small pylint pass. You can forgot this commit
* Pylint arbiter code
* *Add the Arbiter spare managment : an arbiter is master, the other is a spare. The master ping the spare every loop. If the spare do not listen about the master for some time (hard coded for the moment) he take the control and run. If the master returns, he ask the spare to get out, HE is the master. *Conf is send from Master to spare with a magic_hash (random int). If the spare have a conf but not hte good one (old conf from a previous master send) he drop it and get the new one. The master always refuse conf. HE IS THE MASTER! *TODO: the spare maybe run without ever eard about the master (take the already load conf) after a long time? Maybe a run parameter?
* * Fix a small bug in Downtime.__init__ trigger_id is int not bool (downtime.py) * Fix a bug in the correlation of found element and expected type in the external command parser (external_command.py) * state_type_id is now correctly updated (schedulingitem.py) * Add instance_id to the config sent with program_status_brok (scheduler.py) * Add some quality to status.dat. Now next_chk is updated with the new type of brok. (status.py, status_dat_broker.py)
* *Add a new brok type : next_schedule *Factorize some brok for notification code
* *Now RECOVERY are send to just people that have been notified (and if a notification was not already send, theses contacts are not add to the list). *Bug fix: if host was missing contact_groups, big problem in the send to scheduler. Now it's filled by a default value if missing (even if required). To be check for no bad behaviour! *Bug fix: catch case where a reactioner return a unknow action id
* *Remove some propeties from broks that cause pb with deepcopy *Bug fix : host with return = 2 was set UNREACHABLE instead of DOWN (down = status_id =1 in nagios.h...). *Add a dependancie check to set ost in unreachable (status_id = 2) if needed *Bug fix : external commands FLAP detections was incorrect (bad service/host popertie called) *Begin to factorize Merlin/MySQL and Merlin/Sqlite into one module (switch with backend property) *More ammping for Merlin modules *Add a last_update property in merlin modules (host/service)
* * fixed a small bug in the printable representation of an eventhandler object
* * fixed two bugs in status.py so that the current state and event handlers show up correctly in the status.dat file
* * Added objectscache.py which is needed by the status_dat_broker to write an onjects.cache file
* * Added more properties to the initial_status_broks * Prepared sending of timeperiods to the broker * Added code to status_dat_broker.py so that it can write an objects.cache file. * Renamed the path parameter for a Status-Dat module to status_file (like the nagios.cfg parameter)
* * fixed a bug which dropped recovery notifications
* * changed Host/Service/...properties and running_properties. A new flag fill_brok now determines wether a property will belong to a (full|update)_status_brok or a check_result_brok. Property names will now be sent in their original form. It's the job of the broker modules to rename them if necessary. * changed the host/service_perfdata_brokers. They now use the new property names
* *Add a way to have multiple -c in shinken-arbiter : so someone who do not have an access to it's nagios.cfg (like with Centreon or OP5) can't add it's own cfg_file and so cannot use advanced capabilities of Shinken like multiple scheduler. But they have an access to /etc/init.d/nagios, so they can change the call to nagios and add another -c in it :) *Bug fixe : watch Exception when file of -c was missing
* *Bug fixe : in the NDO schema, data are not in unix format -> NagVis was not happy :) *Now the program status is update every 10s (for NagVis again) *implicit inheritance for escalations from host to services
* Add diags about the pack creation and agregation into confs
* * corrected a small typo
* *Code factorization for Linkify and Explode part
* * Fixed a small bug in create_notification which could fill up an array with unused crap
* A big thanks to Gerhard that fix bugs in the quite complex consume_result function :)
* * Changed the order of notification and event handler execution. First notification and then event handler
* * added a log entry when an event handler is launched
* * typo found. added a missing _ to __class__
* * worked on the SOFT/HARD/attempt/eventhandler/notification-logic
* *Add escalations from serviceescalations and hostescalations (in explode) so after explode, service/hostescalations are useless, because they are transform into simples escalations. *Link escalations with hosts/services if need
* * fixed a typo in the last commit
* * bugfix in macro resolving. int attributes must be converted to str, e.g. $SERVICEATTEMPT$
* *Start of escalation managment : there will be a uniq escalation class that do something. serviceescalations and hostescalations will just be 'exploded' into escalations into the properties 'escalations' of hosts and services. *Bug fix : hostdep were not exploded. Now it's ok
* comment on a not so clear way of doing for notifications
* Manage the first_notification_delay parameter
* Bug fixed in get_name of services for logging and less verbose for merlin's modules
* Bug fixed in -v :p
* bailout if the cutting into packs say the configuration is incorrect
* *More Nagios like logs *Add the -v to shinken-arbiter *catch more errors in configuration reading *Bug fix : modules instance can raised exception in init(). Now it's catched, an the instance killed
* Add a log entry when there is no valid futur time
* Manage the *_max_check_spread options in the first scheduling
* *Bug fixed when arbiter object was not in conf *Add logs entry like Nagios ones
* * small bug where an eventhandler did not get the correct state_type
* * fixed a bug which blocked recovery notifications (host and service)
* * handle notification_interval=0 (do not schedule the next notification)
* *Now broker take broks from arbiter. *The Log can have more arguments like format or name for normal format. It is not finished because we must keep a Nagios compatibility, so it's not so simple
* *Add the Arbiters in conf (Arbiterlinks in code). So now the shinken-arbiter know about it, and other arbiters *Now broker get arbiter links for connexion only if configured too
* *Bug fixes : services groups in ndo/MySQL/Oracle and in couchdb raise error : Fixed *First add of the Log system : logs are broks for schedulers and now Arbiter
* * commented out left-over imports (pexpect is not part of default python)
* * also handle servicegroups without members
* * hostgroups without members now pass the config check
* Just code clean for broker name to instance
* *Code of module is now in modulesmanager to be factorized. So now Broker do not know how modules are managed. He just add for queue or to manage broks
* Begin to change 'broker' of module to a better name : module instance. Also add a properties to module, htat is add to instances too
* Very little code clean
* *Change in the modules capabilities : now they can be in their own directory, in addition to the old simple file. It's cleaner to do this : the import thing is done with the __init__.py file, that try to import the code of the other .py (an send None if import failed like with bad dependancies). So bigger modules can be written : it can be more than one file in a module directory, so now we can make trully clean module code :) *So I move current module to this new way. *The modulemanager now catch error of bad import of such directories (Warning)
* *Add try/catch for status file creation *Now broker check avery sec for dead sub process. If so, close the queue, terminate the process and remove the module
* Patch from Gerhard : the status file is writen to a temp file, then move to the status.dat
* *change the way status.dat is generated : now it's an external broker module. *External modules need more work to be good, now there is a mix in modulemanager and external. It's not clean. *There can be a problem is the broker is restart (or go to the spare) : it do not have it's data anymore. We must think about a way to 'resend' initial_broks every Xsec. This is useful only if we use a module that is stateful (no database to remember previous status), so the option must be diable by default, such modules should not be too use, and even use, it's when a broker is restarted that the problem occurs. Maybe such a demand can be something the broker ask to scheduler when it first connect??
* *Now Broker get broks every 1s and put broks into self.broks. Then loop on it with manage+wait_conf(0sec)
* Add doc about the future way of broker module
* Add escalation object, but just the def/link part
* *Add a true check of correct conf. *Now groups are 'fill_defaulted' *Now, when the configuration is incorrect, the arbiter quits
* From Gerhard : fix-the-HARD-SOFT-attempts-logic
* *Patch from Gerhard : host were in 2 realms! Thanks Gerhard. *Bug fix : a realm without schduler do no more cause a big crash
* Bug: duration_sec was exported in broker
* *Some good Gerhard patchs : **add-host-macros-TOTALHOSTSERVICES-LASTHOST-HOSTD **add-service-macros-LASTSERVICE-SERVICEDURATION **bugfix-in-pack-creation-for-realm-load-balancing **handle-non-existing-retention-file
* Add a get_next_invalid_time_from_t in timeperiod so now the exclude is well managed (no more slow)
* Add a first version of exclude support in timeperiod. It's a very dump an slow one (jump from one minute to one minute for testing...)
* Export Daterange from timeperiod.py to daterange.py
* Add a host perfdata module
* *Rename plugins into modules
* *Add the merlin db support in sqlite *Bug : a copy in not enough in couchdb, need deepcopy
* Add resultmodulations for host and services. Replace the critical_is_warning, inverse_ok_critical and hot_period
* *Patchs from Gerhard: **allow hostgroup definitions without a members attribute **allow servicegroup definitions without members attribute **a non-existing members attribute is pythonized to an empty list
* *Add a first couchdb plugin. Couchdb is a document database server. A document here is an object like service or host. The code is not optimal, but not so slow. It is quite easy to read. *it does not use creadential (becasue I do not use credential in my test env for the moment..) *add the instance_name from scheduler_name in configurations send to schedulers
* Remove unused debug function
* Data driven creation in config too
* *Again great patchs from Gerhard Lausser. Thanks again :) **create a member attribute if it does not exist in itemgroup objets **check if rec_tag exists bevore deleting it in servicegroup **changed tmp_sg to tmp_cg in contactgroup.py (typo) **allow "same host" dependency by copying host_name to dependent_host_name
* *Add a hot_period in host/service (implicit inheritance) : if set, in this period, the critical_is_warning property is not apply. It can be use for low production system : You've got a financial server used only in the last week of the month. You do not want critical alert in all others weeks. Now you can set critical_is_warning in the host, so all services that do not set it will inherit it, and you set hot_period in the last week : now services for this host in the last week will be Critical (if return ==2). In all others weeks, it will be just Warning
* No more pygraph dependancies :)
* My first two external patch. Thanks to Gerhard Lausser! *Update THANKS *add the cfg_dir handling in config file *add the trailing \ handling in config file
* *Add a critical_is_warning option for host/service that can be used with implicit inheritance. Critical return are change into Warning. Can be usefull for Qualification host (Critical is for PRODUCTION!!). *Add a inverse_ok_critical service option : can be used to replace negate (passive cluster service)
* *Add a polling_interval to pollers/reactionners and brokers so they do not use a 1s poll. With it, admin can set priority to pollers : a quicks poll poller will take more checks than a slow one (5s for example). *Add a weight property to schedulers : now we use a weight round robin dispatching. Hight weight -> more hosts. For example, with a 1500host conf, you can set sched1 with weight=2 and sched2 with weight=1, Sched1 will take 1000hosts, sched2 500 (if the dependancies allow it)
* Put shinken specific objects into their own file
* Satellite code indentation clean
* Satellite code clean
* *Small clean in satellite/worker code and clearer names. *TODO: make a returns queue by scheduler : Why keep checks in progress for erase them after with the return?
* *Clean the adjust load behavior. Now just wait more time if queue is notempty. But how know if we must create new workers? Must have a wish_workers back :) *TODO: the orphaned check do not seem to be enouth : poller just do not take thems. Why?
* *The satellite cannot have all process with it. It just too slow to fork. So we keep a low number of Workers (like 16) and they fork(). Their number is fixed at the begining to min_workers) and they have processes_by_workers allowed process in running. *Now timeout for checks, notifications and event handlers are sent in the object. *The code still need cleaning in the Satellite class. *How to know the load of satellite? Not easy to say... TODO
* Hum... problem of too open files (for pipe of subprocess). Need to put this value in parameter and play with ulimit
* *Began to remove the workers : the poller master can do the spawn and watch for all sons himself. From now, There are still few workers but they will be removed. *compress SQL code..
* UFT8 support in MySQL dabatase export
* Add creation file for database
* *Now Oracle Plugin can have oracle_home in it's configuration and set ORACLE_HOME at run time. Sadly, the LD_LIBRARY_PATH cannot be set at runtime, so user must be sure to have the good directory in ld.conf.d. *Now if the import failed in Oracle, the broker is not get, but do not more crash
* Add a NDO/Oracle plugin
* Add a name propertie to plugins for broker and now if a plugin raise an execption, the broker jsut kill it but do not more die
* *Now properties of *links can have to_send. If set True, it's put in conf['global'] that is send to satellite. *Now plugins for brokers are in globals. *Now pollers and reactionners have min_workers and max_workers (in globals) for ... min workers and max workers :) *catch errors in ndo/mysql plugin
* *Add signal handling for exit (satellites clean their workers and daemons) *A worker have it's own queue (less contentions? maybe yes, maybe no). To test
* *Add orphaned checks *Better detection of died worker -> del from workers
* Now arbiter take arguments
* *Add the plugin object : plugi_name and plugin_type are mandatory. All others parameters are just put in the object. The plugin are link to a satellite and sent to it. *For now, only the broker wan use it. The plugin manager create association betweens plugins need and modules loaded. when it ask for brokers (will be renamed) it give it the plugin object so it can get it's options from it :) *Numerous plugins of the same type can be load n the satellite (for example 2 perfdata files)
* *Rename plugins to pluginsmanager because there wil be a plugin.py soon. *Now plugins manager take a type of plugins to load (like broker) so it will load only *broker.py files in plugins
* *Change daemon way : now Daemon is a Class and shinken-* inherit from it. *Now the config file is not mandatory. *Factorize a lot of code (read conf) and now Shinken-* have a properties dict with all theirs properties and how to pythonize thems. If a prop is not in the config file, it's the default value that take (pythonized)
* Add arguments line and conf file to poller, reactionner and broker. It also do the daemon mode and debug mode (all prints to a file or /dev/null)
* Add a daemon mode to the scheduler Add arguments to scheduler too: -c --config -d, --daemon :Run in daemon mode -r, --replace Replace previous running scheduler -h, --help --debug Debug File
* Add the resources file managment. Macros USERN are in Config Class
* Make somme memory tuning (slots for hosts) Fix problem in Check/Broks interface of satellites when conf were resend to scheduler (need to close the previous Interfaces) Speed up service lookup (host then services) Remvoe print from ndo plugin
* change the worker->satellite communication with a Python Manager (list). Fix bug: Clean the thread created with the queue for dead worker too
* Correct a popen pb with no file. Add the begining of the ndo plugins. What a difficult schema versus Merlin..
* Members of groups can be add twice. Add a uniq pass in the linkify so there are only one element
* Add some missing broks and begin the ndo part
* Forgot the namein default satellites
* Change the name propeties of satellites by good ones (scheduler_name, pollername, etc)
* Add the new logo (Thanks to Romuald Fronteau)
* Change the worker number get : use a load in 1min to get it instead of instant value. Also remove the /bin/sh call because Nagios do not do it.
* dd a Load class. It will be use for having a stable worker number and to make stats more accurate than number_of_object_since_gegining/time_since_begining. The code is inspired by Advance Load average (a very good project, look at it... yes.. same author ;)). Maybe I can update advance load with this code later...
* state_id was missing in broker, and so in merlindb (not good :) ), now it's OK. Change killing subprocess way and add more timeout (must be a parameter)
* Add a smarter way to get the nuber of workers (avg_check_time*queue items). Can be improved with killing workers when there are too much, and get load1 values of check_time and queue
* catch problem in queries : they were not protected! Bad Me! (can be still not good, but less not good... Begin to review the number of workers : good for very quick checks, bad for too numerous one, we must find the good value between all of this, and the queue is not good enouth for this. Must see if killing process is good too..
* Test a real conf (mine :) ) and so catch a lot of little bugs like in error catch or passive problem (no check_command for example)
* Creation of the thanks file with Romuald FRONTEAU for it's incoming logo :)
* Change the unix exec to a other way, so more perf (200K). change some timeout and print calls
* Factorize some new code of checks to notifications/eventhandlers in actions so now notifications and eventhandlers can be launch in Windows
* more comments
* Fix 2 bugs : is_correct called by schedulers kill it (because of lack of satellties in it's conf) and a lack of detection of a not enouth satellites
* Now a conf without realm or scheduler/poller/reactionner/broker will create a default one (realm Default with all elements that do not have a realm, and satellites on localhost with default port
* Solved bug where conf were not dispatched in dispatcher. ... Anything else? ... ok : Works on Windowsgit diff!
* Still pool in doc
* Rename executable so they are tagged Shinken for more readability
* Little print bug in merlindb plugin
* Change names of diags because pools are no more, they are realms
* Ok, now pollers/reactionners and brokers manage realms correctly. They can have a manage_sub_realms so they take actions from schedulers from sub-realms. The broker need really to take more functions from Satellite.... I think some values like 'active' can be clean and some name changed to be clearer. But that's cool, we've got the fully dispatched high availability Architecture
* Now reactionners manage the manage_sub_realms options (with default values). It won't be in potential_reactionners for sub realms, so they will not have cfg_id of theses realms. It also fix a bug where idle satellite get a wait a new conf at avery loop. Now it got one time and that all.(if fail to send, the next loop will be the good). All rady for pollers and brokers
* Nearly ready for new way of dispatch for satellties. Just need to add more kind to the lists. But before, make the managed_sub_realms a reality
* Prepare the new managment way for others satellites type
* Change the check_dispatch function. The first loop will be removed when all satellites will be managed in the new way of conf (realms). The check of schedulers confs are cehck by looking at conf and not indirectly by schedulers (sched dead->conf unassigned is less hard to read thant conf->sched==dead -> conf unassigned)
* Now a failed satellite will be reach one a look (alive) and not for others functions that need connexions
* Now dispatch is called only when need. Sched spare do not raise a dispatch where it do not need for it
* Broker do not try to connect to no active schedulers, my terminal thanks it..
* Catch integrity errors in merlindb. Reactionners do not raise dispatch when it do not need and when we remove a sched_id to a reactionner, now we check if it will still have a sched to look at. If not, we ask it to wait a new conf
* Add a cross check for reactionners : if it managed something I do not whant, I ask him to stop it. If it do not manage what I want, I restart a disaptch of this configuration. quite cool :)
* Begining of satellites management with realms. No spare for the moment
* Broker do not have full satellite values... Bad broker..
* Oups, satellites were broken :p
* Little code clean
* rename Pool to Realm so do not confuse anymore with poller..
* Sched spares are managed. If a sched is down, it will use the spare of it pool. If still no spare available, it will use the spares of higer level. Cool isn't it? :)
* Ok, now confs are dispatched in the schedulers of their pool. Need to look at spare, and to satellites with inner_pool
* Now admin can tag a pool default. It will be used if host do not have an pool
* ok, now packs are **really** dispatch in pools :p
* Packs are mixed and dispatch in confs. Confs are dispatch in pools. Now pools have their confs and exacly the number of schedulers they have. Now need dispatching of conf by looking at pools
* Link between satellites and pools
* Add pool propertie to host and hostgroup. Now a hostgroup can be set to a pool, all hosts in it will be apply with the pool. If not agree with the pool value, the host keep it's pool, but raise a Warning. Now we can start the dispatching things :)
* Add the pool class. Pool can have a pool_members with other pools in it. In a recursive way, we get all subpools and add them in the same level at the pool_members of the first pool level. Schedulerlinks/brokerslinks/reactionnerlinks/brokerlinks are now connected with pool. They have one and only one pool defined
* Manage loops in groups callings eachs others. Maybe we can factorisze more the code
* Update the doc for pools, now pools can be included in another ones
* Add doc about pools (pack of scheduler/poller/reactionner/broker)
* Now satellite will not ask scheduler with no conf for checks or sometings. Dispatcher send the active information in conf for satelites. And now Pyro is not multithread in satelittes. dispatcher do not try to resend conf to every one on normal dispatch just for a spare without conf. :). Still broker to go in the satellite class
* pygrath change AGAIN API... Satellite try/catch for some rare case where con is not set, reset back the cache for timeperiod. States are HARD at the program start
* Add docs for external commands forward in specific or global case
* Some macros fixed and doc added for queues managment (reactionner, poller and broker)
* Little update to diags
* New diagrams for spare managment
* Oups, I forgot : pass the 10K lines
* There was a bug in timeperiod (None value for daterange None but good values for others datareanges...). Complete the spare managment : now zombies elements with conf but dispatcher think it must not have one are find and kill (just wait a new conf). Like if a master die, a spare take teh conf and the master was just network down but still running. It come back, but the dispatcher give the conf to spare, so now master will wait a new conf, that all. So no fail back. Maybe we can think about a fail back feature
* Add a timeout for satellite and scheduler connexions. Sets to 5 seconds
* Add a first spare management : no fallback and if the first was just a network link down but no process crash, it also run. Need to send to no activ shced dummy conf so they do not do anything after
* a little clean in the files
* Manage stalking for hosts/service. By default, no stalking in options :p
* Add event handlers for host/service, but not the globl ones, just the local ones
* Update doc for spare managment. Small service code clean
* Add external commands to add command in running. Add the reversed_list creation in configuration cutting. Now we've got the adaptive monitoring. Great
* catch error for retention read if file do not exist. Remove multithreading for Pyro : python do not do real threading, (gil) so no perf boost, just more problem. No threads, no problem. :) Still 100K perf :)
* External command file path is from conf now
* Add numerous external commands. Begin adaptive monitoring : timeperiods can be changed at runtime, need to do commands
* Add on demand macro resolution, even group ones. Not so difficult I thought
* Add the custom macro resolving. Custom macro are in UPPER case, so we add upper()
* Forgot a py file for satellite link :p. Add the retention wirte/read. It jsut push/read all status info, not the checks in progress for the moment. For distributed scheduler, it just set status to local known elements. for the future, need to put info to others schedulers
* Less Verbose and renamed actionner to satellite
* Factorize links Class (schedulerlink too). Link class need to be more Object, with not a is_alive, but a check_alive and then read the object. Same for put_conf (have_conf in it)
* Add a void file for git so var is now in repository
* Now satellite lost is OK. When it came back, it get a new full conf of schedulers. So satellite spare are not manage for the moment
* Clean Arbiter code
* Add the dispatcher Class. Now Arbiter do not directly manage the conf dispatching. It uses a dispatcher for this. for the moment, only schedulers conf are really managed, so schedulers can die, satellites like pollers not for the moment
* more clean
* no pydev.
* Now notifications are add to host/service and del when return. It is usefull for recovery : it del pending notifications not launched
* code clean forget :p
* Now notifications returned by reactioner are taggued zombie and clean after. The command is update just when need : at the first launch, and just at the launch for notification_interval. So information is always fresh
* Add a recurrent dict in schduler for all functions like consume or delete zombies. Now we can just change the tick number to get a function called every 5 seconds for example. So need to change the get_cnf function to import argument from configuration
* pylint pass
* Ok now notification use the direct ref like Checks. Notification gived at the reactioner is a shell copy (just id and command). The return is mixed like Check in the original Notification and then proceed (launch a new notification or not?). so the code is simpler. Now more notification work can be done
* Now checks send are just shell with tiny info in it : just id, default value and the command to launch. So the original check stay in scheduler with a real ref (host/service) that is not send in poller... For consume, the ref is find directly
* Update check documentation, now all status are draw. Begin to clean the notification and check calls because it just sucks now. (too complex to manage : not good)
* Add doc for check dependancies and how it works
* Factorize launch_check for host/service in schedulingitem
* Factorize in_checking function
* Move the raise_notification into scheduling_item because it's nearly the same things for hst and service
* Mode clean and comments
* Change resolv macro call : now give a list of data, and function will get Classes to get macros by looking at elements class. So less arguments in calling and more flexibility. Less code too. Add more Pylint change too (comments etc etc)
* More clean with pylint
* Pylint pass for a clean code, more comments and aven a bug resolved in the cutting function (a previous h called instead of a service.host). Thanks Pylint
* Now dependant checks will not rise a new check is the dependant elements (father for example) il already in check. It will be just add to the depend_on_me list of this check. This check will also be advanced so the dependancy revolation is quicker
* Add a message when launching a freshness check
* Oups, new the var directory in the repository for test
* Add a new broker plugin : the service perfdata exporter. Pluins are great and usefull after all :)
* Now checks raise perf_data and schedulingitems get thems
* Some changes for Perf: Less memory : inline services picke with getstate/setstate, due to slots. More Perf in Shinken : Timeperiod get_next_valid_time_from_t now have a cache. It speed up things a lot! Cache is clean One time a loop. More Perf in poller : put_results is now a oneway call. More perf on arbiter : no more self.has but hasattr instead :(
* Add compression to PYRO
* Add a clean_queues function so if nobody ask us for checks, broks or actions, we can do not explose in memory. Max values are 2*number of elements. It's quite high. We can maybe add a drop_file to lose nothing
* Comments on config cutting part
* Big Perf boost in the config part : the cutting part is speedup a lot. Now we oad balance by host. Now servicedep are also --really-- take into account in the cutting part. The __slots__ of python are used for service for a big drop of emory usage. Still the brok that are very memory-vore
* Solve a problem in the scheduling function... Less perf in fact... And the cut need to be changed..
* Clean of last print so We can test with a HUGE conf : and its a great result : event better than Nagios. 75000checks/5min with a latency of 2s in a Xeon5160. Diagram of architecture in doc is also updated. ..... 75000 :) :) :)
* Big speed boost : apply inheritance before explode, so less call to inherit. The has function is still call too often. Boost the iten class too, and change cutting functions. Theses functions need comments
* Add a remove_twins function to remove.. twins elemnts (services, hosts, contacts and timeperiods). Now we have the same number of service than a Nagios verify :)
* Boost search by reversed list. And solved bug where service on hstgroup were created 2 times
* Clean some code for None problem. Add profile code and optimize cutting code (pygraph)
* Big scheduler clean. Now with an add function to manage add in queues like checks or actions, or brok, etc
* Now notifications raise notification_raise Brok. All data are not fill. I wait a ninja page to see what to put into :). notification code is clearer (was not very difficult...) and scheduler one. I'll clean scheduler more
* oups, a early commit... bad bash
* oups, a little code forgot..
* oups, a little code forgot..
* Clean the scheduler code for actions. It's need if we want to take broks from notifications. There are a other problem : the command is resolved when the notif is launched, but it may be wrong... The history is also important, so the command need to be resolved at notif creation, bat isn't it? :). So notification need to be fully rethink.... and then Broks :)
* Clean brok code in host, hostgroup, service, servicegroup. Now the code is in item*py. A new class property is here my_type, a string that help create the brok 'initial_'service'_status' for example. Contact and contactgroup are now managed in brok too. But they are not used for the moment by ninja... but data in database are good.. I think... maybe... I hope... Now we can begin to manage notifications, comments, ackno and co. Log too? :)
* Clean broker code. Now broker inherit from actionner, so more factorisez code, maybe we can do more. Bin (broker, poller, reactionner, shinken) have now a default port, so argv(1) is not mandatory. Need more beautiful arg option? Yes... And more code clean, in host/service
* Change Broker : now load plugins in plugins. They are in chagre of broks (so one brok -> N*brokers). I move the Mysql_merlin code into a plugin, and create a shell for ndo one. Need more clean (broker, and brok in host/services)
* Begining of the Brok clean
* Add status brok information for hostgroup and servicegroup, change id of internal object so 0 is no more used (pb with auto_increment). Still need clean in the broker and brok code, it's quite ugly..
* Add brok update for host/service so the status is now OK in database when check reeturns. External command raise brok too (global conf update-> brok for conf). code need clean and factorised..
* broker now get info from initial status of program, host, and service. The properties of class have options of give brok of status (initial ornot) and status update after a check
* Add the new broker. It get Brok (status update) from schedulers, and make something with theses data, like update a database. It take it's conf from arbiter, just like reactionner
* create Actionne class so reactionner and poller are factorized
* doc, and more doc
* Add the GNU Affero General Public License header
* A lot of doc and comments, actionnerlink is renamed
* rename pygios to shinken, worker got a real id, reactionner is more clean
* Actionner is renamed REactionner, because a check (poller) is a action too. Notifications and event handlers are Reactions in fact. \n Now pygios (will be renamed...) can have a new conf while it's running. The scheduler is say to die(), and app load the new conf and create a new scheduler
* Change licence to AGPLv3. This must not so be important, but I don't like the cloud horror that comming to us. So..
* actionner will now 'Really' get new conf, and code is more clean
* Doc, licence GPLv3 and actionner car take new conf when already in job. (next worker and scheduler)
* Now actionner is a class
* Now actionner take conf from arbiter
* First introduction of links for actionner and poller
* Nothing really important
* Actionner now see lost of connexions Service and host now inherit from schedulingitem (factorize code)
* 1:Clean of unused files 2:actionner can get action from numerous schedulers now (really)
* Arbiter can get action from numerous schedulers
* Version with arbiter
* This is the first commit
