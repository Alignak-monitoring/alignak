# --------------------------------------------------------------------
# Alignak backend objects loading configuration file
# --------------------------------------------------------------------
# This file is a sample file that can be used to load all the 
# configuration from an Alignak backend.
# --------------------------------------------------------------------

# -------------------------------------------------------------------------
# Monitored objects configuration part
# -------------------------------------------------------------------------
# Configuration files with common objects like commands, timeperiods,
# or templates that are used by the host/service/contacts
; When loading data only from the alignak backend, comment this
; block because data do not need to be read from files
; cfg_dir=arbiter/objects/realms
; cfg_dir=arbiter/objects/commands
; cfg_dir=arbiter/objects/timeperiods
; cfg_dir=arbiter/objects/escalations
; cfg_dir=arbiter/objects/dependencies

# Templates and packs for hosts, services and contacts
; When loading data only from the alignak backend, comment this
; block because data do not need to be read from files
; cfg_dir=arbiter/templates
; cfg_dir=arbiter/packs

# Notification ways
; When loading data only from the alignak backend, comment this
; block because data do not need to be read from files
; cfg_dir=arbiter/objects/notificationways

# Groups
; When loading data only from the alignak backend, comment this
; block because data do not need to be read from files
; cfg_dir=arbiter/objects/servicegroups
; cfg_dir=arbiter/objects/hostgroups
; cfg_dir=arbiter/objects/contactgroups

# Real hosts, services and contacts
; When loading data only from the alignak backend, comment this
; block because data do not need to be read from files
; cfg_dir=arbiter/objects/hosts
; cfg_dir=arbiter/objects/services
; cfg_dir=arbiter/objects/contacts

# Alignak daemons and modules are loaded
cfg_dir=arbiter/daemons
cfg_dir=arbiter/modules

# You will find global MACROS into the files in those directories
cfg_dir=arbiter/resource.d
cfg_dir=arbiter/packs/resource.d

# -------------------------------------------------------------------------
# Alignak framework configuration part
# -------------------------------------------------------------------------
# Number of minutes between 2 retention save, default is 60 minutes
#retention_update_interval=60

# Number of interval to spread the first checks for hosts and services
# Default is 30
#max_service_check_spread=30
max_service_check_spread=5
# Default is 30
#max_host_check_spread=30
max_host_check_spread=5


# After a timeout, launched service checks are killed
# and the service state is set to a default value (2 for CRITICAL)
#service_check_timeout=60
#timeout_exit_status=2


# Freshness check
# Default is enabled for hosts and services
#check_host_freshness=1
#check_service_freshness=1
# Default is 60 for hosts and services
#host_freshness_check_interval=60
#service_freshness_check_interval=60
# Extra time for freshness check ...
#additional_freshness_latency=15


# Flapping detection
# Default is enabled
#enable_flap_detection=1

# Flapping threshold for hosts and services
#low_service_flap_threshold=20
#high_service_flap_threshold=30
#low_host_flap_threshold=20
#high_host_flap_threshold=30

# flap_history is the lengh of history states we keep to look for flapping.
# 20 by default, can be useful to increase it. Each flap_history increases cost:
#    flap_history cost = 4Bytes * flap_history * (nb hosts + nb services)
# Example: 4 * 20 * (1000+10000) ~ 900Ko for a quite big conf. So, go for it!
flap_history=20


# Max plugin output for the plugins launched by the pollers, in bytes
#max_plugins_output_length=8192
max_plugins_output_length=65536


# Enable or not the state change on impact detection (like
# a host going unreachable if a parent is DOWN for example). It's for
# services and hosts.
# Remark: if this option is absent, the default is 0 (for Nagios
# old behavior compatibility)
#enable_problem_impacts_states_change=0
enable_problem_impacts_states_change=1


# if 1, disable all notice and warning messages at
# configuration checking when arbiter checks the configuration.
# Default is to log the notices and warnings
#disable_old_nagios_parameters_whining=0


# If you need to set a specific timezone to your deamons, uncomment it
#use_timezone=Europe/Paris


# Disabling env macros is good for performances. If you really need it, enable it.
#enable_environment_macros=1
enable_environment_macros=0

# Log configuration
# Notifications
# log_notifications=1

# Services retries
# log_service_retries=1

# Hosts retries
# log_host_retries=1

# Event handlers
# log_event_handlers=1

# External commands
# log_external_commands=1

# Passive checks
# log_passive_checks=1

# Initial states
# log_initial_states=1
log_initial_states=0

# By default don't launch even handlers during downtime. Put 0 to
# get back the default nagios behavior
no_event_handlers_during_downtimes=1


# [Optionnal], a pack distribution file is a local file near the arbiter
# that will keep host pack id association, and so push same host on the same
# scheduler if possible between restarts.
pack_distribution_file=/usr/local/var/lib/alignak/pack_distribution.dat



## Arbiter daemon part, similar to daemon ini file

#If not specified will use lockfile direname
workdir=/usr/local/var/run/alignak

# Lock file (with pid) for Arbiterd
lock_file=/usr/local/var/run/alignak/arbiterd.pid

# The arbiter can have it's own local log
local_log=/usr/local/var/log/alignak/arbiterd.log

# Accepted log level values: DEBUG,INFO,WARNING,ERROR,CRITICAL
#log_level=WARNING

# User that will be used by the arbiter.
# If commented, run as current user (root?)
#alignak_user=alignak
#alignak_group=alignak

# Set to 0 if you want to make this daemon (arbiter) NOT run
daemon_enabled=1

#-- Security using SSL --
use_ssl=0
# WARNING : Put full paths for certs
# They are not shipped with alignak.
# Have a look to proper tutorials to generate them
#ca_cert=/etc/alignak/certs/ca.pem
#server_cert=/etc/alignak/certs/server.cert
#server_key=/etc/alignak/certs/server.key
#hard_ssl_name_check=0

# Export all alignak inner performances into a statsd server. 
# By default at localhost:8125 (UDP) with the alignak prefix
# Default is not enabled
#statsd_host=localhost
#statsd_port=8125
#statsd_prefix=alignak
#statsd_enabled=0
