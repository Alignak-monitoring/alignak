# For each Alignak daemon, this file contains a section with the daemon name. The section
# identifier is the corresponding daemon name prefixed with the keyword daemon and a dot.
# This daemon name is usually built with the daemon type (eg. arbiter, poller,...) and the
# daemon name separated with a dash.
#
# The previous rules ensure that Alignak will be able to find all the daemons configuration
# in this file whatever the number of daemons existing in the configuration
#
# To be easily used as a configuration variable of this file, the daemon name is repeated
# inside the section in a NAME variable.
#
# Each section inherits from the [DEFAULT] section and only defines the specific values
# inherent to the declared daemon.

[daemon.arbiter-master]
type=arbiter
name=arbiter-master

#-- Network configuration
# My listening interface
;host=0.0.0.0
port=7770
# My adress for the other daemons
;address=127.0.0.1

## Modules
# Default: None
## Interesting modules:
# - backend_arbiter     = get the monitored objects configuration from the Alignak backend
;modules=backend_arbiter


[daemon.scheduler-master]
type=scheduler
name=scheduler-master

#-- Network configuration
# My listening interface
;host=0.0.0.0
port=7768
# My adress for the other daemons
;address=127.0.0.1

## Modules
# Default: None
# Interesting modules that can be used:
# - backend_scheduler   = store the live state in the Alignak backend (retention)
;modules=backend_scheduler

## Advanced Features:
# Skip initial broks creation. Boot fast, but some broker modules won't
# work with it! (like livestatus for example)
skip_initial_broks=0

# Some schedulers can manage more hosts than others
weight=1

# In NATted environments, you declare each satellite ip[:port] as seen by
# *this* scheduler (if port not set, the port declared by satellite itself
# is used)
;satellitemap=poller-1=1.2.3.4:7771, reactionner-1=1.2.3.5:7769, ...

[daemon.poller-master]
type=poller
name=poller-master

#-- Network configuration
;address=127.0.0.1
port=7771

## Modules
# Default: None
## Interesting modules:
# - nrpe-booster        = Replaces the check_nrpe binary to enhance performance for NRPE checks
# - snmp-booster        = Snmp bulk polling module
;modules=nrpe-booster

## Advanced parameters:
manage_sub_realms=1
min_workers=0
max_workers=0
processes_by_worker=256
worker_polling_interval=1

## Passive mode
# In active mode (default behavior), connections are poller -> scheduler to report checks results
# For DMZ monitoring, set to 1 for the connections to be from scheduler -> poller.
#passive=0

## Poller tags
# Poller tags are the tag that the poller will manage. Use None as tag name to manage
# untagged checks (default)
#poller_tags=None

[daemon.reactionner-master]
type=reactionner
name=reactionner-master

#-- Network configuration
;address=127.0.0.1
port=7769

## Modules
# Default: None
# Interesting modules that can be used:
# - nothing currently
;modules

## Advanced parameters:
manage_sub_realms=1
min_workers=0
max_workers=1
processes_by_worker=256
worker_polling_interval=1

## Passive mode
# In active mode (default behavior), connections are poller -> scheduler to report checks results
# For DMZ monitoring, set to 1 for the connections to be from scheduler -> poller.
#passive=0

## Reactionner tags
# Reactionner tags are the tag that the reactionner will manage. Use None as tag name to manage
# untagged checks (default)
#reactionner_tags=None

[daemon.broker-master]
type=broker
name=broker-master

#-- Network configuration
;address=127.0.0.1
port=7772

#-- External modules watchdog --
# The broker daemon has a huge queue size.
max_queue_size=100000

## Advanced parameters:
# Does it receive for schedulers of sub-Realms or only for its realm?
manage_sub_realms=1

# Manages the arbiter broks
# Unset this parameter for all other brokers.
manage_arbiters=1

## Modules
# Default: None
# Interesting modules that can be used:
# - backend_broker      = update the live state in the Alignak backend
# - logs                = collect monitoring logs and send them to a Python logger
;modules=backend_broker, logs

[daemon.receiver-master]
type=receiver
name=receiver-master

#-- Network configuration
;address=127.0.0.1
port=7773

## Modules
# Default: None
# Interesting modules that can be used:
# - nsca                = NSCA protocol server for collecting passive checks
# - external-commands   = read a nagios commands file to notify external commands
# - web-services        = expose Web services to get Alignak daemons state and
#                         notify external commands
;modules=nsca,external-commands,web-services

## Advanced parameters:
# Does it receive for schedulers of sub-Realms or only for its realm?
manage_sub_realms=1

# Does it manage arbiters?
manage_arbiters=1
