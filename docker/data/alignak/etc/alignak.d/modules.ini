[module.inner-retention]
; The inner retention module is declared to allow parameters configuration when it is activated
; in the configuration. To activate, simply set 'enabled' as 1 or set the
; retain_state_information Nagios legacy parameter
name = inner-retention
type = retention
python_name = alignak.modules.inner_retention
definition_order = 1
enabled = 1

; --------------------------------------------------------------------
; Retention configuration
; ---

; If the retention file is set to an empty value, Alignak will persist its live state in
; one Json file per each host in the directory defined in this variable
; This is a very interesting solution when several schedulers are running simultaneously on
; the same server. This do not relate a group of hosts to a dedicated scheduler but shares all
; hosts retention amongst the schedulers of the system.
; When set to an emty value, Aligan will use the default system temporary files directory
; (eg. /tmp, /var/tmp, /usr/tmp) where files can be written
; Environment variable 'ALIGNAK_RETENTION_DIR' overloads this configuration variable
;state_retention_dir=/var/run/alignak
retention_dir=/alignak/retention

; Alignak will persist its live state in a Json file which name is defined in this variable
; If you do not set a value, Alignak will use a file name based upon the name of the scheduler that
; will save/load the data (eg. /tmp/alignak-retention-scheduler_name.json)
; If you set a file name, you can use %s inside the variable value to be replaced with the
; scheduler name. Beware to use %%s and not %s ;)
; If you set an empty value, Alignak will use one file per each host. See state_retention_dir
; Environment variable 'ALIGNAK_RETENTION_FILE' overloads this configuration variable
retention_file=

; Number of minutes between 2 retention save, default is 60 minutes
; This is only used if retention is enabled
; todo: move this parameter to the retention aware modules?
; If 0, the retention is disabled (default behaviour), else retention is enabled and the
; retention period is defined in the scheduler ticks parameters (see tick_update_retention later)
;retention_update_interval=60
retention_update_interval=15
; --------------------------------------------------------------------


[module.inner-metrics]
; The inner metrics module is declared to allow parameters configuration when it is activated
; in the configuration. To activate, simply set -enabled' as 1 or declare a value for
; host_perfdata_file or service_perfdata_file Nagios legacy parameters
name = inner-metrics
type = metrics
python_name = alignak.modules.inner_metrics
definition_order = 1
enabled = 1

; --------------------------------------------------------------------
; Module internal metrics
; This module do not have internal metrics !
; --------------------------------------------------------------------
;
; Module log level
;log_level=INFO

; --------------------------------------------------------------------
; Module specific parameters
; --------------------------------------------------------------------

; --------------------------------------------------------------------
; Sending metrics to InfluxDB
; --------------------------------------------------------------------
;influxdb_host=192.168.0.23
influxdb_host=192.168.43.193
influxdb_port=8086
influxdb_enabled=0

; Must not be empty ;)
;influxdb_database=alignak

; Default is empty - do not used authenticated connection
;influxdb_username=
;influxdb_password=

; Default is empty - do not use a specific retention
; Default influxDB retention policy is infinite
; default is the same name as the database
;influxdb_retention_name=
; Use durations such as 1h, 90m, 12h, 7d, and 4w,
; Default is INF (infinite)
;influxdb_retention_duration=INF
;influxdb_retention_replication=1

; Add this tags list to the metrics sent
; Comma separated list of strings
;influxdb_tags=
influxdb_tags=tag1=test,tag2=test2

; --------------------------------------------------------------------
; Sending metrics to Graphite
; --------------------------------------------------------------------
graphite_host=graphite
graphite_port=2004
graphite_enabled=1

; Add the host realm as a prefix in the path of the hosts/services metrics
;realms_prefix=0

; Add this prefix in the path of the hosts/services metrics
graphite_prefix=alignak

; Add this suffix to the hosts/services metrics
;graphite_data_source=from_alignak

;
; Output metrics to a file - specify the output file full path name
; Default is disabled
;output_file=

; Flush to Graphite/InfluxDB everay X received metrics
; This allows sending metrics to Graphite in bulk mode
;metrics_flush_count=256
metrics_flush_count=1

; Set to 0 to not ignore unknown hosts/services
;ignore_unknown=1

; Use a fake service description for the metrics of an host check result
; This will group the host metrics in a same directory for graphite and make use a service for Influxdb
;host_check=hostcheck

; Used to reset check time into the scheduled time.
; Carbon/graphite does not like latency data and creates blanks in graphs
; Every data with "small" latency will be considered created at scheduled time
;ignore_latency_limit=0

; Send the warning, critical, min and max values...
; Default is to not send because it creates many similar metrics
;send_warning=true
;send_critical=true
;send_min=true
;send_max=true
; unit tests:
;send_warning=false
;send_critical=false
;send_min=false
;send_max=false
