[module.webui]
name=webui
type=webui
# Expect that the module directory content of this project is copied to a directory
# named alignak_webui in the PYTHON_PATH (eg. /usr/local/lib/python2.7/dist-packages for instance!)
python_name=alignak_module_webui
# With a former Shinken installation, add the /var/lib/shinken/modules directory to the PYTHONP_ATH
# or move its content  to a directory defined in the PYTHON_PATH
# In Shinken, the module is named as:
#python_name=webui2.module

# Module log level (DEBUG, INFO, WARNING, ERROR)
;log_level=INFO
# Set log_color=1 to have a (colored) log on the console
;log_console=0
# Declare the log file for the Shinken Web UI log (default is /var/log/alignak/shinken-webui.log)
log_file=/tmp/var/log/alignak/shinken-webui.log

# Export module metrics to a statsd server.
# By default at localhost:8125 (UDP) with the alignak prefix
# Use the same configuration as the one defined in alignak (if any...)
# Stats will be available in statsd_prefix.module_alias
;statsd_host=localhost
;statsd_port=8125
;statsd_prefix=alignak.modules
# Default is not enabled
;statsd_enabled=0

## Modules for WebUI
## User authentication:
# - auth-cfg-password (internal) : Use the password set in Shinken contact for auth.
# - auth-htpasswd (internal)     : Use an htpasswd file for auth backend.
# You may remove the modules 'auth-cfg-password' and 'auth-htpasswd' from your
# configuration because the WebUI embeds those authentication methods.
#
# You may use these external modules:
# - auth-ws-glpi                 : Use the Glpi Web Services for user authentication
# - auth-active-directory        : Use AD for auth backend (and retrieve photos).

# htpasswd (apache like) file containing username/passwords
# Use an Apache htpasswd file or build your own (http://www.htaccesstools.com/htpasswd-generator/)
;htpasswd_file=/tmp/htpasswd.users


## Modules for WebUI
## Graphs:
# You may use these external modules:
# - ui-pnp                : Use PNP graphs in the UI.
# - ui-graphite2          : Use graphs from Graphite time series database.


## Modules for WebUI
## Storage:
# - mongodb (internal)    : Save user preferences to a Mongodb database
#                         : Get hosts/services availability from a Mongodb database
#                         : Get Shinken logs and hosts history from a Mongodb database
# You may remove the module 'mongodb' from your configuration because the WebUI
# embeds this storage module.
#
# You may also use those external modules:
# - SQLitedb              : Save user preferences to a SQLite database

# Mongodb parameters for internal Web UI modules
# NOTE: Do not change these parameters unless you are using the 'mongo-logs' module
# with different parameters than the default ones.

# Database URI
# Set an empty value to disable this feature
;uri=mongodb://localhost
uri=

# If you are running a MongoDB cluster (called a replica set in MongoDB),
# you need to specify it's name here.
# With this option set, you can also write the mongodb_uri as a comma-separated
# list of host:port items. (But one is enough, it will be used as a seed)
;replica_set=

# Database name where to fetch the logs/availability collections
;database=shinken
;database=alignak-module-logs-backend-test
database=alignak

# User authentication for database access
;username=
;password=

# Logs collection name
;logs_collection=logs
;logs_collection=history
logs_collection=alignak_events

# Hosts availability collection name
;hav_collection=availability


## Modules for WebUI
## Helpdesk:
# You may use this external modules:
# - glpi-helpdesk         : Get hosts information from an helpdesk application
#                         : Notify helpdesk for hosts problems

## Declare the list of the WebUI modules
;modules=auth-ws-glpi
;modules=auth-ws-glpi, ui-graphite2, alignak-logs
modules=ui-graphite2
;my_modules=ui-graphite2
# Specify the directory where to search for the WebUI modules
# Default is /var/lib/shinken/modules because the Shinken installer locates the module in this directory
# You would rather copy the Shinken modules in a dedicated place
;modules_dir=/var/lib/shinken/modules


# Web server configuration
# Default is listening on 7767 port on all interfaces
# Set 127.0.0.1 to restrict on localhost only
#host=0.0.0.0
#port=7767


# Authentication secret for session cookie
# 1/ Define here a secret string used to sign session cookie
;auth_secret=CHANGEME

# 2/ Define here a file that will store an auto-generated secret (more secure)
# This configuration is more secure than the previous one ...
auth_secret_file=/tmp/alignak-ui-secret

# Session cookie name
;cookie_name=user_session


# WebUI information
# Overload default information included in the WebUI
;about_version=2.0
;about_copyright=(c) 2013-2018 - License GNU AGPL as published by the FSF, minimum version 3 of the License.
;about_release=


# Configuration directory
;config_dir=/var/lib/shinken/config/

# Share directory
;share_dir=/var/lib/shinken/share/

# Photos directory
;photos_dir=/var/lib/shinken/share/photos/

# For external plugins to load on webui
;additional_plugins_dir=



# Login form
# Welcome text in the login form.
# Default is no login text
login_text=Login to the Alignak WebUI - Live System

# Company logo in the login form and header bar
# company_logo property is suffixed with .png and searched in photos_dir
# Default logo is used if company_logo is not found in photos_dir
# Default logo is always used if company_logo property is empty
# Default logo is default_company.png (Shinken logo) in webui/htdocs/images
;company_logo=my_company


;allow_html_output=1
                       ; Allow or not HTML chars in plugins output.
                       ; WARNING: Allowing can be a security issue.

;tag_as_image=0
                       ; Use image if available for elements' tags
                       ; Monitoring packs may include an image for the host/service tag
                       ; WebUI also has some tags as images

;play_sound=1
play_sound=1
                       ; Play sound on new non-acknowledged problems.

# Gravatar image for logged in users
# Default is 0
;gravatar=0
                       ; If gravatar=0, image used is username.png in webui/htdocs/images/logo
                       ; If not found, default is default_user.png in webui/htdocs/images/logo

# Refresh period
# Default value is 60 seconds
;refresh_period=60
refresh_period=30
                       ; Number of seconds between each page refresh
                       ; 0 to disable refresh

# Visual alerting thresholds
# --------------------------
# All the hosts and services that are in a HARD non OK/UP state are considered as problems if their
# business_impact is greater than or equal this value

# problems_business_impact is the main UI filter
# the UI views are filtered according to this value which defaults to 1 (ignore only no importance)
# Shinken/Alignak consider 0 as 'no importance' hosts or services
;problems_business_impact=1
;important_problems_business_impact=2

# Note that the connected user may also have his/her own min_business_impact. This filter is taking
# precedence over the UI problems_business_impact which takes precedence over the important_problems_business_impact!

# Set to 0 to deactivate Web UI own problems computation rules
# This will make the WebUI build its own 'problem' state for the hosts and services
# This makes the UI more consistent for the end-users
# If 0, the is_problem state of Shinken/Alignak is used to count and report the problems.
;inner_problems_count=0


;hosts_states_warning=95
;hosts_states_critical=90
;services_states_warning=95
;services_states_critical=90

# WebUI timezone (default is Europe/Paris)
;timezone=Europe/Paris



# Manage contacts ACL
# 0 allows actions for all contacts
# 1 allows actions only for contacts whose property 'is_admin' equals to 1
# Default is 1
;manage_acl=1

# Allow anonymous access for some pages
# 0 always disallow
# 1 allows anonymous access if an anonymous
# contact is declared in the Shinken configuration
# Default is 0
;allow_anonymous=0

# Default Downtime scheduled from WebUI
# If the "fixed" argument is set to one (1), downtime will start and end
# at the times specified by the "start" and "end" arguments.
# Otherwise, downtime will begin between the "start" and "end" times and
# last for "duration" seconds.
# The "start" and "end" arguments are specified in time_t format (seconds
# since the UNIX epoch).
# The specified host downtime can be triggered by another downtime entry
# if the "trigger_id" is set to the ID of another scheduled downtime entry.
# Set the "trigger_id" argument to zero (0) if the downtime for the
# specified host should not be triggered by another downtime entry.
# Default is 48 hours
;default_downtime_hours=48

# Default Acknowledge parameters
# If the "sticky" option is set to two (2), the acknowledgement will remain until
# the host returns to an UP state. Otherwise the acknowledgement will
# automatically be removed when the host changes state.
# If the "notify" option is set to one (1), a notification will be sent out to
# contacts indicating that the current host problem has been acknowledged.
# If the "persistent" option is set to one (1), the comment associated with the
# acknowledgement will survive across restarts of the Shinken process.
# If not, the comment will be deleted the next time Shinken restarts.
# -----
# the acknowledgement will remain until the host returns to an UP state.
# Otherwise the acknowledgement will automatically be removed when the host changes state.
;default_ack_sticky=2
# a notification will be sent out to contacts indicating that the current host/service problem has been acknowledged.
;default_ack_notify=1
# the comment associated with the acknowledgement will survive across restarts.
;default_ack_persistent=1

## Advanced Options for Bottle Web Server
# Best choice is auto, whereas Bottle chooses the best server it finds amongst:
# - [WaitressServer, PasteServer, TwistedServer, CherryPyServer, WSGIRefServer]
# Install CherryPy for a multi-threaded server ...
# ------------
# Handle with very much care!
;http_backend=auto
                       ; Choice is: auto, wsgiref or cherrypy if available

# Specific options store in the serverOptions when invoking Bottle run method ...
# ------------
# Handle with very much care!
; bindAddress for backend server
;bindAddress=auto

; umask for backend server
;umask=auto

; If WebUI is behind a web server which
; has already authentified user, enable.
;remote_user_enable=1

; Look for remote user in the WSGI environment
; instead of the HTTP header. This allows
; for fastcgi (flup) and scgi (flupscgi)
; integration, eg. with the apache modules.
;remote_user_enable=2

; Set to the HTTP header containing
; the authentificated user s name, which
; must be a Shinken contact.
;remote_user_variable=X_Remote_User
