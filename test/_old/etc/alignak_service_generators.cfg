define host{
  address                        127.0.0.1
  alias                          up_0
  check_command                  check-host-alive-parent!up!$HOSTSTATE:test_router_0$
  event_handler                  eventhandler
  check_period                   24x7
  host_name                      test_host_0_gen
  hostgroups                     hostgroup_01,up
  parents                        test_router_0
  use                            generic-host

  #Now the generated part
  _disks			 C$(80%!90%)$,D$(95%!70%)$,E,F$(95%!70%)$,G

  # Same but here we say we do not want in fact E and F to be generated
  _disksbis			 C$(80%!90%)$,D$(95%!70%)$,E,F$(95%!70%)$,G
  _!disksbis			 F,E
}


define host{
  address                        127.0.0.1
  alias                          sw_0
  check_command                  check-host-alive-parent!up!$HOSTSTATE:test_router_0$
  event_handler                  eventhandler
  check_period                   24x7
  host_name                      sw_0
  hostgroups                     hostgroup_01,up
  parents                        test_router_0
  use                            generic-host

  #Now the generated part
  _ports			 Unit [1-6] Port [0-46]$(80%!90%)$,Unit [1-6] Port 47$(80%!90%)$
}

define host{
  address                        127.0.0.1
  alias                          sw_1
  check_command                  check-host-alive-parent!up!$HOSTSTATE:test_router_0$
  event_handler                  eventhandler
  check_period                   24x7
  host_name                      sw_1
  hostgroups                     hostgroup_01,up
  use                            generic-host

  #Now the generated part
  _ports                         Gigabit0/1$(1)$$(80%!90%)$,\
                                 Gigabit0/2$(2)$$(80%!90%)$,\
                                 Ethernet0/1$(3)$$(80%!95%)$,\
                                 ISDN1$(4)$$(80%!95%)$
}



define service{
  check_command                  check_service!$KEY$!$VALUE$
  host_name                      test_host_0_gen
  service_description            Generated Service $KEY$
  servicegroups                  servicegroup_01,ok
  use                            generic-service
  duplicate_foreach		 _disks
  default_value		 38%!24%
}


define service{
  check_command                  check_service!$KEY$!$VALUE$
  host_name                      test_host_0_gen
  service_description            Generated Service $KEY$ Dependant
  servicegroups                  servicegroup_01,ok
  use                            generic-service
  duplicate_foreach              _disks
  default_value          38%!24%
  service_dependencies		 ,Generated Service $KEY$
}


define service{
  check_command                  check_service!$KEY$!$VALUE$
  host_name                      sw_0
  service_description            Generated Service $KEY$
  servicegroups                  servicegroup_01,ok
  use                            generic-service
  duplicate_foreach		 _ports
  default_value		 38%!24%
}

define service{
  check_command                  check_service!$VALUE1$!$VALUE2$
  host_name                      sw_1
  service_description            Generated Service $KEY$
  servicegroups                  servicegroup_01,ok
  use                            generic-service
  duplicate_foreach              _ports
  default_value          $()$$()$$(38%!24%)$
}



define service{
  check_command                  check_service!$KEY$!$VALUE$
  host_name                      test_host_0_gen
  service_description            Generated Service NOT $KEY$
  servicegroups                  servicegroup_01,ok
  use                            generic-service
  duplicate_foreach		 _disksbis
  default_value		 38%!24%
}
