###############################################################################
###############################################################################
#
# HOST TEMPLATES
#
###############################################################################
###############################################################################




# Generic host definition template - This is NOT a real host, just a template!
# Most hosts should inherit from this one
define host{
	name				generic-host

	# Checking part
	check_command			check_host_alive
	max_check_attempts		2
	check_interval			5

	# Check every time
	active_checks_enabled		1
	check_period			24x7

	# Notification part
	# One notification each day (1440 = 60min* 24h)
	# every time, and for all 'errors'
	# notify the admins contactgroups by default
	contact_groups			admins,users
	notification_interval		1440
	notification_period		24x7
	notification_options		d,u,r,f
	notifications_enabled		1

	# Advanced option. Look at the wiki for more informations
	event_handler_enabled		0
	flap_detection_enabled		1
	process_perf_data		1

	# Maintenance period
	#maintenance_period		workhours

	# Dispatching
	#poller_tag			 DMZ
	#realm				 All

	# For the WebUI
	#icon_set			 server ; can be database, disk, network_service, server

	# This said that it's a template
	register			0
}



# Some business impact templates. The default value for
# business impatc is 2, mean "ok it's prod". 1 means, low
# 0 mean none. For top value, the higer the most important ;)
define host{
       name     qualification
       register     0
       business_impact  1
}

# 0 is for no importance at all, and no notification
define host{
       name         no-importance
       register         0
       business_impact      0
       notifications_enabled    0
}

# Ok we start to be important
define host{
       name     production
       register     0
       business_impact  3
}


# It began to be very  important
define host{
       name     important
       register     0
       business_impact  4
}


# TOP FOR BUSINESS!
define host{
       name     top-for-business
       register     0
       business_impact  5
}

###############################################################################
###############################################################################
#
# SERVICE TEMPLATES
#
###############################################################################
###############################################################################



# Generic service definition template - This is NOT a real service, just a template!
define service{
        use                             srv-pnp
        name                            generic-service         ; The 'name' of this service template
        active_checks_enabled           1                       ; Active service checks are enabled
        passive_checks_enabled          1                               ; Passive service checks are enabled/accepted
        check_period                    24x7
        parallelize_check               1                       ; Active service checks should be parallelized (disabling this can lead to major performance problems)
        obsess_over_service             1                       ; We should obsess over this service (if necessary)
        check_freshness                 1                       ; Default is to NOT check service 'freshness'
        freshness_threshold             3600
        notifications_enabled           1                       ; Service notifications are enabled
        notification_interval           1440
        notification_period             workhours
        notification_options            w,u,c,r,f
        event_handler_enabled           0                       ; Service event handler is enabled
        flap_detection_enabled          1                       ; Flap detection is enabled
        failure_prediction_enabled      1                       ; Failure prediction is enabled
        process_perf_data               1                       ; Process performance data
        retain_status_information       1                       ; Retain status information across program restarts
        retain_nonstatus_information    1                       ; Retain non-status information across program restarts
        is_volatile                     0                       ; The service is not volatile
        check_period                    24x7                        ; The service can be checked at any time of the day
        max_check_attempts              2                        ; Re-check the service up to 3 times in order to determine its final (hard) state
        check_interval                  15                        ; Check the service every 10 minutes under normal conditions
        retry_interval                  5                        ; Re-check the service every two minutes until a hard state can be determined
        notification_options            w,u,c,r                        ; Send notifications about warning, unknown, critical, and recovery events
        notification_interval           1                        ; Re-notify about service problems every hour
        notifications_enabled           1
        contact_groups                  admins,users
        stalking_options                o,w,u,c
        register                        0                       ; DONT REGISTER THIS DEFINITION - ITS NOT A REAL SERVICE, JUST A TEMPLATE!
        _httpstink                      NO

        #Alignak specific
#        resultmodulations                 critical_is_warning
#        escalations                         ToLevel2
	# For the WebUI
	icon_set			 server ; can be database, disk, network_service, server
        }

define service{
        use                             srv-pnp
        name                            common-service          ; The 'name' of this service template
        active_checks_enabled           1                       ; Active service checks are enabled
        passive_checks_enabled          1                       ; Passive service checks are enabled/accepted
        check_period                    24x7
        parallelize_check               1                       ; Active service checks should be parallelized (disabling this can lead to major performance problems)
        obsess_over_service             1                       ; We should obsess over this service (if necessary)
        check_freshness                 1                       ; Default is to NOT check service 'freshness'
        freshness_threshold             3600
        notifications_enabled           0                       ; Service notifications are enabled
        event_handler_enabled           0                       ; Service event handler is enabled
        flap_detection_enabled          1                       ; Flap detection is enabled
        failure_prediction_enabled      1                       ; Failure prediction is enabled
        process_perf_data               1                       ; Process performance data
        retain_status_information       1                       ; Retain status information across program restarts
        retain_nonstatus_information    1                       ; Retain non-status information across program restarts
        is_volatile                     0                       ; The service is not volatile
        check_period                    24x7                        ; The service can be checked at any time of the day
        max_check_attempts              2                        ; Re-check the service up to 3 times in order to determine its final (hard) state
        check_interval                  15                        ; Check the service every 10 minutes under normal conditions
        retry_interval                  5                        ; Re-check the service every two minutes until a hard state can be determined
        notification_options            w,u,c,r                        ; Send notifications about warning, unknown, critical, and recovery events
        notification_interval           1                        ; Re-notify about service problems every hour
        notifications_enabled           1
        contact_groups                  generic-contact
        stalking_options                o,w,u,c
        register                        0                       ; DONT REGISTER THIS DEFINITION - ITS NOT A REAL SERVICE, JUST A TEMPLATE!
        _httpstink                      NO

        #Alignak specific
#        resultmodulations                 critical_is_warning
#        escalations                         ToLevel2
	# For the WebUI
	icon_set			 server ; can be database, disk, network_service, server
        }
# For local alignak machine only
define service{
	name				local-service 		; The name of this service template
	use				generic-service		; Inherit default values from the generic-service definition
	check_interval			1			; Check the service every 1 minutes in normal state
	max_check_attempts		1			; directly go in hard state here
	register			0       		; DONT REGISTER THIS DEFINITION - ITS NOT A REAL SERVICE, JUST A TEMPLATE!
	}


#For trigger based service, you will need an echo command that does nothing
define service{
       name		trigger-service
       use		generic-service
       register                        0
       check_command	_echo
}

define service {
   name       srv-pnp
   action_url /pnp4nagios/index.php/graph?host=$HOSTNAME$&srv=$SERVICEDESC$
   register   0
}


###############################################################################
###############################################################################
#
# CONTACT TEMPLATES
#
###############################################################################
###############################################################################



# Contact definition
# By default the contact will ask notification by mails
define contact{
        name                            generic-contact    	; The name of this contact template
        register                        0       		; DONT REGISTER THIS DEFINITION - ITS NOT A REAL CONTACT, JUST A TEMPLATE!
	host_notifications_enabled	1
	service_notifications_enabled	1
	email				alignak@localhost
	can_submit_commands		1
	notificationways        	email
	}

# This is how emails are sent, 24x7 way.
define notificationway{
       notificationway_name            email
       service_notification_period     24x7
       host_notification_period        24x7
       service_notification_options    c,w,r
       host_notification_options       d,u,r,f,s
       service_notification_commands   notify-service-by-email ; send service notifications via email
       host_notification_commands      notify-host-by-email    ; send host notifications via email
}


###############################################################################
# FS TEMPLATES
###############################################################################

define host{
        name                   fs_appli01
        register               0
}

define host{
        name                   fs_appli11
        register               0
}

define host{
        name                   fs_appli02
        register               0
}

define host{
        name                   fs_appli12
        register               0
}

define host{
        name                   fs_oralog0X
        register               0
}

define host{
        name                   fs_oralog1X
        register               0
}

define host{
        name                   fs_oraman0X
        register               0

define host{
        name                   fs_oraman1X
        register               0
}

define host{
        name                   fs_oracle1X
        register               0
}

define host{
        name                   fs_oracle0X
        register               0
}

define host{
        name                   fs_oraker01
        register               0
}

define host{
        name                   fs_oraker11
        register               0
}

define host{
        name                   fs_oraker02
        register               0
}

define host{
        name                   fs_oraker12
        register               0
}

define host{
        name                   fs_backup
        register               0
}

define host{
        name                   fs_home
        register               0
}

define host{
        name                   fs_admin
        register               0
}

define host{
        name                   fs_fwdump
        register               0
}

define host{
        name                   fs_tmp
        register               0
}

define host{
        name                   fs_root
        register               0
}

define host{
        name                   fs_var
        register               0
}

define host{
        name                   fs_opt
        register               0
}


define host{
        name                   fs_usr
        register               0
}

