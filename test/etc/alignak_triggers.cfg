triggers_dir=triggers.d/

define host{
       check_command                  check_service!ok
       host_name                      test_host_trigger
       use                            generic-host
       trigger                        \n\
cpu = perf(self, 'cpu')               \n\
print "Founded cpu", cpu              \n\
if cpu >= 95: \n\
\t   critical(self, 'not good! | cpu=%d' % cpu)
}



define host{
       check_command                  check_service!ok
       host_name                      test_host_trigger2
       use                            generic-host
       trigger_name		      simple_cpu
}


define service{
  active_checks_enabled          1
  check_command                  check_service!ok
  check_interval                 1
  host_name                      test_host_0
  retry_interval                 1
  service_description            i_got_trigger
  servicegroups                  servicegroup_01,ok
  use                            generic-service
  event_handler                  eventhandler
  notes_url                      /alignak/wiki/doku.php/$HOSTNAME$/$SERVICEDESC$
  action_url                     /alignak/pnp/index.php?host=$HOSTNAME$&srv=$SERVICEDESC$
  trigger			 self.output = "New output" \n\
self.perf_data = "New perf_data" \n\
print self.perf_data
}


define service{
       check_command                  check_service!ok
       host_name                      test_host_0
       service_description            cpu_too_high
       use                            generic-service
       trigger                        \n\
if perf(self, 'cpu') >= 95: \n\
\t   self.output = 'not good!'
}


define service{
       check_command                  check_service!ok
       host_name                      test_host_0
       service_description            cpu_too_high_bis
       use                            generic-service
       trigger_broker_raise_enabled            1
       trigger                        \n\
cpu = perf(self, 'cpu')               \n\
print "Founded cpu", cpu              \n\
if cpu >= 95: \n\
\t   critical(self, 'not good! | cpu=%d' % cpu)
}



define service{
       check_command                  check_service!ok
       host_name                      test_host_0
       service_description            cpu_too_high_ter
       use                            generic-service
       trigger_name		      simple_cpu
}



#For testing the perf function
define service{
       check_command                  check_service!ok
       host_name                      test_host_0
       service_description            sample_perf_function
       use                            generic-service
       trigger_name		      function_perf
}



#For testing the perf function
define service{
       check_command                  check_service!ok
       host_name                      test_host_0
       service_description            sample_custom_function
       use                            generic-service
       trigger_name		      users_limit
}




# For testing the perfs function
define service{
       check_command                  check_service!ok
       host_name                      test_host_0
       service_description            HTTP-1
       use                            generic-service
}

define service{
       check_command                  check_service!ok
       host_name                      test_host_0
       service_description            HTTP-2
       use                            generic-service
}

define service{
       check_command                  check_service!ok
       host_name                      test_host_0
       service_description            HTTP-3
       use                            generic-service
}


define service{
       check_command                  check_service!ok
       host_name                      test_host_0
       service_description            AVG-HTTP
       use                            generic-service
       trigger_name		      avg_http
}

