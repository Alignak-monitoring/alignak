cfg_dir=../default

define command {
    command_name	        check_ssh
    command_line	        /bin/true
}

# Define a service template
define service {
    name                    ssh-critical-service
    use                     generic-service
    host_name               generic-host
    service_description     SSH
    check_command           check_ssh
    retry_interval		    1
    check_interval		    1
    register                0
}

# Define some hosts
define host{
    use                     generic-host
    host_name               MYHOST
}
define host{
    use                     generic-host
    host_name               MYHOST2
}
define host{
    use                     generic-host
    host_name               MYHOST3
}


# Define a service with his template attached to an host
define service{
    use                     ssh-critical-service
    host_name               MYHOST
}

# Define a service with his template attached to a list of hosts
define service{
    use                     ssh-critical-service
    host_name               MYHOST2,MYHOST3
}

# ----------------------------------------------
# With templates
# Define an host template
define host {
    name                host-template
    use                 generic-host
    register            0
    hostgroups          hg
}

# Define a service template
define service {
    name                service-template
    use                 generic-service
    register            0
}

# Define a service / host template relation
define service {
    service_description svc_inherited
    use                 service-template
    host_name           host-template
    check_command       check_ssh

    register            0
}
define service {
    service_description svc_inherited2
    use                 service-template
    host_name           host-template
    check_command       check_ssh

    register            0
}

# Create an host that will inherit all the services thanks to template inheritance
define host {
    host_name           test_host
    use                 host-template
}
define host {
    host_name           test_host2
    use                 host-template
}

# ---------------------------------------------
# NSCA passively monitored host
define host{
    name                                generic-passive-host

    register                            0

    ; Default check command (should be none but Alignak do not like this;))
    check_command                       _internal_host_up
    check_period                        24x7

    passive_checks_enabled              1
    active_checks_enabled               0

    check_freshness                     1
    freshness_threshold                 60   ; Only one minute for test purpose (should be longer ;))
    freshness_state                     d    ; Set as DOWN
}
# Windows NSCA passively monitored host
define host {
    name						        windows-passive-host
    use            				        generic-passive-host
    register       				        0

    _OS                                 Windows
    _LOC_LNG                            1.87528
}

# NSCA passively monitored service
# This service template is having an host_name property which is a template; as such
# we are linking service and host templates together. All hosts using the host template
# will get all the services inherited from the service template
define service{
    name                                generic-passive-service

    host_name                           generic-passive-host
    service_description                 generic_passive_service

    register                            0

    ; Default check command
    check_command                       _echo
    passive_checks_enabled              1
    active_checks_enabled               0

    check_freshness                     1
    freshness_threshold                 20
    freshness_state                     x    ; Set as UNREACHABLE

    _MY_HOST_NAME                       $HOSTNAME$
}
# Windows NSCA passively monitored service
define service {
	name			                    windows-passive-service
	use 		                        generic-passive-service
    # Mandatory to define this because inheritance seems broken here !
    check_command                       _echo
    register                            0
}

# Define some services templates
define service {
    service_description         nsca_uptime
    use                         windows-passive-service
    register                    0
    host_name                   windows-passive-host
    # Mandatory to define this because inheritance seems broken here !
    check_command                       _echo
}
define service {
    service_description         nsca_cpu
    use                         windows-passive-service
    register                    0
    host_name                   windows-passive-host
    # Mandatory to define this because inheritance seems broken here !
    check_command                       _echo
}

# Define an host that will get the formerly defined services
define host {
    use                            windows-passive-host

    host_name                      test.host.A
    address                        0.0.0.0
}
