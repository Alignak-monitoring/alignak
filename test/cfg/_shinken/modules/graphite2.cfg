## Module:      graphite
## Loaded by:   Broker
# Export host and service performance data to Graphite carbon process.
# Graphite is a time series database with a rich web service interface, viewed
# as a modern alternative to RRDtool.  http://graphite.wikidot.com/start
define module {
   module_name     graphite2
   module_type     graphite_perfdata

   # Database configuration
   #db_host           glpi        ; GLPI database server name or IP
   #db_port           3306
   db_database       glpidb      ; Database name
   #db_user           shinken     ; Database user
   #db_password       shinken
   db_table          glpi_plugin_kiosks_metrics
   # This table structure is:
        # CREATE TABLE `glpi_plugin_kiosks_metrics` (
        #  `id` int(11) NOT NULL AUTO_INCREMENT,
        #  `timestamp` int(11) DEFAULT '0',
        #  `hostname` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
        #  `service` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,
        #  `counter` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,
        #  `value` decimal(8,2) DEFAULT '0.00',
        #  `collected` tinyint(1) DEFAULT '0',
        #  PRIMARY KEY (`id`),
        #  KEY `timestamp` (`timestamp`),
        #  KEY `hostname` (`hostname`),
        #  KEY `service_counter` (`service`,`counter`)
        #) ENGINE=MyISAM AUTO_INCREMENT=11 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci

   #db_character_set  utf8

   # Graphite server / port to use
   # default to localhost:2003
   host            192.168.0.70
   #port            2003

   # Cache management.
   # Maximum cache size - number of packets stored in a queue
   # When maximum length is reached, oldest packets are removed ...
   #cache_max_length     1000

   # Commit volume
   # Maximum number of cached packets sent each time a received packet is sent when connection is restored
   #cache_commit_volume     100

   # Optionally specify a source identifier for the metric data sent to Graphite.
   # This can help differentiate data from multiple sources for the same hosts.
   #
   # Result is:
   # host.GRAPHITE_DATA_SOURCE.service.metric
   # instead of:
   # host.service.metric
   #
   # Note: You must set the same value in this module and in the Graphite UI module configuration.
   #
   # default: the variable is unset
   #graphite_data_source shinken

   # Optionally specify a latency management
   # If this parameter is enabled the metric time will be change to remove latency
   # For example if the check was scheduled at 0 but was done at 2,
   # the timestamp associated to the data will be 0
   # Basically this ignore small latency in order to have regular interval between data.
   # We skip an Graphite limitation that expect a specific timestamp range for data.
   # default is to ignore latency
   #ignore_latency_limit 15

   # Optionally specify a service description for host check metrics
   #
   # Graphite stores host check metrics in the host directory whereas services
   # are stored in host.service directory. Host check metrics may be stored in their own
   # directory if it is specified.
   #
   # default: __HOST__
   hostcheck           __HOST__

   # Optionally specify filtered metrics
   # Filtered metrics will not be sent to Carbon/Graphite
   #
   # Declare a filter parameter for each service to be filtered:
   # filter    service_description:metrics
   #
   # metrics is a comma separated list of the metrics to be filtered
   # default: no filtered metrics
   #filter           cpu:1m,5m
   #filter           mem:3z
   filter Load:load_15_min,load_5_min
   #filter Memory:
   filter test2:

   # Optionally specify extra metrics
   # warning, critical, min and max information for the metrics are not often necessary
   # in Graphite
   # You may specify which one are to be sent or not
   # Default is not to send anything else than the metric value
   #send_warning      False
   #send_critical     False
   #send_min          False
   #send_max          False
}
