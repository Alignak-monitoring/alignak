## Module:      mongo-logs
## Loaded by:   Broker
# Store the Shinken logs in a mongodb database
# Store hosts/services availability in a mongodb database
#
# This module is necessary if you intend to use the logs and availability features offered
# by the Shinken WebUI2
#
# -----------------
# IMPORTANT ADVICE:
# -----------------
# If you change the default configuration in this file, you MUST copy the same configuration
# parameters in your webui2.cfg file.
#
# Please note that the max_logs_age parameter is not used in the WebUI
#
define module {
   module_name         mongo-logs
   module_type         mongo-logs

   # MongoDB connection string
   # EXAMPLE
   # To describe a connection to a replica set named test, with the following mongod hosts:
   #   db1.example.net on port 27017 with sysop credentials and
   #   db2.example.net on port 2500.
   # You would use a connection string that resembles the following:
   #   uri     mongodb://sysop:password@db1.example.net,db2.example.net:2500/?replicaSet=test
   #
   # Default is a non replicated localhost server
   uri                  mongodb://localhost

   # Database name where to store the logs/availability collection
   # Default is shinken
   #database             shinken

   # DB connection test period
   # Every db_test_period seconds, the module tests if the DB connection is alive
   # Default is 0 to skip this test
   db_test_period    300

   ### ------------------------------------------------------------------------
   ### Logs management
   ### ------------------------------------------------------------------------
   # Logs collection name
   # Default is a collection named logs
   #logs_collection      logs

   # Logs rotation
   #
   # Remove logs older than the specified value
   # Value is specified as :
   # 1d: 1 day
   # 3m: 3 months ...
   # d = days, w = weeks, m = months, y = years
   # Default is 3 months
   #max_logs_age    3m

   # Commit volume
   # The module commits at most commit_volume logs in the DB at every commit period
   # Default is 1000 lines
   #commit_volume     1000

   # Commit period
   # Every commit_period seconds, the module stores the received logs in the DB
   # Default is to commit every 10 seconds
   #commit_period     10
   commit_period     60

   ### ------------------------------------------------------------------------
   ### Hosts/services management
   ### ------------------------------------------------------------------------
   # Hosts/services availability collection name
   # Default is a collection named availability
   #hav_collection      availability

   # Services filtering
   # Filter is declared as a comma separated list of items:
   # An item can be a regexp which is matched against service description (hostname/service)
   #  ^test*, matches all hosts which name starts with test
   #  /test*, matches all services which name starts with test
   #
   # An item containing : is a specific filter (only bi is supported currently)
   #  bi:>x, bi:>=x, bi:<x, bi:<=x, bi:=x to match business impact

   # default is to consider only the services which business impact is > 4
   # 3 is the default value for business impact if property is not explicitely declared
   # Default is only bi>4 (most important services)
   #services_filter bi:>4
   services_filter bi:>0
}
