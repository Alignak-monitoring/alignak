language: python
sudo: required
python:
  - "2.6"
  - "2.7"
env:
  - TEST_SUITE=unit_tests
  - TEST_SUITE=integration
  - TEST_SUITE=codingstandard
  - TEST_SUITE=virtualenv

matrix:
  fast_finish: true
  allow_failures:
    - python: "2.6"
  exclude:
  - python: "2.6"
    env: TEST_SUITE=integration
  - python: "2.6"
    env: TEST_SUITE=codingstandard
  - python: "2.6"
    env: TEST_SUITE=virtualenv

services:
  - mongodb

# command to install dependencies
# some are only used for travis/coveralls so we are installing them here only
install:
  # Remove python warnings
  - unset PYTHONWARNINGS
  - ./test/setup_test.sh

# command to run tests
script:
  # To help eventual debug, knowing which exact packages are installed can be rather useful ;)
  - pip freeze

  - |
    if [[ $TEST_SUITE == 'virtualenv' ]]; then
      # Virtual environment setup tests
      ./test/test_virtualenv_setup.sh || travis_terminate 1;
    fi

  - |
    if [[ $TEST_SUITE == 'codingstandard' ]]; then
      # Static code analysis
      # -- pycodestyle (former pep8)
      # Exclude the dictconfig.py vendor file
      travis_wait 60 pycodestyle --max-line-length=100 --exclude='*.pyc,alignak/misc/dictconfig.py' alignak/* || travis_terminate 1;
      # -- pylint
      unset PYTHONWARNINGS
      travis_wait 60 pylint --rcfile=.pylintrc -r no alignak || travis_terminate 1;
      export PYTHONWARNINGS=all
      # -- pep257
      travis_wait 60 pep257 --select=D300 alignak || travis_terminate 1;
    fi

  - |
    if [[ $TEST_SUITE == 'unit_tests' && $TRAVIS_PYTHON_VERSION == '2.7' ]]; then
      # Run unit tests and code coverage analysis
      cd test
      # Run test suite with py.test running its coverage plugin
      # Dump the 10 slowest tests
      # Do not print log synthesis on test end
      echo "Starting tests..."
      pytest --verbose --durations=10 --no-print-logs --cov=alignak --cov-report term-missing --cov-config .coveragerc test_*.py || travis_terminate 1;
      cd ..
      cp test/.coverage .
      # codecov
      bash <(curl -s https://codecov.io/bash) -e TEST_SUITE
    fi

  - |
    if [[ $TEST_SUITE == 'unit_tests' && $TRAVIS_PYTHON_VERSION == '2.6' ]]; then
      # Run unit tests and code coverage analysis
      cd test
      # Run test suite with py.test running its coverage plugin
      # Dump the 10 slowest tests
      # Do not print log synthesis on test end
      echo "Starting tests..."
      pytest --verbose --durations=10 --cov=alignak --cov-report term-missing --cov-config .coveragerc test_*.py || travis_terminate 1;
      cd ..
      cp test/.coverage .
      # codecov
      bash <(curl -s https://codecov.io/bash) -e TEST_SUITE
    fi

  - |
    if [[ $TEST_SUITE == 'integration' ]]; then
      # Run load tests and code dynamic analysis
      cd test_load
      # Run test suite with py.test running its coverage plugin
      # Dump the 10 slowest tests - do not capture to have some activity in Travis
      travis_wait 60 pytest --durations=10 --no-print-logs --capture=no -s --cov=alignak --cov-config .coveragerc test_*.py || travis_terminate 1;
      cd ..
      cp test_load/.coverage .
      # codecov
      bash <(curl -s https://codecov.io/bash) -e TEST_SUITE

      # Run load tests and code dynamic analysis
      cd test_run
      # Run test suite with py.test running its coverage plugin
      # Dump the 10 slowest tests - do not capture to have some activity in Travis
      travis_wait 60 pytest --durations=10 --no-print-logs --capture=no -s --cov=alignak --cov-config .coveragerc test_*.py || travis_terminate 1;
      cd ..
      cp test_run/.coverage .
      # codecov
      bash <(curl -s https://codecov.io/bash) -e TEST_SUITE
    fi

after_success:
  - |
    if [[ $TEST_SUITE == 'unit_tests' && $TRAVIS_PYTHON_VERSION == '2.7' ]]; then
      # to get coverage data with relative paths and not absolute we have to
      # execute coveralls from the base directory of the project,
      # so we need to move the .coverage file here :
      # mv test/.coverage ./coverage_unit
      # mv test_load/.coverage ./coverage_load
      # mv test_run/.coverage ./coverage_run
      # Combine the coverage collected data
      # coverage combine coverage_unit coverage_load coverage_run

      echo "Submitting coverage results to coveralls.io..."
      coveralls --rcfile=test/.coveragerc
      echo "Submitted"
    fi

  - if [[ $TEST_SUITE == 'unit' && $TRAVIS_PYTHON_VERSION == '2.7' ]]; then ./package.sh $TRAVIS_BRANCH $TRAVIS_PYTHON_VERSION; fi

notifications:
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/b40202d91150d5c75582
    on_success: change  # options: [always|never|change] default: always
    on_failure: always  # options: [always|never|change] default: always
    on_start: never     # default: false

deploy:
  - provider: bintray
    skip_cleanup: true
    file: .bintray.json
    user: ddurieux
    key:
      secure: "yuhgpgyEEvYnY1+a+Y68L7nFFUJYcSAOEo66pYis8ZduHN+1NWbynDdu7I/ndgk66iZOFA2XyVccE9kP0lLpAcQI2h8/nxFnydwzASJTusacgh/CJPrcNCbS+j/y7pWRDKkH9HRy9FWwx0DWm4PYiDe4kPVqsymuHV5eZmFpQfJMsc8e+/mfFJ2d7P0RC2fEEM1fpOhiVmL8WePmxLaNtoPudFeDHNVYd1ebNdDcmpsiLQeG/aRO2/kKGlbTREN+pm83VstwBOiVfiz3I3aj9EUz1XTTQUlVL9nTkNjwcmyF0YI5wR0ef6re0lDKrgISsRN3QP9/YJ0596k1CwRXr08vUKqMw2pZMAzNyJiyGTwus0+NN8zopLEz+ZfmRBViz/Qh8oTvgso9LQPzvy8LDEpfAzS9WHJFvkJm/SlT7VNHfJfh5SLuVWrt532Aqr6dhyuMBisQdwAo2Fo1DLkJDDDRAEiuJbceTZMYoQv29yTj81cVUmdCa67b9BrRbn+c//2xmZXpcbcyoEOjMBvIN1tlyvh7A/CoHflQak16TPfS5YkFDiy/2YTGi2aYlFVkdJwdU77By7IA2cGnupyywfOOxmLl1x/rnKfJ06G2vblBYSkBCiokO2pwArUZW2W5yVY7ycf/fMOiqKDpn2RJYqpeloeDf+c0aZFTmvzY4ug="
    on:
      branch: develop
  - provider: bintray
    skip_cleanup: true
    file: .bintray.json
    user: ddurieux
    key:
      secure: "yuhgpgyEEvYnY1+a+Y68L7nFFUJYcSAOEo66pYis8ZduHN+1NWbynDdu7I/ndgk66iZOFA2XyVccE9kP0lLpAcQI2h8/nxFnydwzASJTusacgh/CJPrcNCbS+j/y7pWRDKkH9HRy9FWwx0DWm4PYiDe4kPVqsymuHV5eZmFpQfJMsc8e+/mfFJ2d7P0RC2fEEM1fpOhiVmL8WePmxLaNtoPudFeDHNVYd1ebNdDcmpsiLQeG/aRO2/kKGlbTREN+pm83VstwBOiVfiz3I3aj9EUz1XTTQUlVL9nTkNjwcmyF0YI5wR0ef6re0lDKrgISsRN3QP9/YJ0596k1CwRXr08vUKqMw2pZMAzNyJiyGTwus0+NN8zopLEz+ZfmRBViz/Qh8oTvgso9LQPzvy8LDEpfAzS9WHJFvkJm/SlT7VNHfJfh5SLuVWrt532Aqr6dhyuMBisQdwAo2Fo1DLkJDDDRAEiuJbceTZMYoQv29yTj81cVUmdCa67b9BrRbn+c//2xmZXpcbcyoEOjMBvIN1tlyvh7A/CoHflQak16TPfS5YkFDiy/2YTGi2aYlFVkdJwdU77By7IA2cGnupyywfOOxmLl1x/rnKfJ06G2vblBYSkBCiokO2pwArUZW2W5yVY7ycf/fMOiqKDpn2RJYqpeloeDf+c0aZFTmvzY4ug="
    on:
      tags: true
