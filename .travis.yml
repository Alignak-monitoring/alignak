language: python
sudo: required
python:
  - "2.6"
  - "2.7"
env:
  - TEST_SUITE=unit_tests
  - TEST_SUITE=integration
  - TEST_SUITE=codingstandard
  - TEST_SUITE=virtualenv

matrix:
  fast_finish: true
  allow_failures:
    - python: "2.6"
  exclude:
  - python: "2.6"
    env: TEST_SUITE=integration
  - python: "2.6"
    env: TEST_SUITE=codingstandard
  - python: "2.6"
    env: TEST_SUITE=virtualenv

services:
  - mongodb

# command to install dependencies
# some are only used for travis/coveralls so we are installing them here only
install:
  # Remove python warnings
  - unset PYTHONWARNINGS
  - ./test/setup_test.sh

# command to run tests
script:
  # To help eventual debug, knowing which exact packages are installed can be rather useful ;)
  - pip freeze

  - |
    if [[ $TEST_SUITE == 'virtualenv' ]]; then
      # Virtual environment setup tests
      ./test/test_virtualenv_setup.sh || travis_terminate 1;
    fi

  - |
    if [[ $TEST_SUITE == 'codingstandard' ]]; then
      # Static code analysis
      # -- pycodestyle (former pep8)
      # Exclude the dictconfig.py vendor file
      travis_wait 60 pycodestyle --max-line-length=100 --exclude='*.pyc,alignak/misc/dictconfig.py' alignak/* || travis_terminate 1;
      # -- pylint
      unset PYTHONWARNINGS
      travis_wait 60 pylint --rcfile=.pylintrc -r no alignak || travis_terminate 1;
      export PYTHONWARNINGS=all
      # -- pep257
      travis_wait 60 pep257 --select=D300 alignak || travis_terminate 1;
    fi

  - |
    if [[ $TEST_SUITE == 'unit_tests' ]]; then
      # Run unit tests and code coverage analysis
      cd test
      coverage erase
      # Run test suite with py.test running its coverage plugin
      # Dump the 10 slowest tests
      - |
        if [[ $TRAVIS_PYTHON_VERSION == '2.7' ]]; then
          pytest --durations=10 --cov=alignak --cov-report term-missing --cov-config .coveragerc test_*.py
          coverage combine
          cd ..
          cp test/.coverage .
          codecov
          echo 'Submitted'
        fi
      - |
        if [[ $TRAVIS_PYTHON_VERSION == '2.6' ]]; then
          pytest --durations=10 --cov=alignak --cov-report term-missing --cov-config .coveragerc test_a*.py test_b*.py test_d*.py test_e*.py test_f*.py test_h*.py test_i*.py || travis_terminate 1;
          pytest --durations=10 --cov=alignak --cov-report term-missing --cov-config .coveragerc test_l*.py test_m*.py test_n*.py test_p*.py || travis_terminate 1;
          pytest --durations=10 --cov=alignak --cov-report term-missing --cov-config .coveragerc test_r*.py test_s*.py test_t*.py test_u*.py || travis_terminate 1;
        fi
    fi

  - |
    if [[ $TEST_SUITE == 'integration' ]]; then
      # Run load tests and code dynamic analysis
      cd test_load
      # Run test suite with py.test running its coverage plugin
      # Dump the 10 slowest tests - do not capture to have some activity in Travis
      travis_wait 60 pytest --durations=10 --no-print-logs --capture=no -s --cov=alignak --cov-config .coveragerc test_*.py || travis_terminate 1;
      cd ..
      cp test_load/.coverage .
      codecov

      # Run load tests and code dynamic analysis
      cd test_run
      # Run test suite with py.test running its coverage plugin
      # Dump the 10 slowest tests - do not capture to have some activity in Travis
      travis_wait 60 pytest --durations=10 --no-print-logs --capture=no -s --cov=alignak --cov-config .coveragerc test_*.py || travis_terminate 1;
      cd ..
      cp test_run/.coverage .
      codecov
    fi

after_success:
  - |
    if [[ $TEST_SUITE == 'unit_tests' && $TRAVIS_PYTHON_VERSION == '2.7' ]]; then
      # to get coverage data with relative paths and not absolute we have to
      # execute coveralls from the base directory of the project,
      # so we need to move the .coverage file here :
      mv test/.coverage ./coverage_unit
      mv test_load/.coverage ./coverage_load
      mv test_run/.coverage ./coverage_run
      # Combine the coverage collected data
      coverage combine coverage_unit coverage_load coverage_run

      echo "Submitting coverage results to coveralls.io..."
      coveralls -v --rcfile=test/.coveragerc
      echo "Submitted"
    fi
